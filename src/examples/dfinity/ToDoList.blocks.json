{"version":"blocks-webapp@0.3.0","name":"To-Do List","description":"Create, display, and complete a list of tasks.","readme":"","language":"motoko","output":"import Array \"mo:base/Array\";\nimport Nat \"mo:base/Nat\";\n\nactor ToDoList {\n\tpublic type ToDo = {\n\t\tid: Nat;\n\t\tdescription: Text;\n\t\tcompleted: Bool;\n\t};\n\t\n\tpublic func clear() : async () {\n\t\ttoDoList := [];\n\t\tnextId := 0;\n\t};\n\t\n\tpublic func show() : async Text {\n\t\treturn (do {\n\t\t\tvar output : Text = \"\\n___TO-DOs___\";\n\t\t\tfor (todo : ToDo in toDoList.vals()) {\n\t\t\t\toutput #= \"\\n(\" # Nat.toText(todo.id) # \") \" # todo.description;\n\t\t\t\tif (todo.completed) { output #= \" ✔\"; };\n\t\t\t};\n\t\t\toutput\n\t\t});\n\t};\n\t\n\tpublic func add(description : Text) : async () {\n\t\ttoDoList := Array.append([(do {\n\t\t\t{\n\t\t\t\tid = (do {\n\t\t\t\t\tnextId += 1;\n\t\t\t\t\tnextId\n\t\t\t\t});\n\t\t\t\tdescription = description;\n\t\t\t\tcompleted = false;\n\t\t\t} : ToDo\n\t\t})], toDoList);\n\t};\n\t\n\tpublic func complete(id : Nat) : async () {\n\t\ttoDoList := (do {\n\t\t\tArray.map<ToDo, ToDo>(toDoList, func (todo : ToDo) : ToDo {\n\t\t\t\tif (todo.id == id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid = todo.id;\n\t\t\t\t\t\tdescription = todo.description;\n\t\t\t\t\t\tcompleted = true;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\ttodo\n\t\t\t})\n\t\t});\n\t};\n\t\n\tvar toDoList : [ToDo] = [];\n\t\n\tprivate stable var nextId : Nat = 0;\n}","nodes":{"562":{"data":{"visibility":"public","name":"show","asyncKind":"query"},"outputs":{"params":{"connections":[]},"body":{"connections":[{"node":"579","input":"statement","data":{}}]},"caller":{"connections":[]},"function":{"connections":[]}},"position":[992,448],"name":"Function"},"563":{"data":{"visibility":"public","name":"clear","asyncKind":"async"},"outputs":{"params":{"connections":[]},"body":{"connections":[{"node":"2170","input":"before","data":{}}]},"caller":{"connections":[]},"function":{"connections":[]}},"position":[992,128],"name":"Function"},"564":{"data":{"name":"toDoList","editor:advanced":false,"readonly":false},"outputs":{"setup":{"connections":[]},"value":{"connections":[]}},"position":[1216,-320],"name":"State"},"565":{"data":{"visibility":"public","name":"add","asyncKind":"async"},"outputs":{"params":{"connections":[{"node":"759","input":"param","data":{}}]},"body":{"connections":[{"node":"828","input":"before","data":{}}]},"caller":{"connections":[]},"function":{"connections":[]}},"position":[992,768],"name":"Function"},"566":{"data":{},"outputs":{"value":{"connections":[{"node":"564","input":"initialValue","data":{}}]}},"position":[960,-176],"name":"NewArray"},"567":{"data":{"visibility":"public","name":"ToDo"},"outputs":{"type":{"connections":[{"node":"566","input":"itemType","data":{}}]}},"position":[736,-176],"name":"TypeMember"},"568":{"data":{"expression":"{\r\n    id: Nat;\r\n    description: Text;\r\n    completed: Bool;\r\n}","type":{"name":"Custom","generics":[]}},"outputs":{"result":{"connections":[{"node":"567","input":"typeInput","data":{}}]}},"position":[704,-592],"name":"CodeType"},"578":{"data":{"visibility":"public","name":"complete","asyncKind":"async"},"outputs":{"params":{"connections":[{"node":"763","input":"param","data":{}}]},"body":{"connections":[{"node":"766","input":"before","data":{}}]},"caller":{"connections":[]},"function":{"connections":[]}},"position":[992,1120],"name":"Function"},"579":{"data":{},"outputs":{},"position":[2080,448],"name":"Return"},"677":{"data":{"stateNode":564},"outputs":{"value":{"connections":[{"node":"831","input":"inputs","data":{}}]}},"position":[1248,480],"name":"StateRead"},"759":{"data":{"name":"description","type":{"name":"Text","generics":[]}},"outputs":{"value":{"connections":[{"node":"773","input":"inputs","data":{}}]}},"position":[1248,928],"name":"Parameter"},"763":{"data":{"name":"id","type":{"name":"Nat","generics":[]}},"outputs":{"value":{"connections":[{"node":"765","input":"inputs","data":{}}]}},"position":[1248,1184],"name":"Parameter"},"765":{"data":{"expression":"Array.map<ToDo, ToDo>({1}, func (todo : ToDo) : ToDo {\r\n  if (todo.id == {0}) {\r\n    return {\r\n      {0} = todo.id;\r\n      description = todo.description;\r\n      completed = true;\r\n    };\r\n  };\r\n  todo\r\n})","type":{"name":"MutableArray","generics":[{"name":"Custom","generics":[]}]}},"outputs":{"result":{"connections":[{"node":"766","input":"value","data":{}}]}},"position":[1536,1152],"name":"CodeValue"},"766":{"data":{"stateNode":564},"outputs":{"after":{"connections":[]}},"position":[2080,1120],"name":"StateUpdate"},"773":{"data":{"type":{"name":"Custom","generics":[]},"expression":"{\r\n  id = {0};\r\n  description = {1};\r\n  completed = false;\r\n} : ToDo"},"outputs":{"result":{"connections":[{"node":"828","input":"value","data":{}}]}},"position":[1536,800],"name":"CodeValue"},"828":{"data":{},"outputs":{"after":{"connections":[]}},"position":[2080,768],"name":"ArrayPrepend"},"829":{"data":{"stateNode":"564"},"outputs":{"value":{"connections":[{"node":"828","input":"array","data":{}}]}},"position":[1840,688],"name":"StateRead"},"830":{"data":{"stateNode":564},"outputs":{"value":{"connections":[{"node":"765","input":"inputs","data":{}}]}},"position":[1248,1328],"name":"StateRead"},"831":{"data":{"type":{"name":"Text","generics":[]},"expression":"var output : Text = \"\\n___TO-DOs___\";\r\nfor (todo : ToDo in {0}.vals()) {\r\n  output #= \"\\n(\" # {1}.toText(todo.id) # \") \" # todo.description;\r\n  if (todo.completed) { output #= \" ✔\"; };\r\n};\r\noutput"},"outputs":{"result":{"connections":[{"node":"579","input":"value","data":{}}]}},"position":[1536,384],"name":"CodeValue"},"1000":{"data":{"path":"mo:base/Nat"},"outputs":{"value":{"connections":[{"node":"831","input":"inputs","data":{}}]}},"position":[1248,576],"name":"ReferenceImport"},"1003":{"data":{"widthPixels":781,"heightPixels":695},"outputs":{},"position":[672,-672],"name":"CommentRegion"},"1004":{"data":{"widthPixels":160,"text":"Named type"},"outputs":{},"position":[736,-224],"name":"Comment"},"1005":{"data":{"widthPixels":493,"heightPixels":219},"outputs":{},"position":[960,112],"name":"CommentRegion"},"1006":{"data":{"widthPixels":320,"text":"clear()\n\nRemove everything from the to-do list."},"outputs":{},"position":[576,160],"name":"Comment"},"1007":{"data":{"widthPixels":1328,"heightPixels":300},"outputs":{},"position":[960,352],"name":"CommentRegion"},"1008":{"data":{"widthPixels":382,"text":"show()\n\nReturn the to-do list as human-readable text."},"outputs":{},"position":[512,480],"name":"Comment"},"1010":{"data":{"widthPixels":1328,"heightPixels":393},"outputs":{},"position":[960,672],"name":"CommentRegion"},"1011":{"data":{"widthPixels":449,"text":"add(description)\n\nCreate and add an item to the to-do list. The item is assigned a unique ID based on the \"nextId\" state."},"outputs":{},"position":[448,832],"name":"Comment"},"1013":{"data":{"widthPixels":1328,"heightPixels":358},"outputs":{},"position":[960,1088],"name":"CommentRegion"},"1014":{"data":{"widthPixels":322,"text":"complete(id)\n\nMark an item on the list as complete."},"outputs":{},"position":[576,1184],"name":"Comment"},"1015":{"data":{"widthPixels":160,"text":"Initial empty array"},"outputs":{},"position":[960,-224],"name":"Comment"},"1016":{"data":{"widthPixels":161,"text":"To-do array state"},"outputs":{},"position":[1216,-368],"name":"Comment"},"1018":{"data":{"widthPixels":416,"text":"A custom record type describing a to-do item"},"outputs":{},"position":[704,-640],"name":"Comment"},"1019":{"data":{"widthPixels":243,"text":"Create a \"ToDo\" record value"},"outputs":{},"position":[1536,752],"name":"Comment"},"1020":{"data":{"widthPixels":438,"text":"Add \"completed = true\" to any item with the given ID"},"outputs":{},"position":[1536,1104],"name":"Comment"},"1021":{"data":{"widthPixels":408,"text":"Pretty-print the list using Motoko syntax"},"outputs":{},"position":[1536,336],"name":"Comment"},"1022":{"data":{"widthPixels":185,"text":"Import from Motoko base library"},"outputs":{},"position":[1248,672],"name":"Comment"},"1023":{"data":{"name":"nextId"},"outputs":{"value":{"connections":[]},"nextValue":{"connections":[{"node":"773","input":"inputs","data":{}}]}},"position":[1248,800],"name":"CounterState"},"2170":{"data":{},"outputs":{"after":{"connections":[]}},"position":[1248,128],"name":"StateResetAll"}}}