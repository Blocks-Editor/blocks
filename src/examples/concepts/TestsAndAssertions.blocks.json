{"version":"blocks-webapp@0.3.0","name":"Tests and Assertions","description":"Browse a few example test cases.","readme":"","language":"motoko","output":"actor TestsAndAssertions {\n\tprivate stable var count : Nat = 0;\n\t\n\tlet test__2154 = do {\n\t\t// Test: [Starts at 0]\n\t\tcount := 0;\n\t\tassert (count == 0);\n\t};\n\t\n\tlet test__2151 = do {\n\t\t// Test: [Increases by 1]\n\t\tassert ((do {\n\t\t\tcount += 1;\n\t\t\tcount\n\t\t}) == 1);\n\t\tcount := 0;\n\t\tassert (count == 0);\n\t};\n\t\n}","nodes":{"2150":{"data":{"name":"count"},"outputs":{"value":{"connections":[{"node":"2156","input":"left","data":{}}]},"nextValue":{"connections":[{"node":"2159","input":"left","data":{}}]}},"position":[-192,-96],"name":"CounterState"},"2151":{"data":{"description":"Increases by 1"},"outputs":{"body":{"connections":[{"node":"2158","input":"before","data":{}}]}},"position":[-192,384],"name":"TestCase"},"2154":{"data":{"description":"Starts at 0"},"outputs":{"body":{"connections":[{"node":"2161","input":"before","data":{}}]}},"position":[-192,128],"name":"TestCase"},"2155":{"data":{},"outputs":{"after":{"connections":[]}},"position":[992,128],"name":"Assert"},"2156":{"data":{},"outputs":{"result":{"connections":[{"node":"2155","input":"conditions","data":{}}]}},"position":[256,160],"name":"CompareEqual"},"2157":{"data":{"value":0},"outputs":{"value":{"connections":[{"node":"2156","input":"right","data":{}}]}},"position":[32,224],"name":"LiteralNat"},"2158":{"data":{},"outputs":{"after":{"connections":[{"node":"2161","input":"before","data":{}}]}},"position":[512,384],"name":"Assert"},"2159":{"data":{},"outputs":{"result":{"connections":[{"node":"2158","input":"conditions","data":{}}]}},"position":[256,416],"name":"CompareEqual"},"2160":{"data":{"value":1},"outputs":{"value":{"connections":[{"node":"2159","input":"right","data":{}}]}},"position":[32,480],"name":"LiteralNat"},"2161":{"data":{},"outputs":{"after":{"connections":[{"node":"2155","input":"before","data":{}}]}},"position":[752,128],"name":"StateResetAll"},"2162":{"data":{"widthPixels":161,"text":"Reset back to 0"},"outputs":{},"position":[752,80],"name":"Comment"},"2163":{"data":{"widthPixels":319,"text":"Create a simple counter\n(usually for assigning sequential IDs)."},"outputs":{},"position":[-576,-96],"name":"Comment"},"2164":{"data":{"widthPixels":160,"text":"(count += 1) == 1"},"outputs":{},"position":[256,544],"name":"Comment"},"2165":{"data":{"widthPixels":161,"text":"count == 0"},"outputs":{},"position":[256,288],"name":"Comment"},"2167":{"data":{"description":"Always false","inactive":true},"outputs":{"body":{"connections":[{"node":"2168","input":"before","data":{}}]}},"position":[-192,736],"name":"TestCase"},"2168":{"data":{},"outputs":{"after":{"connections":[]}},"position":[512,736],"name":"Assert"},"2169":{"data":{"value":false},"outputs":{"value":{"connections":[{"node":"2168","input":"conditions","data":{}}]}},"position":[256,768],"name":"LiteralBool"},"2170":{"data":{"widthPixels":161,"text":"Deactivated"},"outputs":{},"position":[-192,896],"name":"Comment"},"2171":{"data":{"widthPixels":321,"text":"The counter should always start at 0."},"outputs":{},"position":[-576,160],"name":"Comment"},"2174":{"data":{"widthPixels":160,"text":"false"},"outputs":{},"position":[256,864],"name":"Comment"},"2175":{"data":{"widthPixels":160,"text":"Runtime error!"},"outputs":{},"position":[512,832],"name":"Comment"},"2176":{"data":{"widthPixels":162,"text":"Ensure the current value is now 0"},"outputs":{},"position":[992,64],"name":"Comment"},"2177":{"data":{"widthPixels":320,"text":"The counter should increase by 1."},"outputs":{},"position":[-576,416],"name":"Comment"},"2179":{"data":{"widthPixels":307,"text":"When enabled, this test case will always result in an error (i.e. \"trap\")."},"outputs":{},"position":[-576,768],"name":"Comment"},"2180":{"data":{"widthPixels":940,"heightPixels":247},"outputs":{},"position":[-224,704],"name":"CommentRegion"}}}