// TODO: move color definitions to JS categories?
$any-color: #f5a;
$unit-color: #333;
$value-color: #8fa;
$tuple-color: #2aa;
$function-color: #fd3;
$object-color: #af8;
$optional-color: #384;
$collection-color: #1c8;
$type-color: #2af;
$effect-color: #ccc;
$member-color: #8af;
$parameter-color: #a8f;
$actor-color: #fa8;
$module-color: #888;

$identifier-color: #eee;
$bool-color: #d8f;
$float-color: #5df;
$int-color: #6fd;
$nat-color: #58f;

$any-gradient: conic-gradient(at center, orange, yellow, green, blue, indigo, violet, orange);

@mixin node-color($name, $color) {
  .node-editor {
    .node .socket.#{$name} {
      background: $color !important;
    }

    .connection.socket-output-#{$name} .main-path {
      stroke: $color !important;
    }
  }
}

@include node-color("unit", $unit-color);
@include node-color("category-default", $any-color);
@include node-color("category-default", $any-gradient); // Prioritize gradient
@include node-color("category-values", $value-color);
@include node-color("category-tuples", $tuple-color);
@include node-color("category-functions", $function-color);
@include node-color("category-objects", $object-color);
@include node-color("category-optionals", $optional-color);
@include node-color("category-collections", $collection-color);
@include node-color("category-types", $type-color);
@include node-color("category-effects", $effect-color);
@include node-color("category-members", $member-color);
@include node-color("category-actors", $actor-color);
@include node-color("category-modules", $module-color);
@include node-color("category-parameters", $parameter-color);

@include node-color("identifier", $identifier-color);
@include node-color("bool", $bool-color);
@include node-color("float", $float-color);
@include node-color("category-integers", $int-color);
@include node-color("category-naturals", $nat-color);

$grid-color: #FFF2;
$grid-size: 32px;
$grid-area: $grid-size * 10000;

.node-editor {
  background: #555;

  .dragging > & {
    background: #777 !important;
  }

  .grid {
    display: table;
    z-index: -5;
    position: absolute;
    top: -$grid-area;
    left: -$grid-area;
    width: 2 * $grid-area;
    height: 2 * $grid-area;
    background-size: $grid-size $grid-size;
    background-image: linear-gradient(to right, $grid-color 1px, transparent 1px), linear-gradient(to bottom, $grid-color 1px, transparent 1px);
  }

  .node {
    width: 189px; // TODO: exorcise magic number
    background: #111A;
    border-color: #111 !important;
    box-shadow: 0 4px 8px #000A;

    &.node-wide {
      width: 445px; // TODO
    }

    &:hover {
      background: #222A;
    }

    &.selected {
      background: #777E !important;
      border-color: #AAA !important;
    }

    &:not(.selected) .header {
      background: #333;
    }

    .socket {
      background: #444;
      border-color: #222 !important;
      transform: scale(.8);

      &.multiple {
        // Multiple-input sockets should have a different appearance
        border-width: 3px;
      }

      &.reversed {
        // Reversed sockets should look like right-facing triangles/carets
        border-radius: 0;
      }

      &.occupied {
        // Occupied sockets could look slightly different
        //opacity: .8;
      }
    }
  }

  .connection .main-path {
    stroke: #333;
    stroke-width: 3px;
  }

  .node-shortcut-button {
    background: #222 !important;

    &:hover {
      z-index: 10;
      transform: scale(1.1);
    }
  }

  .context-menu {
    font-size: 14px;
    display: inline-block;
    background: #111D;
    z-index: -100;

    .context-menu-action {
      color: #FFF;
      cursor: pointer;
      padding: .25em;

      &:hover {
        background: #0005;
      }

      &.selected {
        background: #0003;
      }
    }

    .context-menu-search {
      color: #FFF;
      background: none;
    }

    .context-menu-search-area {
      min-width: 10em;
      max-height: 25em;
      overflow-y: auto;
    }

    .context-menu-icon {
      margin-right: .5em;
      vertical-align: text-bottom;
      opacity: .8;
    }
  }

  input, select {
    background-color: #111A;
    color: white;
    border: 1px solid #AAA;

    &.invalid {
      border-color: #f55 !important;
    }

    option {
      background-color: #222;
    }
  }
}

