{"version":3,"sources":["components/rete/controls/NumberControlHandle.js","components/common/inputs/TypeSelect.js","block-types/types.js","components/rete/controls/TypeControlHandle.js","components/rete/controls/NodeControlHandle.js","components/rete/controls/CheckboxControlHandle.js","block-categories/categories.js","contexts/EventsContext.js","block-patterns/operator-patterns.js","hooks/useListener.js","block-patterns/statement-patterns.js","hooks/useControlState.js","hooks/useReactTooltip.js","editor/blocks.js","block-patterns/literal-patterns.js","blocks/State.js","block-patterns/member-patterns.js","utils/getBlockLabel.js","compilers/MotokoCompiler.js","compilers/Compiler.js","components/rete/controls/TextControlHandle.js","utils/getDefaultLabel.js","utils/getNodeLabel.js","config/configureMonaco.js","components/monaco/CodeEditor.js","components/rete/controls/CodeControlHandle.js","block-patterns/code-patterns.js","components/common/Loading.js","components/rete/controls/OutputControlHandle.js","block-patterns/compile-patterns.js","components/rete/controls/SelectControlHandle.js","block-patterns/control-patterns.js","examples/examples.js","blocks sync /.js$","blocks/Actor.js","blocks/ActorClass.js","blocks/Add.js","blocks/And.js","blocks/Await.js","blocks/CodeType.js","blocks/CodeValue.js","blocks/CollectionSize.js","blocks/CompareEqual.js","blocks/CompareGreater.js","blocks/CompareGreaterEqual.js","blocks/CompareLess.js","blocks/CompareLessEqual.js","blocks/CompareNotEqual.js","blocks/CompileMotoko.js","blocks/CompileType.js","blocks/Conditional.js","blocks/ConditionalValue.js","blocks/Divide.js","blocks/Function.js","blocks/FunctionCall.js","blocks/LiteralBool.js","blocks/LiteralFloat.js","blocks/LiteralIdentifier.js","blocks/LiteralInt.js","blocks/LiteralNat.js","blocks/LiteralPair.js","blocks/LiteralPairType.js","blocks/LiteralText.js","blocks/LiteralTuple.js","blocks/LiteralTupleType.js","blocks/LiteralType.js","blocks/LoopWhile.js","blocks/MapGet.js","blocks/MapPut.js","blocks/MapRemove.js","blocks/Multiply.js","blocks/NewHashMap.js","blocks/Not.js","blocks/Null.js","blocks/Optional.js","blocks/OptionalUnwrap.js","blocks/Or.js","blocks/Parameter.js","blocks/Return.js","blocks/StateRead.js","blocks/StateUpdate.js","blocks/Subtract.js","blocks/TextConcat.js","blocks/TypeMember.js","blocks/TypeMemberReference.js","blocks/Variable.js","plugins/rete-blocks-contextmenu-plugin/components/ContextMenu.js","plugins/rete-blocks-contextmenu-plugin/contexts/MenuContext.js","plugins/rete-blocks-contextmenu-plugin/components/MenuIcon.js","plugins/rete-blocks-contextmenu-plugin/components/MenuAction.js","plugins/rete-blocks-contextmenu-plugin/components/menus/SelectionMenu.js","plugins/rete-blocks-contextmenu-plugin/components/MenuComponent.js","plugins/rete-blocks-contextmenu-plugin/components/MenuSearch.js","plugins/rete-blocks-contextmenu-plugin/components/menus/PlacementMenu.js","plugins/rete-blocks-contextmenu-plugin/hooks/useEditorComponents.js","plugins/rete-blocks-contextmenu-plugin/index.js","components/rete/sockets/SocketHandle.js","components/rete/nodes/parts/DynamicTitle.js","utils/getPropLabel.js","utils/bindNodeInput.js","components/rete/nodes/parts/ShortcutButton.js","components/rete/nodes/NodeHandle.js","editor/controls/BaseControl.js","editor/controls/PropControl.js","editor/components/BaseComponent.js","editor/sockets/TypeSocket.js","editor/sockets/PropOutputSocket.js","editor/components/BlockComponent.js","compilers/NodeCompiler.js","compilers/TypeCompiler.js","editor/BlocksNodeEditor.js","plugins/rete-vertical-sort-plugin/index.js","plugins/rete-connection-drop-plugin/index.js","plugins/rete-connection-opacity-plugin/index.js","plugins/rete-drag-button-plugin/index.js","components/common/menus/TopMenu.js","components/common/menus/MenuItem.js","components/common/menus/MenuButton.js","components/common/FileDropZone.js","components/rete/LoadProjectMenu.js","components/rete/EditorMenu.js","components/rete/Editor.js","components/pages/editor/EditorPage.js","utils/isEmbedded.js","hooks/useRedraw.js","components/GlobalTooltip.js","reportWebVitals.js","components/App.js","index.js"],"names":["NumberControlHandle","control","bindInput","validation","min","max","step","useControlState","value","setValue","type","style","width","ref","onChange","event","target","TypeSelect","constraintType","abstract","invalid","others","anyType","types","TYPE_MAP","values","filter","data","isSubtype","events","useContext","EventsContext","getType","err","undefined","emit","ERROR_EVENT","some","t","useReactTooltip","className","classNames","name","label","map","generics","i","baseType","getDefaultLabel","genericNames","splice","toJSON","Type","parent","meta","Error","this","buildType","Object","assign","isAbstract","defaultValue","other","length","every","equals","arbitraryGenerics","getSharedType","toTypeString","call","g","join","Map","createType","category","reversed","anyReversedType","typeType","controlType","config","validate","nodeType","editor","useState","nodes","setNodes","useListener","EDITOR_CHANGE_EVENT","blockName","block","blockFilter","Array","isArray","getBlock","n","includes","String","id","maxWidth","node","getNodeLabel","JSON","stringify","valueType","identifierType","TextControlHandle","pattern","effectType","toMotoko","memberType","singleOutput","actorType","paramType","boolType","checked","verticalAlign","textType","minLength","maxLength","floatType","intType","natType","tupleType","unitType","of","optionalType","collectionType","mapType","item","key","asyncType","set","getGenericType","parentData","parentMeta","arguments","has","get","Category","root","CATEGORY_MAP","createCategory","getCategory","defaultCategory","stateCategory","color","icon","FaDatabase","functionCategory","FaCubes","paramCategory","FaLongArrowAltRight","typeCategory","FaTextHeight","collectionCategory","FaTh","compilerCategory","FaCode","expressionCategory","FaEject","operatorCategory","FaFilter","actorCategory","FaFont","effectCategory","FaStream","literalCategory","FaPlusCircle","decompositionCategory","FaNetworkWired","EDITOR_SAVE_EVENT","PROJECT_EXPORT_EVENT","PROJECT_LOAD_EVENT","PROJECT_CLEAR_EVENT","EventEmitter","setMaxListeners","on","console","error","window","EVENTS","React","createContext","unaryOperatorBlock","symbol","evaluate","topRight","title","inputs","outputs","input","binaryOperatorBlock","inputType","resultType","left","right","arithmeticOperatorBlock","args","numberComparisonOperatorBlock","listener","options","useEffect","domTarget","addEventListener","removeEventListener","off","defaultType","statementBlock","compileFn","beforeProp","inferType","after","props","result","topLeft","optional","endStatementBlock","statementProp","getValue","updateVisualValue","notifyEditorChange","timeout","deps","clearTimeout","setTimeout","ReactTooltip","rebuild","allBlocks","blockNames","Set","blockContext","require","addProps","propList","prop","hasOwnProperty","keys","forEach","path","basename","default","entries","controls","output","push","log","add","BLOCK_MAP","shortcuts","s","literalBlock","stringifier","stateReadIcon","FaAngleRight","stateWriteIcon","FaAngleDoubleRight","memberBlock","info","computeTitle","computeMemberName","compilers","getInput","motoko","getTypeString","nodeKey","initialValue","visibility","flexible","modifiers","m","memberProp","stringSelectProp","getBlockLabel","capitalCase","importRef","resolveImportRefs","code","imports","replace","match","substring","lastIndexOf","MotokoCompiler","r","postCompile","warn","Compiler","UndefinedInputError","compileKey","Rete","Node","find","getNode","_output","multi","connections","c","_compileConnection","_input","_control","_prop","getInputArgs","defaultCompile","trigger","cached","defineProperty","connection","from","to","getOutput","autoComplete","autoCorrect","placeholder","text","sentenceCase","simplified","configureMonaco","monaco","languages","register","setLanguageConfiguration","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","accessmodifiers","typeKeywords","operators","symbols","escapes","tokenizer","cases","include","token","bracket","next","comment","string","whitespace","CodeEditor","defaultLanguage","beforeMount","newValue","minimap","enabled","wordWrap","wrappingIndent","scrollBeyondLastLine","fontSize","CodeControlHandle","height","replaceRegex","parseInputs","expression","replaceAll","codeBlock","Loading","promise","loading","children","status","setStatus","setResult","Promise","resolve","then","catch","OutputControlHandle","tooltipRef","query","findValue","a","valuePromise","setValuePromise","copied","setCopied","showTooltip","show","readOnly","Button","size","variant","onClick","compileBlock","compilerKey","displayFn","queryFor","inputKey","controlProps","SelectControlHandle","findLabel","option","charAt","toUpperCase","examples","module","exports","getExampleProjects","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","global","members","params","b","condition","trueCase","falseCase","falsePart","defaultReturnType","asyncKind","returnType","compiler","shared","body","returnString","FaPlayCircle","functionNode","paramNames","_","withMeta","FaItalic","loop","FaEllipsisH","hashMapImportRef","keyType","valueCase","nullCase","valuePart","nullPart","typeString","FaCaretLeft","stateNode","typeInput","typeNode","ContextMenu","x","y","styleProp","handleCloseMenu","useMemo","position","top","bindScreen","useCallback","el","stopPropagation","bindContainer","moveIntoWindow","offset","getBoundingClientRect","bottom","innerHeight","onresize","pointerEvents","onKeyDown","keyCode","onMouseDown","MenuContext","MenuIcon","MenuAction","selected","onAction","userSelect","button","SelectionMenu","each","removeNode","MenuComponent","component","endsWith","createElement","FaRegStickyNote","MenuSearch","focus","handleKeyDown","autoFocus","deepCopy","obj","parse","createNode","PlacementMenu","searchText","setSearchText","index","setIndex","mouse","context","components","sortFn","hash","v","sort","compare","localeCompare","useEditorComponents","socket","findType","outputType","findRelevantComponents","Math","lower","toLowerCase","k","startsWith","handleCreateNode","addNode","compatibleWith","connect","menuItems","ContextMenuPlugin","install","bind","mouseEvent","offsetX","offsetY","menu","display","preventDefault","contains","selectNode","clientX","clientY","document","view","container","appendChild","ReactDOM","render","Provider","remove","connectionMouseMoved","removingConnection","io","prevConnections","conn","Input","Output","SocketHandle","innerRef","socketType","multiple","multipleConnections","paramCase","DynamicTitle","fallback","silent","setTitle","getPropLabel","bindNodeInput","ShortcutButton","shortcut","newNode","area","_drag","down","background","borderColor","cursor","PropHandle","hideLeft","hideRight","bindSocket","bindControl","showControl","leftSocket","rightSocket","controlField","NodeHandle","state","transform","ButtonGroup","hidden","BaseControl","custom","test","getData","getDefaultValue","putData","PropControl","BaseComponent","getEditorNode","Component","TypeSocket","otherType","Socket","PropOutputSocket","nodeId","nodeName","typeCompiler","_isTypeOfType","BlockComponent","split","addProp","isPropOutput","addPropInput","addPropOutput","isOutput","shouldPropHaveControl","addControl","addInput","addOutput","NodeCompiler","TypeCompiler","BlocksNodeEditor","projectName","json","description","version","beforeImport","hadError","all","jsonNode","getComponent","build","fromJSON","jsonConnection","targetOutput","otherNode","targetInput","afterImport","NodeEditor","sortConnections","VerticalSortPlugin","ioMap","ConnectionDropPlugin","ConnectionOpacityPlugin","minDistance","opacityFalloff","querySelectorAll","pathElement","distance","opacity","sqrt","DragButtonPlugin","MenuContainer","styled","div","TopMenu","ItemContainer","MenuItem","tooltip","MenuItemStyled","MenuButton","FileDropZone","onFile","onFileContent","onDrop","files","file","reader","FileReader","onload","readAsText","useDropzone","maxFiles","getRootProps","getInputProps","isDragActive","LoadProjectItemContainer","FileDropZoneStyled","LoadProjectMenu","onLoadFileContent","example","ProjectNameInput","saveAnimation","keyframes","SaveIcon","FaSave","EditorMenu","getEditor","setName","saveAnimated","setSaveAnimated","loadMenuOpen","setLoadMenuOpen","project","updateName","onAnimationEnd","Modal","onHide","Body","findCategory","EditorContainer","Editor","hideMenu","onSetup","onSave","_editor","loadFileContent","content","noClick","element","clear","destroy","EDITOR_NAME","use","ReactRenderPlugin","ConnectionPlugin","AutoArrangePlugin","AreaPlugin","classList","snap","dynamic","editorButton","mouseMoved","update","source","inputCategory","outputCategory","querySelector","createEditor","EDITOR","fromCharCode","which","ctrlKey","loadState","resize","zoomAt","nextEditorState","STORAGE_EDITOR_STATE","DEFAULT_STATE","embedded","self","isEmbedded","storage","localStorage","EditorPage","redraw","useRedraw","menuParam","useParams","FileSaver","saveAs","Blob","pascalCase","onEditorSetup","stateString","message","postMessage","ReactTooltipStyled","GlobalTooltip","backgroundColor","place","delayShow","onPerfEntry","App","toast","StrictMode","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.55d77e26.chunk.js","sourcesContent":["import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\n\r\n\r\nexport default function NumberControlHandle({control, bindInput, validation: {min, max, step}}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    return (\r\n        <input\r\n            type=\"number\"\r\n            style={{width: '4em'}}\r\n            ref={bindInput}\r\n            min={min}\r\n            max={max}\r\n            step={step}\r\n            value={value || 0}\r\n            onChange={event => setValue(event.target.value)}\r\n        />\r\n    );\r\n}\r\n","import {anyType, getType, TYPE_MAP} from '../../../block-types/types';\r\nimport React, {useContext} from 'react';\r\nimport EventsContext, {ERROR_EVENT} from '../../../contexts/EventsContext';\r\nimport classNames from 'classnames';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\nimport getDefaultLabel from '../../../utils/getDefaultLabel';\r\n\r\nexport default function TypeSelect({value, constraintType, abstract, invalid, onChange, ...others}) {\r\n\r\n    constraintType = constraintType || anyType;\r\n\r\n    const types = [...TYPE_MAP.values()]\r\n        .filter(type => (abstract || !type.data.abstract) && constraintType.isSubtype(type));\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    if(value) {\r\n        try {\r\n            value = getType(value);\r\n        }\r\n        catch(err) {\r\n            onChange(value = undefined);///\r\n            // console.error(err);\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    }\r\n\r\n    invalid = invalid || !value || !types.some(t => t.isSubtype(value));\r\n\r\n    // if(invalid && types.length) {\r\n    //     let firstType = types[0];\r\n    //     if(firstType) {\r\n    //         onChange(value = firstType);\r\n    //     }\r\n    //     // value = constraintType;\r\n    // }\r\n\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <>\r\n            <select\r\n                className={classNames(invalid && 'invalid')}\r\n                value={value?.name}\r\n                onChange={event => onChange(getType(event.target.value))}\r\n                {...others}>\r\n                {invalid && <option label=\"(Type)\" value={value?.name}/>}\r\n                {types.map(type => (\r\n                    <option key={type.name} label={type.name} value={type.name}/>\r\n                ))}\r\n            </select>\r\n            <div className=\"ps-2\">\r\n                {value?.generics?.map((type, i) => (\r\n                    <TypeSelect\r\n                        key={i}\r\n                        value={type}\r\n                        constraintType={value.data.baseType.generics[i]}\r\n                        abstract={abstract}\r\n                        data-tip={getDefaultLabel(value.data.genericNames?.[i])}\r\n                        onChange={t => {\r\n                            let generics = [...value.generics];\r\n                            generics.splice(i, 1, t);\r\n                            onChange(getType({\r\n                                ...value.toJSON(),\r\n                                generics,\r\n                            }));\r\n                        }}/>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}","import TextControlHandle from '../components/rete/controls/TextControlHandle';\r\nimport CheckboxControlHandle from '../components/rete/controls/CheckboxControlHandle';\r\nimport NumberControlHandle from '../components/rete/controls/NumberControlHandle';\r\nimport TypeControlHandle from '../components/rete/controls/TypeControlHandle';\r\nimport NodeControlHandle from '../components/rete/controls/NodeControlHandle';\r\n\r\nclass Type {\r\n    constructor(name, parent, generics, data = {}, meta = {}) {\r\n        if(name instanceof Type) {\r\n            throw new Error(`Type cannot be named ${name}`);\r\n        }\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.generics = generics.map(type => getType(type));\r\n        this.data = data;\r\n        this.meta = meta;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            generics: this.generics.map(t => t.toJSON()),\r\n        };\r\n    }\r\n\r\n    of(...generics) {\r\n        return getType(this, generics);\r\n    }\r\n\r\n    withMeta(meta) {\r\n        let type = buildType(this.name, this, this.generics);\r\n        Object.assign(type.meta, meta);\r\n        return type;\r\n    }\r\n\r\n    isAbstract() {\r\n        return this.data.abstract || this.generics.some(type => type.isAbstract());\r\n    }\r\n\r\n    getDefaultValue() {\r\n        let value = this.data.defaultValue;\r\n        return typeof value === 'function' ? value(this) : value;\r\n    }\r\n\r\n    equals(other) {\r\n        return this.name === other.name && this.generics.length === other.generics.length && this.generics.every((t, i) => t.equals(other.generics[i]));\r\n    }\r\n\r\n    // TODO: rename to something like `isSubtypeOrEquivalent`\r\n    isSubtype(other) {\r\n        if(!other) {\r\n            return false;\r\n        }\r\n        if(this.data.arbitraryGenerics && other.parent && this.name === other.parent.name) {\r\n            // e.g. `Tuple : Tuple<A, B, C>`\r\n            return true;\r\n        }\r\n        if(this.name === other.name) {\r\n            return this.generics.length === other.generics.length && this.generics.every((t, i) => t.isSubtype(other.generics[i]));\r\n        }\r\n        return !!other.parent && this.isSubtype(other.parent);\r\n    }\r\n\r\n    getSharedType(other) {\r\n        if(!other) {\r\n            return;\r\n        }\r\n        if(this === other) {\r\n            return this;\r\n        }\r\n        if(this.isSubtype(other)) {\r\n            return this;\r\n        }\r\n        if(other.isSubtype(this)) {\r\n            return other;\r\n        }\r\n        if(this.parent) {\r\n            return this.parent.getSharedType(other);\r\n        }\r\n    }\r\n\r\n    toTypeString() {\r\n        return this.data.toTypeString?.call(this) ?? this.name + (this.generics.length ? '<' + this.generics.map(g => g.toTypeString()).join(', ') + '>' : '');\r\n    }\r\n\r\n    toString() {\r\n        return `Type(${this.toTypeString()})`;\r\n    }\r\n}\r\n\r\nexport const TYPE_MAP = new Map();\r\n\r\nexport const anyType = createType('Any', {\r\n    abstract: true,\r\n    category: 'default',\r\n    reversed: false,\r\n});\r\nexport const anyReversedType = createType('AnyReversed', {\r\n    abstract: true,\r\n    category: 'default',\r\n    // parent: anyType,\r\n    reversed: true,\r\n});\r\n\r\nexport const typeType = createType('Type', {\r\n    parent: anyType,\r\n    category: 'types',\r\n    controlType: TypeControlHandle,\r\n    defaultValue: type => type.generics[0],\r\n    generics: [anyType],\r\n});\r\nexport const nodeType = createType('Node', {\r\n    parent: anyType,\r\n    category: 'nodes',\r\n    controlType: NodeControlHandle,\r\n    toTypeString() {\r\n        return this.meta.block ? `Node{block=${JSON.stringify(this.meta.block)}}` : 'Node';\r\n    },\r\n});\r\n\r\n// High-level type categories\r\nexport const valueType = createType('Value', {\r\n    abstract: true,\r\n    parent: anyType,\r\n    category: 'values',\r\n});\r\nexport const identifierType = createType('Identifier', {\r\n    parent: anyType,\r\n    controlType: TextControlHandle,\r\n    // defaultValue: '',\r\n    validation: {\r\n        pattern: /^[a-zA-Z][a-zA-Z0-9_]*$/,\r\n    },\r\n});\r\nexport const effectType = createType('Effect', {\r\n    parent: anyReversedType,\r\n    category: 'effects',\r\n    generics: [valueType],\r\n    toMotoko([value]) {\r\n        return value;\r\n    },\r\n});\r\nexport const memberType = createType('Member', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'members',\r\n});\r\nexport const actorType = createType('Actor', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'actors',\r\n});\r\nexport const moduleType = createType('Module', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'modules',\r\n});\r\nexport const paramType = createType('Param', {\r\n    parent: anyReversedType,\r\n    category: 'parameters',\r\n});\r\n\r\n// Value types\r\nexport const boolType = createType('Bool', {\r\n    parent: valueType,\r\n    controlType: CheckboxControlHandle,\r\n    defaultValue: false,\r\n});\r\nexport const charType = createType('Char', {\r\n    parent: valueType,\r\n    controlType: TextControlHandle,\r\n    validation: {\r\n        minLength: 1,\r\n        maxLength: 1,\r\n    },\r\n});\r\nexport const textType = createType('Text', {\r\n    parent: valueType,\r\n    controlType: TextControlHandle,\r\n    defaultValue: '',\r\n});\r\nexport const floatType = createType('Float', {\r\n    parent: valueType,\r\n    controlType: NumberControlHandle,\r\n    defaultValue: 0,\r\n});\r\nexport const intType = createType('Int', {\r\n    parent: floatType,\r\n    category: 'integers',\r\n    controlType: NumberControlHandle,\r\n    validation: {\r\n        step: 1,\r\n    },\r\n});\r\nexport const natType = createType('Nat', {\r\n    parent: floatType,\r\n    category: 'naturals',\r\n    validation: {\r\n        step: 1,\r\n        min: 0,\r\n    },\r\n});\r\nexport const blobType = createType('Blob', {\r\n    parent: valueType,\r\n});\r\nexport const principalType = createType('Principal', {\r\n    parent: valueType,\r\n});\r\nexport const errorType = createType('Error', {\r\n    parent: valueType,\r\n});\r\nexport const tupleType = createType('Tuple', {\r\n    abstract: true,\r\n    arbitraryGenerics: true,\r\n    parent: valueType,\r\n    category: 'tuples',\r\n    // controlType: ,\r\n    toTypeString() {\r\n        return this === tupleType ? this.name : `(${this.generics.map(t => t.toTypeString()).join(', ')})`;\r\n    },\r\n});\r\n// export const unitType = createType('Unit', {\r\n//     parent: tupleType,\r\n// });\r\nexport const unitType = tupleType.of();\r\nexport const objectType = createType('Object', {\r\n    abstract: true,\r\n    arbitraryGenerics: true,\r\n    parent: valueType,\r\n    category: 'objects',\r\n    // controlType: ,\r\n    toTypeString() {\r\n        return `(${this.generics.map((t, i) => `${this.genericNames[i]}: ${t.toTypeString()}`).join(', ')})`;\r\n    },\r\n});\r\nexport const functionType = createType('Function', {\r\n    parent: valueType,\r\n    generics: [valueType, valueType],\r\n    genericNames: ['input', 'output'],\r\n    category: 'functions',\r\n    toTypeString() {\r\n        return `${this.generics[0].toTypeString()} -> ${this.generics[1].toTypeString()}`;\r\n    },\r\n});\r\nexport const optionalType = createType('Optional', {\r\n    parent: valueType,\r\n    generics: [valueType],\r\n    category: 'optionals',\r\n    toMotoko([value]) {\r\n        return `?${value}`;\r\n    },\r\n});\r\nexport const collectionType = createType('Collection', {\r\n    abstract: true,\r\n    parent: valueType,\r\n    category: 'collections',\r\n});\r\nexport const arrayType = createType('Array', {\r\n    parent: collectionType,\r\n    generics: [valueType],\r\n    genericNames: ['item'],\r\n    toMotoko([item]) {\r\n        return `Array.Array<${item}>`;\r\n    },\r\n});\r\nexport const mapType = createType('Map', {\r\n    parent: collectionType,\r\n    generics: [valueType, valueType],\r\n    genericNames: ['key', 'value'],\r\n    toMotoko([key, value]) {\r\n        return `HashMap.HashMap<${key}, ${value}>`;\r\n    },\r\n});\r\nexport const asyncType = createType('Async', {\r\n    parent: valueType,\r\n    generics: [valueType],\r\n    category: 'futures',\r\n    toMotoko([value]) {\r\n        return `async ${value}`;\r\n    },\r\n});\r\n// export const andType = createType('And', {\r\n//     parent: valueType,\r\n//     generics: [valueType, valueType],\r\n//     toMotoko([a, b]) {\r\n//         return `(${a} and ${b})`;\r\n//     },\r\n// });\r\n\r\n// // Fixed-size int values\r\n// export const int64Type = createType('Int64', {\r\n//     parent: intType,\r\n//     validation: getIntValidation(64),\r\n// });\r\n// export const int32Type = createType('Int32', {\r\n//     parent: int64Type,\r\n//     validation: getIntValidation(32),\r\n// });\r\n// export const int16Type = createType('Int16', {\r\n//     parent: int32Type,\r\n//     validation: getIntValidation(16),\r\n// });\r\n// export const int8Type = createType('Int8', {\r\n//     parent: int16Type,\r\n//     validation: getIntValidation(8),\r\n// });\r\n//\r\n// // Fixed-size nat values\r\n// export const nat64Type = createType('Nat64', {\r\n//     parent: natType,\r\n//     validation: getNatValidation(64),\r\n// });\r\n// export const nat32Type = createType('Nat32', {\r\n//     parent: nat64Type,\r\n//     validation: getNatValidation(32),\r\n// });\r\n// export const nat16Type = createType('Nat16', {\r\n//     parent: nat32Type,\r\n//     validation: getNatValidation(16),\r\n// });\r\n// export const nat8Type = createType('Nat8', {\r\n//     parent: nat16Type,\r\n//     validation: getNatValidation(8),\r\n// });\r\n\r\n// function getNatValidation(n) {\r\n//     return {\r\n//         ...natType.data.validation,\r\n//         max: 2 ** n - 1,\r\n//     };\r\n// }\r\n//\r\n// function getIntValidation(n) {\r\n//     let x = 2 ** (n - 1);\r\n//     return {\r\n//         ...intType.data.validation,\r\n//         min: -x,\r\n//         max: x - 1,\r\n//     };\r\n// }\r\n\r\n// Create a global type\r\nfunction createType(name, data) {\r\n    let {parent} = data;\r\n    let {generics = [], meta = {}, ...other} = data;\r\n    let type = buildType(name, parent, generics, other, meta);\r\n    type.data.baseType = type;///\r\n    TYPE_MAP.set(name, type);\r\n    return type;\r\n}\r\n\r\n// Get or create a generic version of the given type\r\nfunction getGenericType(parent, generics) {\r\n    if(typeof parent === 'string') {\r\n        parent = getType(parent);\r\n    }\r\n    if((!generics || !generics.length || generics === parent.generics) && !parent.data.arbitraryGenerics) {\r\n        return getType(parent);\r\n    }\r\n    let type = buildType(parent.name, parent, generics);\r\n    if(!parent.isSubtype(type)) {\r\n        throw new Error(`Generics not assignable to ${parent.toTypeString()} from ${type.toTypeString()}`);\r\n    }\r\n    return type;\r\n}\r\n\r\n// Instantiate a new type\r\nfunction buildType(name, parent, generics, data = {}, meta = {}) {\r\n    // Special cases for data inheritance\r\n    let {\r\n        abstract,\r\n        arbitraryGenerics,\r\n        ...parentData\r\n    } = parent ? parent.data : {};\r\n    let parentMeta = parent ? parent.meta : {};\r\n    return new Type(\r\n        name,\r\n        parent || null,\r\n        generics || (parent ? parent.generics : []),\r\n        {...parentData, ...data},\r\n        {...parentMeta, ...meta},\r\n    );\r\n}\r\n\r\n// Get or create a type\r\nexport function getType(name, generics) {\r\n    if(arguments.length > 1) {\r\n        return getGenericType(name, generics);\r\n    }\r\n    if(name instanceof Type) {\r\n        return name;\r\n    }\r\n    if(typeof name === 'object') {\r\n        return getGenericType(name.name, (name.generics || []).map(t => getType(t)));\r\n    }\r\n    if(!name) {\r\n        throw new Error(`Invalid type: ${name}`);\r\n    }\r\n    if(!TYPE_MAP.has(name)) {\r\n        throw new Error(`Unknown type: ${name}`);\r\n    }\r\n    return TYPE_MAP.get(name);\r\n}\r\n","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport TypeSelect from '../../common/inputs/TypeSelect';\r\n\r\n\r\nexport default function TypeControlHandle({abstract, control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let constraintType = control.config.type.generics[0];\r\n\r\n    let invalid = !control.validate(value);\r\n\r\n    // if(typeType.isSubtype(value)) {\r\n    //     value = value?.generics[0];\r\n    // }\r\n\r\n    return (\r\n        <div ref={bindInput}>\r\n            <TypeSelect\r\n                value={value}\r\n                constraintType={constraintType}\r\n                abstract={abstract}\r\n                invalid={invalid}\r\n                onChange={setValue/*type => setValue(typeType.of(type))*/}>\r\n            </TypeSelect>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useContext, useState} from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../contexts/EventsContext';\r\nimport useListener from '../../../hooks/useListener';\r\nimport getNodeLabel from '../../../utils/getNodeLabel';\r\nimport classNames from 'classnames';\r\nimport {getBlock} from '../../../editor/blocks';\r\n\r\n\r\nexport default function NodeControlHandle({editor, control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let [nodes, setNodes] = useState(() => [...editor.nodes]);\r\n\r\n    let events = useContext(EventsContext);\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => setNodes([...editor.nodes]));\r\n\r\n    let blockName = control.config.type?.meta.block;///\r\n    let blockFilter = blockName && (Array.isArray(blockName) ? blockName : [blockName]).map(block => {\r\n        let name = typeof block === 'string' ? block : block.name;\r\n        getBlock(name); // Ensure block exists\r\n        return name;\r\n    });\r\n\r\n    if(blockFilter) {\r\n        nodes = nodes.filter(n => !blockFilter || blockFilter.includes(n.name));\r\n    }\r\n\r\n    let invalid = !value || !nodes.some(n => String(n.id) === String(value) && (!blockFilter || blockFilter.includes(n.name)));\r\n\r\n    // TODO: cleanly prevent number -> string id conversion\r\n    return (\r\n        <select\r\n            ref={bindInput}\r\n            className={classNames(invalid && 'invalid')}\r\n            style={{maxWidth: '100%'}}\r\n            value={value}\r\n            onChange={event => setValue(event.target.value || undefined)}>\r\n            <option key={-1} label={'(Select a Node)'} value={undefined}/>\r\n            {nodes.map(node => (\r\n                <option key={node.id} label={getNodeLabel(node, editor)} value={node.id}/>\r\n            ))}\r\n        </select>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\n\r\n\r\nexport default function CheckboxControlHandle({control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    return (\r\n        <label ref={bindInput}>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={!!value}\r\n                onChange={event => setValue(event.target.checked)}\r\n            />\r\n            <span className=\"input-title my-0\" style={{verticalAlign: 'top'}}>{control.name}</span>\r\n        </label>\r\n    );\r\n}\r\n","import {\r\n    FaCode,\r\n    FaCubes,\r\n    FaDatabase,\r\n    FaEject,\r\n    FaFilter,\r\n    FaFont,\r\n    FaLongArrowAltRight,\r\n    FaNetworkWired,\r\n    FaPlusCircle,\r\n    FaStream,\r\n    FaTextHeight, FaTh,\r\n} from 'react-icons/fa';\r\n\r\nclass Category {\r\n    constructor(name, parent, data = {}) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.root = parent ? parent.root : this;\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nconst CATEGORY_MAP = new Map();\r\n\r\nfunction createCategory(data) {\r\n    let {name, parent, ...other} = data;\r\n    let category = new Category(name, parent, parent ? {...parent.data, ...other} : other);\r\n    CATEGORY_MAP.set(category.name, category);\r\n    return category;\r\n}\r\n\r\nexport function getCategory(name) {\r\n    if(name instanceof Category) {\r\n        return name;\r\n    }\r\n    if(!CATEGORY_MAP.has(name)) {\r\n        throw new Error(`Could not find category with name: ${name}`);\r\n    }\r\n    return CATEGORY_MAP.get(name);\r\n}\r\n\r\n\r\nexport const defaultCategory = createCategory('Default', {});\r\nexport const stateCategory = createCategory({\r\n    name: 'State',\r\n    color: '#3fd',\r\n    icon: FaDatabase,\r\n});\r\nexport const functionCategory = createCategory({\r\n    name: 'Function',\r\n    color: '#fd3',\r\n    icon: FaCubes,\r\n});\r\nexport const paramCategory = createCategory({\r\n    name: 'Param',\r\n    color: '#a8f',\r\n    icon: FaLongArrowAltRight,\r\n});\r\nexport const typeCategory = createCategory({\r\n    name: 'Type',\r\n    color: '#2af',\r\n    icon: FaTextHeight,\r\n});\r\nexport const collectionCategory = createCategory({\r\n    name: 'Collection',\r\n    color: '#1c8',\r\n    icon: FaTh,\r\n});\r\nexport const compilerCategory = createCategory({\r\n    name: 'Compiler',\r\n    color: '#f5a',\r\n    icon: FaCode,\r\n});\r\nexport const expressionCategory = createCategory({\r\n    name: 'Expression',\r\n    color: '#aaa',\r\n    icon: FaEject,\r\n});\r\nexport const operatorCategory = createCategory({\r\n    name: 'Operator',\r\n    // color: '#57f',\r\n    icon: FaFilter,\r\n});\r\nexport const actorCategory = createCategory({\r\n    name: 'Actor',\r\n    color: '#fa8',\r\n    icon: FaFont,\r\n});\r\nexport const effectCategory = createCategory({\r\n    name: 'Effect',\r\n    // color: '#57f',\r\n    icon: FaStream,\r\n});\r\nexport const literalCategory = createCategory({\r\n    name: 'Literal',\r\n    // color: '#8fa',\r\n    icon: FaPlusCircle,\r\n});\r\nexport const decompositionCategory = createCategory({\r\n    name: 'Decomposition',\r\n    // color: '#8fa',\r\n    icon: FaNetworkWired,\r\n});\r\n","import React from 'react';\r\nimport EventEmitter from 'events';\r\n\r\nexport const EDITOR_CHANGE_EVENT = 'editor-change';\r\nexport const EDITOR_SAVE_EVENT = 'editor-save';\r\nexport const PROJECT_EXPORT_EVENT = 'project-export';\r\nexport const PROJECT_LOAD_EVENT = 'project-load';\r\nexport const PROJECT_CLEAR_EVENT = 'project-clear';\r\nexport const ERROR_EVENT = 'error';\r\n\r\n// TODO: fix HMR memory leak\r\n\r\nconst events = new EventEmitter();\r\nevents.setMaxListeners(1000);\r\nevents.on(ERROR_EVENT, console.error);\r\n\r\n// Browser debug\r\nwindow.EVENTS = events;\r\n\r\nexport default React.createContext(events);\r\n","import {boolType, floatType, getType} from '../block-types/types';\r\nimport {operatorCategory} from '../block-categories/categories';\r\n\r\nexport function unaryOperatorBlock(type, symbol, evaluate) {\r\n    type = getType(type);\r\n    return {\r\n        topRight: 'result',\r\n        title: `(${symbol} a)`,\r\n        category: operatorCategory,\r\n        inputs: [{\r\n            key: 'input',\r\n            title: 'a',\r\n            type,\r\n        }],\r\n        outputs: [{\r\n            key: 'result',\r\n            type,\r\n            toMotoko({input}) {\r\n                return `${symbol}(${input})`;\r\n            },\r\n            // inferType({input}) {\r\n            //     return input;\r\n            // },\r\n        }],\r\n    };\r\n}\r\n\r\nexport function binaryOperatorBlock(type, symbol, evaluate) {\r\n    let [inputType, resultType] = Array.isArray(type) ? type : [type, type];\r\n\r\n    inputType = getType(inputType);\r\n    resultType = getType(resultType);\r\n\r\n    return {\r\n        topRight: 'result',\r\n        title: `(a ${symbol} b)`,\r\n        category: operatorCategory,\r\n        inputs: [{\r\n            key: 'left',\r\n            title: 'a',\r\n            type: inputType,\r\n        }, {\r\n            key: 'right',\r\n            title: 'b',\r\n            type: inputType,\r\n        }],\r\n        outputs: [{\r\n            key: 'result',\r\n            type: resultType,\r\n            toMotoko({left, right}) {\r\n                return `(${left} ${symbol} ${right})`;\r\n            },\r\n            // inferType({left, right}) {\r\n            //     return left.getSharedType(right);\r\n            // },\r\n        }],\r\n    };\r\n}\r\n\r\nexport function arithmeticOperatorBlock(...args) {\r\n    return binaryOperatorBlock(floatType, ...args);\r\n}\r\n\r\nexport function numberComparisonOperatorBlock(...args) {\r\n    return binaryOperatorBlock([floatType, boolType], ...args);\r\n}","import {useEffect} from 'react';\r\n\r\nexport default function useListener(target, event, listener, options) {\r\n    useEffect(() => {\r\n        if(!target) {\r\n            return;\r\n        }\r\n        let domTarget = 'addEventListener' in target;\r\n        if(domTarget) {\r\n            target.addEventListener(event, listener, options);\r\n        }\r\n        else {\r\n            target.on(event, listener, options);\r\n        }\r\n        return () => {\r\n            if(domTarget) {\r\n                target.removeEventListener(event, listener);\r\n            }\r\n            else {\r\n                target.off(event, listener);\r\n            }\r\n        };\r\n    });\r\n    return listener;\r\n}","import {effectType, unitType} from '../block-types/types';\r\nimport {effectCategory} from '../block-categories/categories';\r\n\r\nlet defaultType = effectType.of(unitType);\r\n\r\nexport function statementBlock(block, compileFn) {\r\n    let beforeProp = {\r\n        key: 'before',\r\n        type: effectType,\r\n        inferType({after}) {\r\n            return after || defaultType;\r\n        },\r\n        toMotoko(props, ...args) {\r\n            let result = compileFn(props, ...args);\r\n            if(result === undefined) {\r\n                return;\r\n            }\r\n            let {after} = props;\r\n            return `${result}${after ? ' ' + after : ''}`;\r\n        },\r\n    };\r\n    // for(let [key, fn] of Object.entries(compileObject)) {\r\n    //     beforeProp[key] = typeof fn === 'function' ? function(props, ...args) {\r\n    //         let result = fn(props, ...args);\r\n    //         if(result === undefined) {\r\n    //             return;\r\n    //         }\r\n    //         let {after} = props;\r\n    //         return `${result}${after ? ' ' + after : ''}`;\r\n    //     } : fn;\r\n    // }\r\n\r\n    return {\r\n        category: effectCategory,\r\n        topLeft: 'before',\r\n        topRight: 'after',\r\n        ...block,\r\n        inputs: [\r\n            ...block.inputs || [], {\r\n                key: 'after',\r\n                type: effectType,\r\n                optional: true,\r\n                // multi: true,\r\n            },\r\n        ],\r\n        outputs: [\r\n            ...block.outputs || [],\r\n            beforeProp,\r\n        ],\r\n    };\r\n}\r\n\r\nexport function endStatementBlock(block, statementProp) {\r\n    return {\r\n        category: effectCategory,\r\n        topLeft: 'statement',\r\n        ...block,\r\n        outputs: [...block.outputs || [], {\r\n            key: 'statement',\r\n            type: effectType,\r\n            ...statementProp,\r\n        }],\r\n    };\r\n}\r\n","import {useContext, useState} from 'react';\r\nimport useListener from './useListener';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../contexts/EventsContext';\r\n\r\nexport default function useControlState(control) {\r\n    let value = control.getValue();\r\n    let [, updateVisualValue] = useState(value); // updateVisualValue(..): redraw component if value changed\r\n\r\n    let events = useContext(EventsContext);\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => {\r\n        updateVisualValue(control.getValue());\r\n        control.notifyEditorChange?.();\r\n    });\r\n\r\n    useListener(control.events, 'update', () => events.emit(EDITOR_CHANGE_EVENT, control, value));\r\n\r\n    return [\r\n        value,\r\n        value => control.setValue(value),\r\n    ];\r\n}\r\n","import {useEffect} from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nlet timeout;\r\n\r\n// Rebuild react-tooltip\r\nexport default function useReactTooltip(deps = []) {\r\n    useEffect(() => {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => ReactTooltip.rebuild());\r\n    }, deps); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n    return ReactTooltip;\r\n}\r\n","import {basename} from 'path';\r\nimport {getType} from '../block-types/types';\r\nimport {defaultCategory, getCategory} from '../block-categories/categories';\r\n\r\nconst allBlocks = [];\r\nconst blockNames = new Set();\r\n\r\n// noinspection JSUnresolvedFunction\r\nconst blockContext = require.context('../blocks', true, /\\.js$/);\r\nblockContext.keys().forEach(path => {\r\n    let name = basename(path, '.js');\r\n    let block = blockContext(path).default;\r\n    block = {...block}; // HMR fix\r\n    if(block) {\r\n        block.name = name;\r\n        if(blockNames.has(name)) {\r\n            console.error(`Duplicate block name: ${name}`);\r\n            return;\r\n        }\r\n        block.category = block.category ? getCategory(block.category) : defaultCategory;\r\n        block.props = block.props || {};\r\n        for(let [key, prop] of Object.entries(block.props)) {\r\n            if(prop.key && prop.key !== key) {\r\n                throw new Error(`Prop key mismatch: ${key} != ${prop.key}`);\r\n            }\r\n            prop.key = key;\r\n        }\r\n\r\n        // `outputs` prioritized over `inputs`\r\n        addProps(block, block.outputs, 'output');\r\n        addProps(block, block.inputs, 'input');\r\n        addProps(block, block.controls, 'control');\r\n\r\n        // Rearrange block inputs/outputs/controls\r\n        block.inputs = [];\r\n        block.outputs = [];\r\n        block.controls = [];\r\n\r\n        for(let [key, prop] of Object.entries(block.props)) {\r\n            prop.key = key;\r\n            // `output` prioritized over `input`\r\n            if(prop.output) {\r\n                if(!block.outputs.includes(prop)) {\r\n                    block.outputs.push(prop);\r\n                }\r\n            }\r\n            else if(prop.input) {\r\n                if(!block.inputs.includes(prop)) {\r\n                    block.inputs.push(prop);\r\n                }\r\n            }\r\n            else if(prop.control) {\r\n                if(!block.controls.includes(prop)) {\r\n                    block.controls.push(prop);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Type deserialization\r\n        for(let prop of Object.values(block.props)) {\r\n            if(!prop.type && (prop.input || prop.output) && prop.control) {\r\n                console.log(prop);///\r\n                throw new Error(`Type not found for ${block.name} : ${prop.key}`);\r\n            }\r\n            if(prop.type) {\r\n                prop.type = getType(prop.type);\r\n            }\r\n        }\r\n\r\n        blockNames.add(block.name);\r\n        allBlocks.push(block);\r\n    }\r\n});\r\n\r\nfunction addProps(block, propList, type) {\r\n    if(propList) {\r\n        for(let prop of propList) {\r\n            if(prop.key && block.props[prop.key] === prop) {\r\n                continue;\r\n            }\r\n            if(block.props.hasOwnProperty(prop.key)) {\r\n                throw new Error(`Duplicate prop in ${block.name}: ${prop.key}`);\r\n            }\r\n            prop[type] = prop[type] || true;\r\n            block.props[prop.key] = prop;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const BLOCK_MAP = new Map(allBlocks.map(block => [block.name, block]));\r\n\r\nwindow.BLOCK_MAP = BLOCK_MAP; // Browser debugging\r\n\r\n// Post-initialization\r\nfor(let block of BLOCK_MAP.values()) {\r\n    if(block.shortcuts) {\r\n        block.shortcuts.forEach(s => {\r\n            if(!s.block) {\r\n                throw new Error(`Shortcut in ${block.name} requires a \\`block\\` attribute`);\r\n            }\r\n            s.block = getBlock(s.block);\r\n        });\r\n    }\r\n    else {\r\n        block.shortcuts = [];\r\n    }\r\n}\r\n\r\nexport function getBlock(name) {\r\n    if(!name) {\r\n        throw new Error(`Block cannot be ${name}`);\r\n    }\r\n    if(typeof name === 'string') {\r\n        if(!BLOCK_MAP.has(name)) {\r\n            throw new Error(`Block does not exist: ${name}`);\r\n        }\r\n        return BLOCK_MAP.get(name);\r\n    }\r\n    return name;\r\n}","import {literalCategory} from '../block-categories/categories';\r\n\r\nexport function literalBlock(block, type, stringifier) {\r\n    return {\r\n        category: literalCategory,\r\n        topRight: 'value',\r\n        ...block,\r\n        outputs: [...block.outputs || [], {\r\n            key: 'value',\r\n            type,\r\n            control: true,\r\n            toMotoko({value}) {\r\n                if(value === undefined) {\r\n                    return;\r\n                }\r\n                return String(stringifier ? stringifier(value) : value);\r\n            },\r\n        }],\r\n    };\r\n}","import {boolType, unitType, valueType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock} from '../block-patterns/member-patterns';\r\nimport {stateCategory} from '../block-categories/categories';\r\nimport {FaAngleDoubleRight, FaAngleRight} from 'react-icons/fa';\r\n\r\nexport const stateReadIcon = FaAngleRight;\r\nexport const stateWriteIcon = FaAngleDoubleRight;\r\n\r\nconst block = memberBlock({\r\n    info: 'A persistent smart contract variable',\r\n    topRight: 'value',\r\n    category: stateCategory,\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        // let name = editor.compilers.motoko.getInput(node, 'name');\r\n        let type = editor.compilers.type.getInput(node, 'initialValue') || unitType;\r\n        return name && `${name}: ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    shortcuts: [{\r\n        block: 'StateRead',\r\n        nodeKey: 'stateNode',\r\n    }, {\r\n        block: 'StateUpdate',\r\n        nodeKey: 'stateNode',\r\n    }],\r\n    inputs: [{\r\n        //     key: 'type',\r\n        //     type: 'Type',\r\n        // }, {\r\n        key: 'initialValue',\r\n        type: valueType,\r\n        optional: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        toMotoko({name}) {\r\n            return name;\r\n        },\r\n        inferType({initialValue}) {\r\n            return initialValue;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'flexible',\r\n        type: boolType,\r\n        // }, {\r\n        //     key: 'readonly',\r\n        //     type: 'Bool',\r\n    }],\r\n}, {\r\n    toMotoko({visibility, flexible, name, initialValue}) {\r\n        let readonly = false;/// TODO: infer and/or adjust shortcuts\r\n        let modifiers = [visibility !== 'system' && visibility, !flexible && 'stable'].filter(m => m).join(' '); //TODO: combine into single control\r\n\r\n        return `${modifiers && modifiers + ' '}${readonly ? 'let' : 'var'} ${name}${initialValue ? ' = ' + initialValue : ''};`;\r\n    },\r\n});\r\nexport default block;\r\n","import {identifierType, memberType} from '../block-types/types';\r\nimport {stringSelectProp} from './control-patterns';\r\n\r\n\r\nexport function computeMemberName(node, editor) {\r\n    return editor.compilers.motoko.getInput(node, 'name');\r\n\r\n    // let name = editor.compilers.motoko.getInput(node, 'name');\r\n    // if(!name) {\r\n    //     return;\r\n    // }\r\n    // if(!parentNode) {\r\n    //     return name;\r\n    // }\r\n    // let actorName = editor.compilers.motoko.getInput(parentNode, 'name');\r\n    // return actorName?`${actorName}.${name}`:name;\r\n}\r\n\r\nexport function memberBlock(block, memberProp) {\r\n    return {\r\n        topLeft: 'member',\r\n        ...block,\r\n        inputs: [\r\n            {\r\n                key: 'name',\r\n                type: identifierType,\r\n            },\r\n            ...block.inputs || [],\r\n        ],\r\n        outputs: [\r\n            {\r\n                key: 'member',\r\n                type: memberType,\r\n                ...memberProp,\r\n            },\r\n            ...block.outputs || [],\r\n        ],\r\n        controls: [\r\n            stringSelectProp({\r\n                key: 'visibility',\r\n                // optional: true,\r\n            }, ['public', 'private', 'system']),\r\n            ...block.controls || [],\r\n        ],\r\n    };\r\n}","import {capitalCase} from 'change-case';\r\n\r\nexport default function getBlockLabel(block) {\r\n    if(!block) {\r\n        return '';\r\n    }\r\n    return block.title || capitalCase(block.name);\r\n}","import Compiler from './Compiler';\r\nimport {typeType} from '../block-types/types';\r\n\r\nexport function importRef(name) {\r\n    return `$$\"${name}\"`;\r\n}\r\n\r\nexport function resolveImportRefs(code) {\r\n    if(!code) {\r\n        return code;\r\n    }\r\n    code = String(code);\r\n\r\n    const imports = {};\r\n    code = code.replace(/\\$\\$\"([^\"]*)\"/, (match, path) => {\r\n        const id = path.includes('/') ? path.substring(path.lastIndexOf('/') + 1) : path;\r\n        if(imports.hasOwnProperty(id) && imports[id] !== path) {\r\n            throw new Error(`Conflicting import paths: \"${path}\" != \"${imports[id]}\"`);\r\n        }\r\n        imports[id] = path;\r\n        return id;\r\n    });\r\n    for(const [id, path] of Object.entries(imports)) {\r\n        code = `import ${id} \"${path}\"; ${code}`;\r\n    }\r\n    return code;\r\n}\r\n\r\nexport default class MotokoCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'toMotoko');\r\n    }\r\n\r\n    defaultCompile(prop, node, key) {\r\n        if(typeType.isSubtype(prop.type)) {\r\n            let type = prop.type.generics[0];\r\n            if(type && !type.isAbstract()) {\r\n                return this.getTypeString();\r\n            }\r\n        }\r\n    }\r\n\r\n    postCompile(result, node, key) {\r\n        if(typeof result === 'string' || typeof result === 'number' || typeof result === 'boolean' || result === null) {\r\n            return result;\r\n        }\r\n        if(result === undefined) {\r\n            return;\r\n        }\r\n        if(Array.isArray(result)) {\r\n            return result.map(r => this.postCompile(r, node, key)).filter(s => s).join(' ');\r\n        }\r\n        console.warn('Unexpected Motoko expression:', result);\r\n        return String(result);\r\n    }\r\n}","import {getBlock} from '../editor/blocks';\r\nimport Rete from 'rete';\r\nimport {getType} from '../block-types/types';\r\n\r\nclass UndefinedInputError extends Error {\r\n    constructor(block, key) {\r\n        super(`${block.name}.${key}`);\r\n    }\r\n}\r\n\r\nexport default class Compiler {\r\n    constructor(editor, compileKey) {\r\n        this.editor = editor;\r\n        this.compileKey = compileKey;\r\n    }\r\n\r\n    // Default value if `[compileKey]` does not exist on block property\r\n    defaultCompile(prop, node, key) {\r\n    }\r\n\r\n    // Post-process results from either `prop[compileKey]` or `defaultCompile(..)`\r\n    postCompile(result, node, key) {\r\n        return result;\r\n    }\r\n\r\n    getNode(node) {\r\n        if(node instanceof Rete.Node) {\r\n            return node;\r\n        }\r\n        if(!node) {\r\n            throw new Error(`Node cannot be ${JSON.stringify(node)}`);\r\n        }\r\n        let id = String(typeof node === 'string' || typeof node === 'number' ? node : node.id);\r\n        node = this.editor.nodes.find(node => String(node.id) === id);\r\n        if(!node) {\r\n            throw new Error(`Node does not exist: ${id}`);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    getBlock(node) {\r\n        node = this.getNode(node);\r\n        return getBlock(node.name);\r\n    }\r\n\r\n    getInput(node, key) {\r\n        node = this.getNode(node);\r\n        let block = this.getBlock(node);\r\n        if(!block.props.hasOwnProperty(key)) {\r\n            throw new Error(`Prop not found on ${node.name}: ${key}`);\r\n        }\r\n        let prop = block.props[key];\r\n        if(prop.input) {\r\n            if(!prop.type.data.reversed) {\r\n                let input = this._input(node, key);\r\n                if(prop.multi) {\r\n                    return input.connections.map(c => this._compileConnection(c, c.input, c.output, 'outputs'));\r\n                }\r\n                if(input.connections.length) {\r\n                    let c = input.connections[0];\r\n                    return this._compileConnection(c, c.input, c.output, 'outputs');\r\n                }\r\n                if(input.control) {\r\n                    return input.control.getValue();\r\n                }\r\n            }\r\n            else {\r\n                let output = this._output(node, key);\r\n                if(prop.multi) {\r\n                    return output.connections.map(c => this._compileConnection(c, c.output, c.input, 'inputs'));\r\n                }\r\n                if(output.connections.length) {\r\n                    let c = output.connections[0];\r\n                    return this._compileConnection(c, c.output, c.input, 'inputs');\r\n                }\r\n            }\r\n        }\r\n\r\n        if(prop.control) {\r\n            let control = this._control(node, prop.key);\r\n            return this.postCompile(control.getValue(), node, key);\r\n        }\r\n    }\r\n\r\n    getOutput(node, key) {\r\n        node = this.getNode(node);\r\n        let prop = this._prop(node, key);\r\n        try {\r\n            let args = this.getInputArgs(node);\r\n            if(!args) {\r\n                return;\r\n            }\r\n            let result;\r\n            if(prop[this.compileKey]) {\r\n                result = prop[this.compileKey](args, node, this);\r\n            }\r\n            else {\r\n                result = this.defaultCompile(prop, node, key);\r\n            }\r\n            return this.postCompile(result, node, key);\r\n        }\r\n        catch(err) {\r\n            if(err instanceof UndefinedInputError) {\r\n                return;\r\n            }\r\n            console.error(`[${node.name}.${key}]`, err);\r\n            this.editor.trigger('warn', `[${node.name}.${key}] ${err}`);\r\n        }\r\n    }\r\n\r\n    getInputArgs(node) {\r\n        node = this.getNode(node);\r\n        let block = this.getBlock(node);\r\n        // if(block.__inputArgs?.[this.compileKey]) {\r\n        //     for(let key in block.__inputCache[this.compileKey]) {\r\n        //         delete block.__inputCache[this.compileKey][key];\r\n        //     }// TODO: proper cache invalidation\r\n        //     return block.__inputArgs[this.compileKey];\r\n        // }\r\n        let args = {};\r\n        for(let prop of Object.values(block.props)) {\r\n            if(prop.input || prop.control) {\r\n                // let value = this.getInput(node, prop.key);\r\n                // if(value === undefined && !prop.optional) {\r\n                //     this.editor.trigger('warn', `Missing input on ${block.name}: ${prop.key}`);\r\n                //     return;\r\n                // }\r\n                // args[prop.key] = value;\r\n\r\n                let cached = false;\r\n                let cachedValue;\r\n\r\n                Object.defineProperty(args, prop.key, {\r\n                    get: () => {\r\n                        // let cache = block.__inputCache[this.compileKey];\r\n                        // if(cache.hasOwnProperty(prop.key)) {\r\n                        //     return cache[prop.key];\r\n                        // }\r\n                        if(cached) {\r\n                            return cachedValue;\r\n                        }\r\n                        let value = this.getInput(node, prop.key);\r\n                        if(value === undefined && !prop.optional) {\r\n                            throw new UndefinedInputError(block, prop.key);\r\n                            // this.editor.trigger('warn', `Missing input on ${block.name}: ${prop.key}`);\r\n                            // return undefined; // Appease linter\r\n                        }\r\n                        // cache[prop.key] = value;\r\n                        cached = true;\r\n                        return value;\r\n                    },\r\n                });\r\n            }\r\n        }\r\n        if(process.env.NODE_ENV !== 'production') {\r\n            // Throw error on missing key\r\n            let target = args;\r\n            args = new Proxy({}, {\r\n                get: (_, key) => {\r\n                    if(!target.hasOwnProperty(key)) {\r\n                        throw new Error(`Unknown input: ${block.name}.${key}`);\r\n                    }\r\n                    return target[key];\r\n                },\r\n            });\r\n        }\r\n        // TODO: refactor caching\r\n        // [block.__inputArgs || (block.__inputArgs = {})][this.compileKey] = args;\r\n        // [block.__inputCache || (block.__inputCache = {})][this.compileKey] = {};\r\n        // this.editor.on('process', ()=>{\r\n        //     for(let key in block.__inputCache) {\r\n        //         delete block.__inputCache[key];\r\n        //     }\r\n        // })///\r\n        return args;\r\n    }\r\n\r\n    // getControl(node, key) {\r\n    //     node = this.getNode(node);\r\n    //     return this._control(node, key).getValue();\r\n    // }\r\n\r\n    getTypeString(type) {\r\n        // console.log('/////', type);///\r\n        type = getType(type);\r\n        return type?.data[this.compileKey]?.(type.generics.map(t => this.getTypeString(t)), this) || type.toTypeString();\r\n    }\r\n\r\n    inferType(node, key) {\r\n        return this.editor.compilers.type.getInput(node, key);\r\n    }\r\n\r\n    _compileConnection(connection, from, to) {\r\n        // let prop = this._prop(to.node, to.key);\r\n        // if(!prop[this.compileKey]) {\r\n        //     throw new Error(`Cannot compile property of ${from.node.name} with key: ${prop.key}`);\r\n        // }\r\n        return this.getOutput(to.node, to.key);\r\n    }\r\n\r\n    _prop(node, key) {\r\n        let block = this.getBlock(node);\r\n        if(!block.props.hasOwnProperty(key)) {\r\n            throw new Error(`Prop does not exist in ${node.name}: ${key}`);\r\n        }\r\n        return block.props[key];\r\n    }\r\n\r\n    _input(node, key) {\r\n        if(!node.inputs.has(key)) {\r\n            throw new Error(`Input not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.inputs.get(key);\r\n    }\r\n\r\n    _output(node, key) {\r\n        if(!node.outputs.has(key)) {\r\n            throw new Error(`Output not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.outputs.get(key);\r\n    }\r\n\r\n    _control(node, key) {\r\n        if(!node.controls.has(key)) {\r\n            throw new Error(`Control not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.controls.get(key);\r\n    }\r\n}","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport classNames from 'classnames';\r\n\r\n\r\nexport default function TextControlHandle({control, bindInput, validation: {minLength, maxLength}}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let invalid = !control.validate(value);\r\n\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className={classNames('w-100', invalid && 'invalid')}\r\n            autoComplete=\"blocks-app\"\r\n            autoCorrect=\"off\"\r\n            ref={bindInput}\r\n            value={value || ''}\r\n            placeholder={control.name}\r\n            minLength={minLength}\r\n            maxLength={maxLength}\r\n            onChange={event => setValue(event.target.value || (control.config.optional && minLength > 0 ? undefined : ''))}\r\n        />\r\n    );\r\n}\r\n","import {sentenceCase} from 'change-case';\r\n\r\nexport default function getDefaultLabel(text) {\r\n    if(!text) {\r\n        return '';\r\n    }\r\n    return sentenceCase(text);\r\n}","import {getBlock} from '../editor/blocks';\r\nimport getBlockLabel from './getBlockLabel';\r\n\r\nexport default function getNodeLabel(node, editor, simplified) {\r\n    let block = getBlock(node.name);\r\n    if(!simplified && block && block.computeTitle) {\r\n        return block.computeTitle(node, editor);\r\n    }\r\n    return getBlockLabel(block);\r\n}","// Derived from: https://github.com/dfinity/motoko-playground/blob/main/src/config/monacoConfig.js\r\n\r\nexport const configureMonaco = (monaco) => {\r\n    monaco.languages.register({ id: \"motoko\" });\r\n    monaco.languages.setLanguageConfiguration(\"motoko\", {\r\n        comments: {\r\n            lineComment: \"//\",\r\n            blockComment: [\"/*\", \"*/\"],\r\n        },\r\n        brackets: [\r\n            [\"{\", \"}\"],\r\n            [\"[\", \"]\"],\r\n            [\"(\", \")\"],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: \"{\", close: \"}\" },\r\n            { open: \"[\", close: \"]\" },\r\n            { open: \"(\", close: \")\" },\r\n            { open: '\"', close: '\"' },\r\n            { open: \"<\", close: \">\" },\r\n        ],\r\n    });\r\n    monaco.languages.setMonarchTokensProvider(\"motoko\", {\r\n        defaultToken: \"\",\r\n        tokenPostfix: \".mo\",\r\n        // prettier-ignore\r\n        keywords: [\r\n            'actor','and','async','assert','await','break','case','catch','class',\r\n            'continue','debug','else','false','for','func','if','in','import',\r\n            'module','not','null','object','or','label','let','loop','private',\r\n            'public','return','shared','try','throw','debug_show','query','switch',\r\n            'true','type','var','while','stable','flexible','system',\r\n        ],\r\n        accessmodifiers: [\"public\", \"private\", \"shared\"],\r\n        // prettier-ignore\r\n        typeKeywords: [\r\n            'Any','None','Null','Bool','Int','Int8','Int16','Int32','Int64','Nat',\r\n            'Nat8','Nat16','Nat32','Nat64','Word8','Word16','Word32','Word64','Float',\r\n            'Char','Text','Blob','Error','Principal',\r\n        ],\r\n        // prettier-ignore\r\n        operators: [\r\n            '=','<','>',':','<:','?','+','-','*','/','%','**','&','|','^','<<','>>',\r\n            '#','==','!=','>=','<=',':=','+=','-=','*=','/=','%=','**=','&=','|=',\r\n            '^=','<<=','>>=','#=','->',\r\n        ],\r\n        symbols: /[=(){}[\\].,:;@#_&\\-<>`?!+*\\\\/]/,\r\n        // C# style strings\r\n        escapes:\r\n            /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                [\r\n                    /[a-zA-Z_$][\\w$]*/,\r\n                    {\r\n                        cases: {\r\n                            \"@typeKeywords\": \"keyword.type\",\r\n                            \"@keywords\": \"keyword\",\r\n                            \"@default\": \"identifier\",\r\n                        },\r\n                    },\r\n                ],\r\n                // whitespace\r\n                { include: \"@whitespace\" },\r\n\r\n                // delimiters and operators\r\n                [/[{}()[\\]]/, \"@brackets\"],\r\n                [/[<>](?!@symbols)/, \"@brackets\"],\r\n                [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }],\r\n                // numbers\r\n                [/\\d*\\.\\d+([eE][-+]?\\d+)?/, \"number.float\"],\r\n                [/0[xX][0-9a-fA-F_]+/, \"number.hex\"],\r\n                [/[0-9_]+/, \"number\"],\r\n\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, \"delimiter\"],\r\n\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], // non-teminated string\r\n                [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\r\n\r\n                // characters\r\n                [/'[^\\\\']'/, \"string\"],\r\n                [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\r\n                [/'/, \"string.invalid\"],\r\n            ],\r\n\r\n            comment: [\r\n                [/[^/*]+/, \"comment\"],\r\n                [/\\/\\*/, \"comment\", \"@push\"], // nested comment\r\n                [\"\\\\*/\", \"comment\", \"@pop\"],\r\n                [/[/*]/, \"comment\"],\r\n            ],\r\n\r\n            string: [\r\n                [/[^\\\\\"]+/, \"string\"],\r\n                [/@escapes/, \"string.escape\"],\r\n                [/\\\\./, \"string.escape.invalid\"],\r\n                [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }],\r\n            ],\r\n\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, \"white\"],\r\n                [/\\/\\*/, \"comment\", \"@comment\"],\r\n                [/\\/\\/.*$/, \"comment\"],\r\n            ],\r\n        },\r\n    });\r\n};","import MonacoEditor from \"@monaco-editor/react\";\r\nimport {configureMonaco} from '../../config/configureMonaco';\r\n\r\nexport default function CodeEditor({value, onChange, ...others}) {\r\n\r\n    // const monaco = useMonaco();\r\n\r\n    const onEditorChange = (newValue) => {\r\n        onChange?.(newValue);\r\n    };\r\n\r\n    return (\r\n        <MonacoEditor\r\n            // width=\"30vh\"\r\n            // height=\"40vh\"\r\n            defaultLanguage=\"motoko\"\r\n            beforeMount={configureMonaco}\r\n            value={value}\r\n            // path={fileName}\r\n            onChange={onEditorChange}\r\n            options={{\r\n                minimap: {enabled: false},\r\n                wordWrap: 'on',\r\n                wrappingIndent: 'indent',\r\n                scrollBeyondLastLine: false,\r\n                fontSize: 16,\r\n            }}\r\n            {...others}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport CodeEditor from '../../monaco/CodeEditor';\r\n\r\n\r\nexport default function CodeControlHandle({control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    // let invalid = !control.validate(value);\r\n\r\n    // TODO: syntax highlighting\r\n\r\n    return (\r\n        // <input\r\n        //     type=\"textarea\"\r\n        //     className={classNames('w-100', invalid && 'invalid')}\r\n        //     autoComplete=\"blocks-app\"\r\n        //     autoCorrect=\"off\"\r\n        //     ref={bindInput}\r\n        //     value={value || ''}\r\n        //     placeholder={control.name}\r\n        //     onChange={event => setValue(event.target.value || '')}\r\n        // />\r\n        <div ref={bindInput} style={{height: 100}}>\r\n            <CodeEditor value={value} onChange={setValue}/>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import {anyType, typeType} from '../block-types/types';\r\nimport {expressionCategory} from '../block-categories/categories';\r\nimport CodeControlHandle from '../components/rete/controls/CodeControlHandle';\r\n\r\nlet replaceRegex = /{([0-9]+)}/g;\r\n\r\n\r\nfunction parseInputs(inputs, expression) {\r\n    return (expression || '').replaceAll(replaceRegex, (match, i) => {\r\n        i = +i;\r\n        return i >= 0 && i < inputs.length ? inputs[i] : match;\r\n    });\r\n}\r\n\r\nexport function codeBlock(name, type, block = {}) {\r\n    return {\r\n        title: `{${name}}`,\r\n        info: `Compile an arbitrary ${name} expression`,\r\n        category: expressionCategory,\r\n        icon: expressionCategory.data.icon,\r\n        topLeft: 'inputs',\r\n        topRight: 'result',\r\n        className: 'node-wide',\r\n        ...block,\r\n        inputs: [{\r\n            key: 'inputs',\r\n            type: anyType,\r\n            multi: true,\r\n        }, {\r\n            key: 'type',\r\n            type: typeType.of(type),\r\n        }, ...block.inputs || []],\r\n        outputs: [{\r\n            key: 'result',\r\n            type,\r\n            inferType({type}) {\r\n                // return parseInputs(inputs, typeCode);\r\n                return type;\r\n            },\r\n            toMotoko({inputs, expression}) {\r\n                return parseInputs(inputs, expression);\r\n            },\r\n        }, ...block.outputs || []],\r\n        controls: [{\r\n            key: 'expression',\r\n            config: {\r\n                controlType: CodeControlHandle,\r\n            },\r\n        }, ...block.controls || []],\r\n    };\r\n}\r\n","import {useContext, useEffect, useState} from 'react';\r\nimport EventsContext, {ERROR_EVENT} from '../../contexts/EventsContext';\r\n\r\nexport default function Loading({promise, loading, error, children}) {\r\n    let [status, setStatus] = useState('loading');\r\n    let [result, setResult] = useState();\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    useEffect(() => {\r\n        Promise.resolve(promise)\r\n            .then(result => {\r\n                setStatus('success');\r\n                setResult(result);\r\n            })\r\n            .catch(err => {\r\n                setStatus('error');\r\n                setResult(err);\r\n                if(!error) {\r\n                    events.emit(ERROR_EVENT, err);\r\n                }\r\n            });\r\n    }, [promise, error, events]);\r\n\r\n    if(status === 'loading') {\r\n        return loading?.() ?? null;\r\n    }\r\n    if(status === 'error') {\r\n        return error?.(result) ?? null;\r\n    }\r\n    return children?.(result) ?? null;\r\n}","import React, {useContext, useState} from 'react';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../contexts/EventsContext';\r\nimport useListener from '../../../hooks/useListener';\r\nimport Loading from '../../common/Loading';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard/lib/Component';\r\nimport {FaCopy} from 'react-icons/fa';\r\nimport {Button} from 'react-bootstrap';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n\r\nexport default function OutputControlHandle({control, bindInput, query}) {\r\n\r\n    const findValue = async () => {\r\n        try {\r\n            return await query(control, control.getNode(), control.editor);\r\n        }\r\n        catch(err) {\r\n            console.warn(err);\r\n            return `<${err}>`;\r\n        }\r\n    };\r\n\r\n    const [valuePromise, setValuePromise] = useState(findValue);\r\n    const [copied, setCopied] = useState();\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => {\r\n        setValuePromise(findValue());\r\n    });\r\n\r\n    let tooltipRef;\r\n    const showTooltip = () => {\r\n        setCopied(true);\r\n        ReactTooltip.show(tooltipRef);\r\n        setTimeout(() => /*ReactTooltip.hide(tooltipRef)&*/setCopied(false), 1000);\r\n    };\r\n\r\n    useReactTooltip();\r\n\r\n    // TODO: \"Copy to Clipboard\" tooltip\r\n\r\n    return (\r\n        <Loading promise={valuePromise}>\r\n            {value => (value ?? null) && (\r\n                <div className=\"d-flex\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"w-100 small\"\r\n                        readOnly\r\n                        ref={bindInput}\r\n                        value={value || ''}\r\n                    />\r\n                    <CopyToClipboard text={value} /* onCopy={() => setCopied(true)} */ >\r\n                        <Button\r\n                            ref={bindInput}\r\n                            size=\"sm\"\r\n                            variant=\"outline-light\"\r\n                            data-tip={copied ? undefined : 'Copy to Clipboard'}\r\n                            onClick={showTooltip}>\r\n                            <span ref={ref => tooltipRef = ref} data-tip=\"Copied!\"/>\r\n                            <FaCopy/>\r\n                        </Button>\r\n                    </CopyToClipboard>\r\n                </div>\r\n            )}\r\n        </Loading>\r\n    );\r\n}\r\n","import {anyReversedType, anyType} from '../block-types/types';\r\nimport OutputControlHandle from '../components/rete/controls/OutputControlHandle';\r\nimport {compilerCategory} from '../block-categories/categories';\r\nimport {resolveImportRefs} from '../compilers/MotokoCompiler';\r\n\r\nexport function compileBlock(title, compilerKey, displayFn) {\r\n    function queryFor(inputKey) {\r\n        return function(control, node, editor) {\r\n            let value = editor.compilers[compilerKey].getInput(node, inputKey);\r\n            let string = displayFn ? displayFn(value) : value;\r\n            return resolveImportRefs(string);\r\n        };\r\n    }\r\n\r\n    return {\r\n        title,\r\n        category: compilerCategory,\r\n        icon: compilerCategory.data.icon,\r\n        topLeft: 'input',\r\n        topRight: 'reversed',\r\n        inputs: [{\r\n            key: 'input',\r\n            title: 'Input',\r\n            type: anyType,\r\n        }, {\r\n            key: 'reversed',\r\n            title: 'Input',\r\n            type: anyReversedType,\r\n        }],\r\n        controls: [{\r\n            key: 'reversedDisplay',\r\n            title: 'Display',\r\n            config: {\r\n                controlType: OutputControlHandle,\r\n                controlProps: {\r\n                    query: queryFor('reversed'),\r\n                },\r\n            },\r\n        }, {\r\n            key: 'display',\r\n            config: {\r\n                controlType: OutputControlHandle,\r\n                controlProps: {\r\n                    query: queryFor('input'),\r\n                },\r\n            },\r\n        }],\r\n    };\r\n}\r\n","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport classNames from 'classnames';\r\n\r\n\r\nexport default function SelectControlHandle({control, bindInput, options, findLabel}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    if(value === undefined && !options.includes(value)) {\r\n        value = options[0];\r\n        setValue(value);\r\n    }\r\n\r\n    let invalid = !control.validate(value) || !options.includes(value);\r\n\r\n    return (\r\n        <select\r\n            className={classNames(invalid && 'invalid')}\r\n            ref={bindInput}\r\n            value={value}\r\n            onChange={event => setValue(event.target.value || undefined)}>\r\n            {options.map((option, i) => (\r\n                <option key={i} label={findLabel?.(option, i) ?? option} value={option}/>\r\n            ))}\r\n        </select>\r\n    );\r\n}\r\n","import SelectControlHandle from '../components/rete/controls/SelectControlHandle';\r\n\r\nexport function stringSelectProp(prop, options) {\r\n    return {\r\n        ...prop,\r\n        config: {\r\n            ...prop.config || {},\r\n            controlType: SelectControlHandle,\r\n            controlProps: {\r\n                options: prop.optional ? [undefined, ...options] : options,\r\n                findLabel: (option) => option ? option.charAt(0).toUpperCase() + option.substring(1) : '--',\r\n            },\r\n        },\r\n    };\r\n}","const examples = [\r\n    require('./files/Echo.blocks.json'),\r\n    require('./files/Counter.blocks.json'),\r\n    require('./files/Calculator.blocks.json'),\r\n    require('./files/PhoneBook.blocks.json'),\r\n];\r\n\r\nmodule.exports = {\r\n    getExampleProjects() {\r\n        return examples;\r\n    },\r\n};","var map = {\n\t\"./Actor.js\": 107,\n\t\"./ActorClass.js\": 108,\n\t\"./Add.js\": 109,\n\t\"./And.js\": 110,\n\t\"./Await.js\": 111,\n\t\"./CodeType.js\": 112,\n\t\"./CodeValue.js\": 113,\n\t\"./CollectionSize.js\": 114,\n\t\"./CompareEqual.js\": 115,\n\t\"./CompareGreater.js\": 116,\n\t\"./CompareGreaterEqual.js\": 117,\n\t\"./CompareLess.js\": 118,\n\t\"./CompareLessEqual.js\": 119,\n\t\"./CompareNotEqual.js\": 120,\n\t\"./CompileMotoko.js\": 121,\n\t\"./CompileType.js\": 124,\n\t\"./Conditional.js\": 125,\n\t\"./ConditionalValue.js\": 126,\n\t\"./Divide.js\": 127,\n\t\"./Function.js\": 128,\n\t\"./FunctionCall.js\": 129,\n\t\"./LiteralBool.js\": 130,\n\t\"./LiteralFloat.js\": 131,\n\t\"./LiteralIdentifier.js\": 132,\n\t\"./LiteralInt.js\": 133,\n\t\"./LiteralNat.js\": 134,\n\t\"./LiteralPair.js\": 135,\n\t\"./LiteralPairType.js\": 136,\n\t\"./LiteralText.js\": 137,\n\t\"./LiteralTuple.js\": 138,\n\t\"./LiteralTupleType.js\": 139,\n\t\"./LiteralType.js\": 140,\n\t\"./LoopWhile.js\": 141,\n\t\"./MapGet.js\": 142,\n\t\"./MapPut.js\": 143,\n\t\"./MapRemove.js\": 144,\n\t\"./Multiply.js\": 145,\n\t\"./NewHashMap.js\": 146,\n\t\"./Not.js\": 147,\n\t\"./Null.js\": 148,\n\t\"./Optional.js\": 149,\n\t\"./OptionalUnwrap.js\": 150,\n\t\"./Or.js\": 151,\n\t\"./Parameter.js\": 152,\n\t\"./Return.js\": 153,\n\t\"./State.js\": 38,\n\t\"./StateRead.js\": 154,\n\t\"./StateUpdate.js\": 155,\n\t\"./Subtract.js\": 156,\n\t\"./TextConcat.js\": 157,\n\t\"./TypeMember.js\": 158,\n\t\"./TypeMemberReference.js\": 159,\n\t\"./Variable.js\": 160\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 106;","import {actorType, identifierType, memberType} from '../block-types/types';\nimport {actorCategory} from '../block-categories/categories';\n\nconst block = {\n    info: 'An actor which can be deployed as a smart contract',\n    category: actorCategory,\n    topLeft: 'actor',\n    topRight: 'members',\n    global: true,\n    computeTitle(node, editor) {\n        let {name} = editor.compilers.motoko.getInputArgs(node);\n        return name;\n    },\n    inputs: [{\n        key: 'name',\n        type: identifierType,\n        optional: true,\n    }, {\n        key: 'members',\n        type: memberType,\n        multi: true,\n    }],\n    outputs: [{\n        key: 'actor',\n        type: actorType,\n        toMotoko({name, members}) {\n            return `actor${name ? ' ' + name : ''} { ${members.join(' ')} };`;\n        },\n    }],\n};\nexport default block;","import {actorType, identifierType, memberType, paramType} from '../block-types/types';\nimport {actorCategory} from '../block-categories/categories';\n\n// TODO: subclasses\nlet thisName = 'this';\n\nconst block = {\n    info: 'An object-oriented class of actors',\n    category: actorCategory,\n    topLeft: 'actor',\n    topRight: 'members',\n    global: true,\n    computeTitle(node, editor) {\n        let {name, params} = editor.compilers.motoko.getInputArgs(node);\n        if(!name) {\n            return;\n        }\n        return `${name}(${params.join(', ')})`;\n    },\n    inputs: [{\n        key: 'name',\n        type: identifierType,\n        optional: true,\n    }, {\n        key: 'members',\n        type: memberType,\n        multi: true,\n    }, {\n        key: 'params',\n        type: paramType,\n        multi: true,\n    }],\n    outputs: [{\n        key: 'actor',\n        type: actorType,\n        toMotoko({name, params, members}) {\n            return `actor class${name ? ' ' + name : ''}(${params.join(', ')}) = ${thisName} { ${members.join(' ')} };`;\n        },\n        // }, {\n        //     key: 'this',\n        //     type: valueType,\n        //     toMotoko({}) {\n        //         return thisName;\n        //     },\n    }],\n};\nexport default block;","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('+', (a, b) => a + b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(boolType, 'and', (a, b) => a && b);\r\nexport default block;","import {asyncType, valueType} from '../block-types/types';\nimport {operatorCategory} from '../block-categories/categories';\n\nconst block = {\n    title: '(await a)',\n    info: 'Wait for an asynchronous value',\n    category: operatorCategory,\n    topRight: 'result',\n    inputs: [{\n        key: 'input',\n        type: asyncType,\n    }],\n    outputs: [{\n        key: 'result',\n        type: valueType,\n        inferType({input}) {\n            return input.generics[0];\n        },\n        toMotoko({input}) {\n            return `(await ${input})`;\n        },\n    }],\n};\nexport default block;\n","import {codeBlock} from '../block-patterns/code-patterns';\r\nimport {typeType} from '../block-types/types';\r\n\r\nconst block = codeBlock('Type', typeType);\r\nexport default block;\r\n","import {codeBlock} from '../block-patterns/code-patterns';\r\nimport {valueType} from '../block-types/types';\r\n\r\nconst block = codeBlock('Expression', valueType);\r\nexport default block;","import {mapType, natType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    title: 'Size',\r\n    category: collectionCategory,\r\n    inputs: [{\r\n        key: 'collection',\r\n        type: mapType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: natType,\r\n        toMotoko({map}) {\r\n            return `${map}.size()`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType, valueType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock([valueType, boolType], '==', (a, b) => a === b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('>', (a, b) => a > b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('>=', (a, b) => a >= b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('<', (a, b) => a < b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('<=', (a, b) => a <= b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType, valueType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock([valueType, boolType], '!=', (a, b) => a !== b);\r\nexport default block;\r\n","import {compileBlock} from '../block-patterns/compile-patterns';\n\nconst block = compileBlock('Motoko', 'motoko');\nexport default block;\n","import {compileBlock} from '../block-patterns/compile-patterns';\n\nconst block = compileBlock('Type', 'type', type => type?.toTypeString());\nexport default block;\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {boolType, effectType} from '../block-types/types';\r\n\r\nconst block = statementBlock({\r\n    title: 'if() then {} else {}',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'trueCase',\r\n        title: 'True',\r\n        type: effectType,\r\n        optional: true,\r\n    }, {\r\n        key: 'falseCase',\r\n        title: 'False',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n}, ({condition, trueCase, falseCase}) => {\r\n    if(String(condition) === 'true') {\r\n        return trueCase;\r\n    }\r\n    if(String(condition) === 'false') {\r\n        return falseCase;\r\n    }\r\n\r\n    let falsePart = falseCase ? ` else { ${falseCase} }` : '';\r\n    return `if (${condition}) { ${trueCase || ''} }${falsePart};`;\r\n});\r\nexport default block;","import {boolType, valueType} from '../block-types/types';\r\nimport {decompositionCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    title: 'Map Bool',\r\n    category: decompositionCategory,\r\n    topRight: 'result',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'true',\r\n        type: valueType,\r\n    }, {\r\n        key: 'false',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: valueType,\r\n        toMotoko({condition, trueCase, falseCase}) {\r\n            if(condition === true) {\r\n                return trueCase;\r\n            }\r\n            else if(condition === false) {\r\n                return falseCase;\r\n            }\r\n            return `(if (${condition}) {${trueCase}} else { ${falseCase} })`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('/', (a, b) => a / b);\r\nexport default block;","import {asyncType, boolType, effectType, paramType, unitType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock} from '../block-patterns/member-patterns';\r\nimport {functionCategory} from '../block-categories/categories';\r\nimport {stringSelectProp} from '../block-patterns/control-patterns';\r\n\r\nconst defaultReturnType = effectType.of(unitType);\r\n\r\nconst block = memberBlock({\r\n    info: 'Evaluate based on given input parameters',\r\n    category: functionCategory,\r\n    topRight: 'body',\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        // return name;/////\r\n        let {params, asyncKind} = editor.compilers.motoko.getInputArgs(node);\r\n        let returnType = editor.compilers.type.getInput(node, 'body');\r\n        if(!returnType) {\r\n            return;\r\n        }\r\n        returnType = returnType.generics[0]; // Unwrap Effect<>\r\n        if(asyncKind) {\r\n            returnType = asyncType.of(returnType);\r\n        }\r\n        return name && params && `${name}(${params.join(', ')})${returnType ? ' : ' + editor.compilers.motoko.getTypeString(returnType) : ''}`;\r\n    },\r\n    shortcuts: [{\r\n        block: 'Return',\r\n    }, {\r\n        block: 'FunctionCall',\r\n        nodeKey: 'functionNode',\r\n    }],\r\n    inputs: [{\r\n        key: 'params',\r\n        type: paramType,\r\n        multi: true,\r\n    }/*, {\r\n        key: 'returnType',\r\n        type: typeType.of(valueType),\r\n    }*/, {\r\n        key: 'body',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n    // outputs: [{\r\n    //     key: 'reference',\r\n    //     type: valueType,\r\n    //     toMotoko({name}) {\r\n    //         return name;\r\n    //     },\r\n    // }],\r\n    controls: [{\r\n        key: 'shared',\r\n        type: boolType,\r\n    }, stringSelectProp({\r\n        key: 'asyncKind',\r\n        optional: true,\r\n    }, ['async', 'query'])],\r\n}, {\r\n    toMotoko({visibility, shared, asyncKind, name, params, body}, node, compiler) {\r\n        // TODO: dry with State modifiers\r\n        let modifiers = [visibility !== 'system' && visibility, shared && 'shared', asyncKind === 'query' && asyncKind].filter(m => m).join(' '); //TODO: combine into single control\r\n\r\n        let returnType = body ? compiler.inferType(node, 'body') : defaultReturnType;\r\n        if(!returnType) {\r\n            return;\r\n        }\r\n        returnType = returnType.generics[0]; // Unwrap `Effect<>`\r\n        if(asyncKind) {\r\n            returnType = asyncType.of(returnType);\r\n        }\r\n        let returnString = compiler.getTypeString(returnType);\r\n        if(!returnString) {\r\n            return;///\r\n        }\r\n        return `${modifiers && modifiers + ' '}func${name ? ' ' + name : ''}(${params.join(', ')})${returnString !== '()' ? ': ' + returnString : ''} { ${body || ''} };`;\r\n    },\r\n});\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {nodeType, valueType} from '../block-types/types';\r\nimport {FaPlayCircle} from 'react-icons/fa';\r\nimport {functionCategory} from '../block-categories/categories';\r\n\r\nconst block = statementBlock({\r\n    info: 'Invoke a function in this project',\r\n    title: 'Call Function',\r\n    category: functionCategory,\r\n    icon: FaPlayCircle,\r\n    computeTitle(node, editor) {\r\n        let functionNode = editor.compilers.node.getInput(node, 'functionNode');\r\n        if(!functionNode) {\r\n            return;\r\n        }\r\n        let name = editor.compilers.motoko.getInput(functionNode, 'name');\r\n        let paramNames = editor.compilers.node.getInput(functionNode, 'params')\r\n            .map(n => editor.compilers.motoko.getInput(n, 'name'));\r\n        return name && `${name}(${paramNames.join(', ')})`;\r\n    },\r\n    inputs: [{\r\n        key: 'args',\r\n        type: valueType,\r\n        multi: true, // TODO: separate arg sockets\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: 'Value',\r\n        inferType(_, node, compiler) {\r\n            let functionNode = compiler.editor.compilers.node.getInput(node, 'functionNode');\r\n            if(!functionNode) {\r\n                return;\r\n            }\r\n            return compiler.editor.compilers.type.getInput(functionNode, 'body');\r\n        },\r\n        toMotoko({args}, node, compiler) {\r\n            let functionNode = compiler.editor.compilers.node.getInput(node, 'functionNode');\r\n            if(!functionNode) {\r\n                return;\r\n            }\r\n            let name = compiler.getInput(functionNode, 'name');\r\n            if(!name) {\r\n                return;\r\n            }\r\n            return `${name}(${args.join(', ')})`;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'functionNode',\r\n        type: nodeType.withMeta({block: 'Function'}),\r\n    }],\r\n}, ({functionNode, args}, node, compiler) => {\r\n    let name = compiler.getOutput(functionNode, 'name');\r\n    if(!name) {\r\n        return;\r\n    }\r\n    return `ignore ${name}(${args.join(', ')});`;\r\n});\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Boolean',\r\n}, boolType);\r\nexport default block;","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {floatType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Float',\r\n}, floatType);\r\nexport default block;","import {identifierType} from '../block-types/types';\r\nimport {FaItalic} from 'react-icons/all';\r\n\r\nconst block = {\r\n    title: 'Identifier',\r\n    // category: defaultCategory,\r\n    icon: FaItalic,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: identifierType,\r\n        control: true,\r\n    }],\r\n};\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {intType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Integer',\r\n}, intType);\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {natType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Natural Number',\r\n}, natType);\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {tupleType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Pair',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && `Pair ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    inputs: [{\r\n        key: 'left',\r\n        title: 'a',\r\n        type: valueType,\r\n    }, {\r\n        key: 'right',\r\n        title: 'b',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: tupleType.of(valueType, valueType),\r\n        inferType({left, right}) {\r\n            return tupleType.of(left, right);\r\n        },\r\n        toMotoko({left, right}) {\r\n            return `(${left}, ${right})`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {tupleType, typeType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Pair of Types',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && editor.compilers.motoko.getTypeString(type);\r\n    },\r\n    inputs: [{\r\n        key: 'left',\r\n        title: 'a',\r\n        type: typeType.of(valueType),\r\n    }, {\r\n        key: 'right',\r\n        title: 'b',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(tupleType.of(valueType, valueType)),\r\n        inferType({left, right}) {\r\n            return /*typeType.of(*/tupleType.of(left, right)/*)*/;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {textType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Text',\r\n}, textType, JSON.stringify);\r\nexport default block;\r\n","import {literalCategory} from '../block-categories/categories';\r\nimport {tupleType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Tuple',\r\n    category: literalCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && `Tuple ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    inputs: [{\r\n        key: 'inputs',\r\n        type: valueType,\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: tupleType,\r\n        inferType({inputs}) {\r\n            return tupleType.of(...inputs);\r\n        },\r\n        toMotoko({inputs}) {\r\n            return `(${inputs.join(', ')})`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {tupleType, typeType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Tuple of Types',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && editor.compilers.motoko.getTypeString(type);\r\n    },\r\n    inputs: [{\r\n        key: 'types',\r\n        type: typeType.of(valueType),\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(tupleType),\r\n        inferType({types}) {\r\n            return /*typeType.of(*/tupleType.of(...types/*.map(t => t.generics[0])*/)/*)*/; // Unwrap Type<?> inputs\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {typeType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Type',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(valueType),\r\n        control: true,\r\n        inferType({value}) {\r\n            // return typeType.of(value);\r\n            return value;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {boolType, effectType} from '../block-types/types';\r\n\r\nconst block = statementBlock({\r\n    title: 'while() {}',\r\n    info: 'Repeat while the condition is true',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'loop',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n}, ({condition, loop}) => {\r\n    return `while (${condition}) { ${loop ?? ''} };`;\r\n});\r\nexport default block;","import {mapType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateReadIcon} from './State';\r\n\r\nconst block = {\r\n    title: 'Get (Map)',\r\n    category: collectionCategory,\r\n    icon: stateReadIcon,\r\n    topRight: 'value',\r\n    inputs: [{\r\n        key: 'map',\r\n        type: mapType,\r\n    }, {\r\n        key: 'key',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType({map}) {\r\n            if(mapType.isSubtype(map)) {\r\n                return map.generics[1];\r\n            }\r\n        },\r\n        toMotoko({map, key}) {\r\n            return `${map}.get(${key})`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {mapType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateWriteIcon} from './State';\r\n\r\nconst block = statementBlock({\r\n    title: 'Put (Map)',\r\n    category: collectionCategory,\r\n    icon: stateWriteIcon,\r\n    inputs: [{\r\n        key: 'map',\r\n        type: mapType,\r\n    }, {\r\n        key: 'key',\r\n        type: valueType,\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n    }],\r\n}, ({map, key, value}) => {\r\n    return `${map}.put(${key}, ${value});`;\r\n});\r\nexport default block;\r\n","import {mapType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {FaEllipsisH} from 'react-icons/all';\r\n\r\nconst block = statementBlock({\r\n    title: 'Remove (Map)',\r\n    category: collectionCategory,\r\n    icon: FaEllipsisH,\r\n    inputs: [{\r\n        key: 'map',\r\n        type: mapType,\r\n    }, {\r\n        key: 'key',\r\n        type: valueType,\r\n    }],\r\n}, ({map, key}) => {\r\n    return `${map}.remove(${key});`;\r\n});\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {floatType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(floatType, '*', (a, b) => a * b);\r\nexport default block;","import {mapType, textType, typeType, valueType} from '../block-types/types';\r\nimport {importRef} from '../compilers/MotokoCompiler';\r\nimport {collectionCategory} from '../block-categories/categories';\r\n\r\nexport const hashMapImportRef = importRef('mo:base/HashMap');\r\n\r\nconst block = {\r\n    title: 'Map',\r\n    category: collectionCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && `HashMap<${editor.compilers.motoko.getTypeString(type.generics[0])},${editor.compilers.motoko.getTypeString(type.generics[1])}>`;\r\n    },\r\n    inputs: [{\r\n        key: 'keyType',\r\n        type: typeType.of(valueType),\r\n        config: {\r\n            defaultValue: textType,\r\n        },\r\n    }, {\r\n        key: 'valueType',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: mapType,\r\n        inferType({keyType, valueType}) {\r\n            return mapType.of(keyType, valueType);\r\n        },\r\n        toMotoko({keyType, valueType}) {\r\n            return `${hashMapImportRef}.HashMap<${keyType}, ${valueType}>(0, ${keyType}.equal, ${valueType}.hash)`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {unaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = unaryOperatorBlock(boolType, 'not', (a) => !a);\r\nexport default block;\r\n","import {optionalType, valueType} from '../block-types/types';\r\nimport {literalCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    category: literalCategory,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: optionalType.of(valueType),// TODO: Option<*> or null type\r\n        // inferType() {\r\n        //     return ;\r\n        // },\r\n        toMotoko() {\r\n            return `null`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {optionalType, valueType} from '../block-types/types';\nimport {operatorCategory} from '../block-categories/categories';\n\nconst block = {\n    title: '(?a)',\n    info: 'Create an optional version of the input value',\n    category: operatorCategory,\n    topRight: 'result',\n    inputs: [{\n        key: 'input',\n        type: valueType,\n    }],\n    outputs: [{\n        key: 'result',\n        type: optionalType,\n        inferType({input}) {\n            return optionalType.of(input);\n        },\n        toMotoko({input}) {\n            return `(?${input})`;\n        },\n    }],\n};\nexport default block;\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {effectType, optionalType, valueType} from '../block-types/types';\r\nimport {decompositionCategory} from '../block-categories/categories';\r\n\r\nconst block = statementBlock({\r\n    title: 'Unwrap Optional',\r\n    info: 'Run different logic depending on whether an Optional value is null',\r\n    category: decompositionCategory,\r\n    inputs: [{\r\n        key: 'input',\r\n        type: optionalType,\r\n    }, {\r\n        key: 'valueCase',\r\n        title: 'Value',\r\n        type: effectType,\r\n        optional: true,\r\n    }, {\r\n        key: 'nullCase',\r\n        title: 'Null',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType({input}) {\r\n            return input;\r\n        },\r\n        toMotoko({input}, node) {\r\n            return `value__${node.id}`;\r\n        },\r\n    }],\r\n}, ({input, valueCase, nullCase}, node) => {\r\n    if(String(input) === 'null') {\r\n        return nullCase;\r\n    }\r\n\r\n    let valuePart = valueCase ? `case (?value__${node.id}) {${valueCase}};` : '';\r\n    let nullPart = nullCase ? `case null {${nullCase}};` : '';\r\n\r\n    return `switch (${input}) { ${valuePart}${nullPart && ' ' + nullPart} };`;\r\n});\r\nexport default block;","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(boolType, 'or', (a, b) => a || b);\r\nexport default block;\r\n","import {identifierType, paramType, typeType, valueType} from '../block-types/types';\r\nimport {paramCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    info: 'An input parameter to a class or function',\r\n    topLeft: 'param',\r\n    topRight: 'value',\r\n    category: paramCategory,\r\n    computeTitle(node, editor) {\r\n        let name = editor.compilers.motoko.getInput(node, 'name');\r\n        let type = editor.compilers.type.getInput(node, 'type');\r\n        return name && `${name} : ${type ? editor.compilers.motoko.getTypeString(type) : 'Any'}`;\r\n    },\r\n    inputs: [{\r\n        key: 'name',\r\n        type: identifierType,\r\n    }, {\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'param',\r\n        type: paramType,\r\n        toMotoko({name, type}, node, compiler) {\r\n            // console.log(type)//\r\n            let typeString = compiler.getTypeString(type) || 'Any';\r\n            return `${name} : ${typeString}`;\r\n        },\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n        toMotoko({name}) {\r\n            return name;\r\n        },\r\n        inferType({type}) {\r\n            return type;\r\n        },\r\n    }],\r\n};\r\nexport default block;","import {effectType, unitType, valueType} from '../block-types/types';\r\nimport {endStatementBlock} from '../block-patterns/statement-patterns';\r\nimport {functionCategory} from '../block-categories/categories';\r\nimport {FaCaretLeft} from 'react-icons/fa';\r\n\r\nconst block = endStatementBlock({\r\n    info: 'End a function\\'s execution path',\r\n    category: functionCategory,\r\n    icon: FaCaretLeft,\r\n    inputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        optional: true,\r\n    }],\r\n    // controls: [{\r\n    //     key: 'functionNode',\r\n    //     config: {\r\n    //         controlType: NodeControlHandle,\r\n    //         controlProps: {\r\n    //             component: 'Function',\r\n    //         },\r\n    //     },\r\n    // }],\r\n}, {\r\n    inferType({value}) {\r\n        return effectType.of(value || unitType);\r\n    },\r\n    toMotoko({value}) {\r\n        return `return${value ? ' ' + value : ''};`;\r\n    },\r\n});\r\nexport default block;","import {nodeType, valueType} from '../block-types/types';\r\nimport {stateCategory} from '../block-categories/categories';\r\nimport {stateReadIcon} from './State';\r\n\r\nconst block = {\r\n    title: 'Read State',\r\n    category: stateCategory,\r\n    icon: stateReadIcon,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType(args, node, compiler) {\r\n            let stateNode = compiler.editor.compilers.node.getInput(node, 'stateNode');\r\n            if(!stateNode) {\r\n                return;\r\n            }\r\n            return compiler.getInput(stateNode, 'initialValue');\r\n        },\r\n        toMotoko(args, node, compiler) {\r\n            let stateNode = compiler.editor.compilers.node.getInput(node, 'stateNode');\r\n            if(!stateNode) {\r\n                return;\r\n            }\r\n            return compiler.getInput(stateNode, 'name');\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'stateNode',\r\n        type: nodeType.withMeta({block: 'State'}),\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {stateCategory} from '../block-categories/categories';\r\nimport {nodeType} from '../block-types/types';\r\nimport {stateWriteIcon} from './State';\r\n\r\nconst block = statementBlock({\r\n    title: 'Write State',\r\n    category: stateCategory,\r\n    icon: stateWriteIcon,\r\n    inputs: [{\r\n        key: 'value',\r\n        type: 'Value',\r\n        // optional: true,\r\n    }],\r\n    // outputs: [{\r\n    //     key: 'newValue',\r\n    //     type: 'Value',\r\n    //     toMotoko({node: stateNode, value}, node, compiler) {\r\n    //         let name = compiler.getOutput(stateNode, 'name');\r\n    //         if(!name) {\r\n    //             return;\r\n    //         }\r\n    //         return `(${name} := ${value || '()'})`;\r\n    //     },\r\n    // }],\r\n    controls: [{\r\n        key: 'stateNode',\r\n        type: nodeType.withMeta({block: 'State'}),\r\n    }],\r\n}, ({stateNode, value}, node, compiler) => {\r\n    let name = compiler.getInput(stateNode, 'name');\r\n    if(!name) {\r\n        return;\r\n    }\r\n    return `${name} := ${value};`;\r\n});\r\nexport default block;\r\n","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('-', (a, b) => a - b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {textType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(textType, '#', (a, b) => a || b);\r\nexport default block;\r\n","import {typeType, valueType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock} from '../block-patterns/member-patterns';\r\nimport {typeCategory} from '../block-categories/categories';\r\n\r\nconst block = memberBlock({\r\n    title: 'Named Type',\r\n    info: 'An actor-level type definition',\r\n    category: typeCategory,\r\n    topRight: 'type',\r\n    shortcuts: [{\r\n        block: 'TypeMemberReference',\r\n        nodeKey: 'typeNode',\r\n    }],\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        let type = editor.compilers.type.getInput(node, 'typeInput');//?.generics[0];\r\n        return type && `${name || '(?)'} = ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    inputs: [{\r\n        key: 'typeInput',\r\n        title: 'Definition',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n        inferType({typeInput}) {\r\n            if(!typeInput.isAbstract()) {\r\n                // return typeType.of(typeInput);\r\n                return typeInput;///\r\n            }\r\n        },\r\n    }],\r\n}, {\r\n    toMotoko({visibility, name, typeInput}) {\r\n        let modifiers = [visibility !== 'system' && visibility].filter(m => m).join(' ');\r\n\r\n        return `${modifiers && modifiers + ' '}type ${name} = ${typeInput};`;\r\n    },\r\n});\r\nexport default block;\r\n","import {nodeType, typeType, valueType} from '../block-types/types';\r\nimport {typeCategory} from '../block-categories/categories';\r\nimport {FaAngleRight} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Type Reference',\r\n    category: typeCategory,\r\n    icon: FaAngleRight,\r\n    topRight: 'type',\r\n    computeTitle(node, editor) {\r\n        let typeNode = editor.compilers.node.getInput(node, 'typeNode');\r\n        console.log(typeNode)\r\n        if(!typeNode) {\r\n            return;\r\n        }\r\n        return editor.compilers.motoko.getInput(typeNode, 'name');\r\n    },\r\n    outputs: [{\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n        inferType({typeNode}, node, editor) {\r\n            // console.log(typeNode)////\r\n            return editor.compilers.types.getInput(typeNode, 'type');\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'typeNode',\r\n        type: nodeType.withMeta({block: 'TypeMember'}),\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {identifierType, valueType} from '../block-types/types';\r\nimport {paramCategory} from '../block-categories/categories';\r\n\r\nconst block = statementBlock({\r\n    title: 'Local Variable',\r\n    info: 'Store and retrieve data from within a function',\r\n    category: paramCategory,\r\n    inputs: [{\r\n        key: 'name',\r\n        type: identifierType,\r\n        optional: true,\r\n    }, {\r\n        key: 'initialValue',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType({initialValue}) {\r\n            return initialValue;\r\n        },\r\n        toMotoko({name}, node) {\r\n            return name || `var__${node.id}`;\r\n        },\r\n    }],\r\n}, ({name, initialValue}, node) => {\r\n    return `var ${name || `var__${node.id}`} = ${initialValue};`;\r\n});\r\nexport default block;","import React, {useMemo, useCallback} from 'react';\r\n\r\nexport default function ContextMenu({x, y, children, style: styleProp, handleCloseMenu, ...others}) {\r\n\r\n    const style = useMemo(() => ({\r\n        position: 'absolute',\r\n        left: x,\r\n        top: y,\r\n        ...styleProp,\r\n    }), [x, y, styleProp]);\r\n\r\n    const bindScreen = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        const listener = event => event.stopPropagation();\r\n        el.addEventListener('pointermove', listener);\r\n        el.addEventListener('mousemove', listener);\r\n        el.addEventListener('wheel', listener);\r\n    }, []);\r\n\r\n    const bindContainer = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        const moveIntoWindow = () => {\r\n            let offset = el.getBoundingClientRect().bottom - window.innerHeight;\r\n            if(offset > 0) {\r\n                el.style.top = `${y - offset}px`;\r\n            }\r\n        };\r\n        moveIntoWindow();\r\n        el.onresize = moveIntoWindow;\r\n    }, [y]);\r\n\r\n    return (\r\n        <div\r\n            className=\"context-menu-screen\"\r\n            style={{position: 'absolute', top: 0, left: 0, bottom: 0, right: 0, pointerEvents: 'all'}}\r\n            ref={bindScreen}\r\n            onKeyDown={e => e.keyCode === 27 /* escape */ && handleCloseMenu()}\r\n            onMouseDown={() => handleCloseMenu()}\r\n            {...others}>\r\n            <div className=\"context-menu-container\" style={style} ref={bindContainer}>\r\n                <div className=\"context-menu\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const MenuContext = React.createContext(null);\r\n","export default function MenuIcon({children, color}) {\r\n    return (\r\n        <span className=\"context-menu-icon\" style={{color}}>{children}</span>\r\n    );\r\n}","import classNames from 'classnames';\r\nimport MenuIcon from './MenuIcon';\r\n\r\nexport default function MenuAction({icon, color, selected, onAction, children, style, ...others}) {\r\n    return (\r\n        <div\r\n            className={classNames('context-menu-action', selected && 'selected')}\r\n            style={{color, userSelect: 'none', ...style}}\r\n            onMouseDown={event => event.button === 0 && onAction(event)} {...others}>\r\n            {icon && <MenuIcon>{icon}</MenuIcon>}\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React, {useContext} from 'react';\r\nimport MenuAction from '../MenuAction';\r\nimport {MenuContext} from '../../contexts/MenuContext';\r\n\r\n\r\nexport default function SelectionMenu() {\r\n\r\n    const {editor} = useContext(MenuContext);\r\n\r\n    return (\r\n        <>\r\n            <MenuAction onAction={() => editor.selected.each(node => editor.removeNode(node))}>Delete</MenuAction>\r\n            {/*<MenuOption>Clone</MenuOption>*/}\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport MenuAction from './MenuAction';\r\nimport {FaRegStickyNote} from 'react-icons/fa';\r\nimport getBlockLabel from '../../../utils/getBlockLabel';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\n\r\n\r\nexport default function MenuComponent({component, ...others}) {\r\n    const block = component.block;\r\n    const category = block?.category;\r\n\r\n    useReactTooltip();\r\n    if(block?.info) {\r\n        others = {\r\n            'data-tip': block.info.endsWith('.') ? block.info : `${block.info}.`,\r\n            'data-place': 'right',\r\n            ...others,\r\n        };\r\n    }\r\n\r\n    return (\r\n        <MenuAction\r\n            icon={React.createElement(block?.icon || category?.data.icon || FaRegStickyNote)}\r\n            color={category?.data.color}\r\n            {...others}>\r\n            {getBlockLabel(block) || component.name}\r\n        </MenuAction>\r\n    );\r\n}","import {useCallback} from 'react';\r\n\r\nexport default function MenuSearch({value, onChange, onAction, onKeyDown, children, ...others}) {\r\n\r\n    const bindInput = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        el.focus();\r\n        // el.select();\r\n    }, [{}/* Force redraw in order to refocus */]); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n\r\n    const handleKeyDown = (onKeyDown || onAction) && (event => {\r\n        if(onKeyDown) {\r\n            onKeyDown(event);\r\n        }\r\n        if(onAction && event.key === 'Enter') {\r\n            onAction();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                className=\"context-menu-search\"\r\n                autoFocus\r\n                ref={bindInput}\r\n                autoComplete=\"blocks-search\"\r\n                value={value || ''}\r\n                onClick={event => event.stopPropagation()}\r\n                onChange={onChange && (event => onChange(event.target.value))}\r\n                onKeyDown={handleKeyDown}\r\n                {...others}/>\r\n            <div className=\"context-menu-search-area\">\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, {useCallback, useContext, useState} from 'react';\r\nimport MenuComponent from '../MenuComponent';\r\nimport {MenuContext} from '../../contexts/MenuContext';\r\nimport MenuSearch from '../MenuSearch';\r\nimport useEditorComponents from '../../hooks/useEditorComponents';\r\n\r\nfunction deepCopy(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nexport async function createNode(component, {data, meta, position: {x, y} = {}}) {\r\n    const node = await component.createNode(data ? deepCopy(data) : {});\r\n    if(meta) {\r\n        node.meta = Object.assign(deepCopy(meta), node.meta);\r\n    }\r\n    [node.position[0], node.position[1]] = [x, y];\r\n    return node;\r\n}\r\n\r\nfunction findRelevantComponents(input, output, components) {\r\n    if(!input && !output) {\r\n        return components;\r\n    }\r\n    let [inputType, outputType] = [input?.socket.findType?.(), output?.socket.findType?.()];\r\n    // if(!inputType && !outputType) {\r\n    //     return [];\r\n    // }\r\n    if(inputType?.data.reversed || outputType?.data.reversed) {\r\n        [inputType, outputType] = [outputType, inputType];\r\n    }\r\n    return components.filter(c =>\r\n        (!inputType || c.block.outputs.some((prop) => inputType.isSubtype(prop.type) || prop.type.isSubtype(inputType))) &&\r\n        (!outputType || c.block.inputs.some((prop) => outputType.isSubtype(prop.type) || prop.type.isSubtype(outputType))));\r\n}\r\n\r\nexport default function PlacementMenu() {\r\n    let [searchText, setSearchText] = useState('');\r\n    let [index, setIndex] = useState(0);\r\n\r\n    let {editor, mouse, context} = useContext(MenuContext);\r\n\r\n    let components = useEditorComponents(editor, c => [c.block?.category.root.name || '', c.data.title || c.name]);\r\n    if(context) {\r\n        components = findRelevantComponents(context.input, context.output, components);\r\n    }\r\n    else {\r\n        components = components.filter(c => c.block.global);\r\n    }\r\n    index = Math.min(components.length - 1, index);\r\n\r\n    if(searchText) {\r\n        let lower = searchText.toLowerCase();\r\n        components = components.filter(c => c.keywords?.some(k => k.toLowerCase().startsWith(lower)) || c.name.toLowerCase().startsWith(lower));\r\n    }\r\n\r\n    // Arrow keys pressed\r\n    function handleSearchKeyDown(event) {\r\n        if(event.keyCode === 38 /* Up Arrow */) {\r\n            setIndex(Math.max(0, index - 1));\r\n        }\r\n        if(event.keyCode === 40 /* Down Arrow */) {\r\n            setIndex(index + 1);\r\n        }\r\n    }\r\n\r\n    // Enter key pressed\r\n    async function handleSearchAction() {\r\n        if(components.length) {\r\n            await handleCreateNode(components[index]);\r\n        }\r\n    }\r\n\r\n    // Create node from component\r\n    const handleCreateNode = useCallback(async (component) => {\r\n        setSearchText('');\r\n        editor.trigger('hidecontextmenu');\r\n\r\n        const node = await createNode(component, {position: mouse});\r\n        editor.addNode(node);\r\n\r\n        if(context) {\r\n            let {input, output} = context;\r\n            if(input) {\r\n                const output = [...node.outputs.values()].find(output => input.socket.compatibleWith(output.socket));\r\n                if(output) {\r\n                    editor.connect(output, input);\r\n                }\r\n            }\r\n            if(output) {\r\n                const input = [...node.inputs.values()].find(input => input.socket.compatibleWith(output.socket));\r\n                if(input) {\r\n                    editor.connect(output, input);\r\n                }\r\n            }\r\n        }\r\n    }, [editor, mouse, context]);\r\n\r\n    // TODO: create literal blocks when typing numbers, strings, etc.\r\n    let menuItems = components.map((component, i) => (\r\n        <MenuComponent\r\n            key={component.name}\r\n            component={component}\r\n            selected={index === i}\r\n            onAction={() => handleCreateNode(component)}\r\n        />\r\n    ));\r\n    return context ? (\r\n        <MenuSearch\r\n            value={searchText}\r\n            onChange={setSearchText}\r\n            onKeyDown={handleSearchKeyDown}\r\n            onAction={handleSearchAction}>\r\n            {menuItems}\r\n        </MenuSearch>\r\n    ) : menuItems;\r\n}","import {useMemo} from 'react';\r\n\r\nexport default function useEditorComponents(editor, sortFn) {\r\n    const hash = [...editor.components].map(c => c.name).join('##');\r\n\r\n    return useMemo(() => {\r\n        return [...editor.components.values()]\r\n            .map(v => [sortFn(v), v])\r\n            .sort(([a], [b]) => {\r\n                if(Array.isArray(a)) {\r\n                    for(let i = 0; i < a.length; i++) {\r\n                        let compare = a[i].localeCompare(b[i]);\r\n                        if(compare !== 0) {\r\n                            return compare;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return a.localeCompare(b);\r\n                }\r\n            })\r\n            .map(([, v]) => v);\r\n    }, [hash]); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ContextMenu from './components/ContextMenu';\r\nimport {MenuContext} from './contexts/MenuContext';\r\nimport SelectionMenu from './components/menus/SelectionMenu';\r\nimport PlacementMenu from './components/menus/PlacementMenu';\r\nimport Rete from 'rete';\r\n\r\n// Adapted from https://github.com/michael-braun/rete-react-contextmenu-plugin\r\n\r\nfunction install(editor, config = {}) {\r\n    editor.bind('hidecontextmenu');\r\n    editor.bind('showcontextmenu');\r\n\r\n    let [offsetX, offsetY] = config.offset ? [config.offset.x, config.offset.y] : [-10, -10];\r\n\r\n    let menu = null;\r\n\r\n    editor.on('hidecontextmenu', () => {\r\n        if(menu) {\r\n            menu.style.display = 'none';\r\n        }\r\n    });\r\n\r\n    editor.on(['click', 'contextmenu'], () => {\r\n        editor.trigger('hidecontextmenu');\r\n    });\r\n\r\n    editor.on('contextmenu', ({e, node, context}) => {\r\n        e.preventDefault?.();\r\n        // if(e.button === 2) {\r\n        //     return;///\r\n        // }\r\n        e.stopPropagation?.();\r\n\r\n        if(!editor.trigger('showcontextmenu', {e, node, context})) {\r\n            return;\r\n        }\r\n\r\n        // Select node under cursor\r\n        if(node) {\r\n            if(!editor.selected.contains(node)) {\r\n                editor.selectNode(node);\r\n            }\r\n        }\r\n        else {\r\n            // editor.selected.clear();\r\n        }\r\n\r\n        const [x, y] = [e.clientX, e.clientY];\r\n\r\n        if(!menu) {\r\n            menu = document.createElement('div');\r\n            editor.view.container.appendChild(menu);\r\n        }\r\n        menu.style.display = 'block';\r\n        ReactDOM.render((\r\n            <ContextMenu\r\n                x={x + offsetX}\r\n                y={y + offsetY}\r\n                handleCloseMenu={() => editor.trigger('hidecontextmenu')}>\r\n                {/*<AppTooltip/>*/}\r\n                <MenuContext.Provider value={{editor, mouse, node, context}}>\r\n                    {node ? (\r\n                        <SelectionMenu/>\r\n                    ) : (\r\n                        <PlacementMenu/>\r\n                    )}\r\n                </MenuContext.Provider>\r\n            </ContextMenu>\r\n        ), menu);\r\n    });\r\n\r\n    editor.on('destroy', () => {\r\n        editor.trigger('hidecontextmenu');\r\n        if(menu) {\r\n            menu.remove();\r\n            menu = null;\r\n        }\r\n    });\r\n\r\n    let mouse;\r\n    let mouseEvent;\r\n    let connectionMouseMoved = false;\r\n    let removingConnection = false;\r\n\r\n    editor.view.container.addEventListener('pointermove', e => mouseEvent = e);\r\n\r\n    // // Open context menu on left click\r\n    // editor.on('click', e => {\r\n    //     editor.trigger('contextmenu', {e});\r\n    // });\r\n\r\n    editor.on('mousemove', m => {\r\n        mouse = m;\r\n        connectionMouseMoved = true;\r\n    });\r\n\r\n    editor.on('connectionpick', io => {\r\n        connectionMouseMoved = false;\r\n        let prevConnections = [...io.connections];\r\n        setTimeout(() => {\r\n            if(io.connections.length < prevConnections.length) {\r\n                // Connection is being removed\r\n                removingConnection = true;\r\n            }\r\n        });\r\n    });\r\n\r\n    editor.on('connectiondrop', io => {\r\n        if(!connectionMouseMoved) {\r\n            return;\r\n        }\r\n        if(removingConnection) {\r\n            removingConnection = false;\r\n            return;\r\n        }\r\n        let prevConnections = [...io.connections];\r\n        setTimeout(() => {\r\n            // Prevent activating if connections changed\r\n            if(io.connections.length !== prevConnections.length || io.connections.some((conn, i) =>\r\n                (conn.input !== prevConnections[i].input) || (conn.output !== prevConnections[i].output))) {\r\n                return;\r\n            }\r\n            editor.trigger('contextmenu', {\r\n                e: mouseEvent,\r\n                context: {\r\n                    input: io instanceof Rete.Input ? io : null,\r\n                    output: io instanceof Rete.Output ? io : null,\r\n                },\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nconst ContextMenuPlugin = {\r\n    name: 'blocks-contextmenu',\r\n    install,\r\n};\r\nexport default ContextMenuPlugin;\r\n","import React from 'react';\r\nimport {paramCase} from 'change-case';\r\nimport classNames from 'classnames';\r\nimport Rete from 'rete';\r\n\r\n// Adapted from https://github.com/retejs/react-render-plugin/blob/master/src/Socket.jsx\r\n\r\nexport function SocketHandle(props) {\r\n    const {type, socket, innerRef, io} = props;\r\n\r\n    let socketType = socket.findType();\r\n    let reversed = !!socketType.data.reversed;\r\n\r\n    let multiple = io.multipleConnections && (io instanceof Rete.Input) === !reversed;\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'socket',\r\n                type,\r\n                paramCase(socket.name),\r\n                multiple && 'multiple',\r\n                reversed && 'reversed',\r\n                !multiple && io.connections.length && 'occupied',\r\n                'category-' + socketType.data.category,\r\n            )}\r\n            title={socket.name}\r\n            ref={el => el && innerRef(el, type, io)}\r\n        />\r\n    );\r\n}","import {useContext, useState} from 'react';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../../contexts/EventsContext';\r\nimport useListener from '../../../../hooks/useListener';\r\nimport useReactTooltip from '../../../../hooks/useReactTooltip';\r\n\r\nexport default function DynamicTitle({editor, node, block, fallback}) {\r\n\r\n    const computeTitle = () => {\r\n        /// untested\r\n        if(editor.silent) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            return block.computeTitle(node, editor);\r\n        }\r\n        catch(err) {\r\n            console.error(`Unable to compute title for node: ${node.name}`);\r\n            console.error(err);\r\n            return '<Error>';\r\n        }\r\n    };\r\n\r\n    const [title, setTitle] = useState(computeTitle);\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => setTitle(computeTitle()));\r\n\r\n    const result = title || fallback || null;\r\n\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <span data-tip={result}>{result}</span>\r\n    );\r\n}","import getDefaultLabel from './getDefaultLabel';\r\n\r\nexport default function getPropLabel(prop) {\r\n    if(!prop) {\r\n        return '';\r\n    }\r\n    return prop.title || getDefaultLabel(prop.key);\r\n}","// Enable selecting input fields without dragging node\r\nexport const bindNodeInput = ref => ref && ref.addEventListener('pointerdown', event => event.stopPropagation());\r\n","import React, {useContext} from 'react';\r\nimport {bindNodeInput} from '../../../../utils/bindNodeInput';\r\nimport getBlockLabel from '../../../../utils/getBlockLabel';\r\nimport {Button} from 'react-bootstrap';\r\nimport EventsContext, {ERROR_EVENT} from '../../../../contexts/EventsContext';\r\nimport useReactTooltip from '../../../../hooks/useReactTooltip';\r\n\r\nexport default function ShortcutButton({editor, node, shortcut}) {\r\n    let {block} = shortcut;\r\n    let {category} = block;\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    let onClick = async event => {\r\n        try {\r\n            let component = editor.components.get(block.name);\r\n            if(!component) {\r\n                events.emit(ERROR_EVENT, `Component not found: ${block.name}`);\r\n                return;\r\n            }\r\n            let data = {};\r\n            if(node && shortcut.nodeKey) {\r\n                data[shortcut.nodeKey] = node.id;\r\n            }\r\n            let newNode = await component.createNode(data);\r\n            let {x, y} = editor.view.area.mouse;\r\n            [newNode.position[0], newNode.position[1]] = [x - 80, y - 20];\r\n            editor.addNode(newNode);\r\n\r\n            // Start dragging node\r\n            let nodeView = editor.view.nodes.get(newNode);\r\n            nodeView._drag.down(event);\r\n        }\r\n        catch(err) {\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    };\r\n\r\n    useReactTooltip([block]);\r\n\r\n    return (\r\n        <Button\r\n            ref={bindNodeInput}\r\n            className=\"node-shortcut-button px-1 pt-0 pb-1\"\r\n            data-tip={getBlockLabel(block)}\r\n            data-delay-show={100}\r\n            style={{\r\n                background: 'none',\r\n                color: category.data.color,\r\n                borderColor: category.data.color,\r\n                cursor: 'grab',\r\n                // fontSize: '1em',\r\n            }}\r\n            onMouseDown={onClick}>\r\n            {block.icon\r\n                ? React.createElement(block.icon)\r\n                : getBlockLabel(block)}\r\n        </Button>\r\n    );\r\n}","import React from 'react';\r\nimport {Control, Node} from 'rete-react-render-plugin';\r\nimport {SocketHandle} from '../sockets/SocketHandle';\r\nimport {getBlock} from '../../../editor/blocks';\r\nimport classNames from 'classnames';\r\nimport {paramCase} from 'change-case';\r\nimport DynamicTitle from './parts/DynamicTitle';\r\nimport getNodeLabel from '../../../utils/getNodeLabel';\r\nimport getPropLabel from '../../../utils/getPropLabel';\r\nimport {ButtonGroup} from 'react-bootstrap';\r\nimport ShortcutButton from './parts/ShortcutButton';\r\n\r\nfunction PropHandle({prop, node, hideLeft, hideRight, bindSocket, bindControl}) {\r\n    let input = node.inputs.get(prop.key);\r\n    let output = node.outputs.get(prop.key);\r\n    let control = node.controls.get(prop.key) || (input?.showControl() && input.control);\r\n\r\n    let leftSocket = input && !hideLeft && (\r\n        <SocketHandle\r\n            type=\"input\"\r\n            socket={input.socket}\r\n            io={input}\r\n            innerRef={bindSocket}\r\n        />\r\n    );\r\n    let rightSocket = output && !hideRight && (\r\n        <SocketHandle\r\n            type=\"output\"\r\n            socket={output.socket}\r\n            io={output}\r\n            innerRef={bindSocket}\r\n        />\r\n    );\r\n    let controlField = control && (\r\n        <Control\r\n            className={input ? 'input-control' : 'control'}\r\n            control={control}\r\n            innerRef={bindControl}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className={classNames('prop', 'key-' + paramCase(prop.key))}>\r\n            <div className=\"input\">\r\n                {leftSocket}\r\n                {controlField || (leftSocket && (\r\n                    <div className=\"input-title\">{getPropLabel(prop)}</div>\r\n                ))}\r\n            </div>\r\n            <div className=\"output\">\r\n                {!input && (rightSocket && (\r\n                    <div className=\"output-title\">{getPropLabel(prop)}</div>\r\n                ))}\r\n                {rightSocket}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class NodeHandle extends Node {\r\n    render() {\r\n        const {editor, node, bindSocket, bindControl} = this.props;\r\n        const {selected} = this.state;\r\n\r\n        let block = getBlock(node.name);\r\n\r\n        // Properties for the top left/right corners\r\n        let topLeft = block.topLeft && node.inputs.get(block.topLeft);\r\n        let topRight = block.topRight && node.outputs.get(block.topRight);\r\n\r\n        let title = getNodeLabel(node, editor, true);\r\n        if(block.computeTitle) {\r\n            title = <DynamicTitle editor={editor} node={node} block={block} fallback={title}/>;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('node', selected, block.className)}>\r\n                <div className=\"header d-flex\">\r\n                    {topLeft && (\r\n                        <div>\r\n                            <SocketHandle\r\n                                type=\"input\"\r\n                                socket={topLeft.socket}\r\n                                io={topLeft}\r\n                                innerRef={bindSocket}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <div\r\n                        className=\"title d-inline-block flex-grow-1 text-nowrap overflow-hidden\"\r\n                        style={{color: block.category.data.color}}>\r\n                        {block.icon && (\r\n                            // TODO: globally improve react-icons render logic\r\n                            <span className=\"d-inline-block pe-1\" style={{transform: 'translateY(-.1em)'}}>\r\n                                {React.createElement(block.icon)}\r\n                            </span>\r\n                        )}\r\n                        {title}\r\n                    </div>\r\n                    {topRight && (\r\n                        <div>\r\n                            <SocketHandle\r\n                                type=\"output\"\r\n                                socket={topRight.socket}\r\n                                io={topRight}\r\n                                innerRef={bindSocket}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {block.shortcuts.length > 0 && (\r\n                    <ButtonGroup className=\"px-4 py-1 w-100\" style={{background: '#0002'}}>\r\n                        {block.shortcuts.map((shortcut, i) => (\r\n                            <ShortcutButton key={i} editor={editor} node={node} shortcut={shortcut}/>\r\n                        ))}\r\n                    </ButtonGroup>\r\n                )}\r\n                {Object.values(block.props)\r\n                    .filter(prop => !prop.hidden && (prop.control || ((!topLeft || prop.key !== block.topLeft) && (!topRight || prop.key !== block.topRight))))\r\n                    .map(prop => (\r\n                        <PropHandle\r\n                            key={prop.key}\r\n                            prop={prop}\r\n                            node={node}\r\n                            hideLeft={prop.key === block.topLeft}\r\n                            hideRight={prop.key === block.topRight}\r\n                            bindSocket={bindSocket}\r\n                            bindControl={bindControl}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as Rete from 'rete';\r\nimport TextControlHandle from '../../components/rete/controls/TextControlHandle';\r\nimport EventEmitter from 'events';\r\nimport {bindNodeInput} from '../../utils/bindNodeInput';\r\n\r\nexport default class BaseControl extends Rete.Control {\r\n    constructor(editor, key, name, config = {}) {\r\n        super(key);\r\n\r\n        this.name = name;\r\n        this.config = config;\r\n        this.editor = editor;\r\n        this.render = 'react';\r\n        this.component = config.controlType || TextControlHandle;\r\n        this.props = {\r\n            ...config.controlProps,\r\n            validation: config.validation || {},\r\n            control: this,\r\n            editor,\r\n            bindInput: bindNodeInput,\r\n        };\r\n\r\n        this.events = new EventEmitter();\r\n    }\r\n\r\n    validate(value) {\r\n        if(value === undefined && !this.config.optional) {\r\n            return false;\r\n        }\r\n        if(value !== null && value !== undefined) {\r\n            let validation = this.config.validation;\r\n            if(validation) {\r\n                if('custom' in validation && !validation.custom(value)) {\r\n                    return false;\r\n                }\r\n                if('minLength' in validation && value.length < validation.minLength) {\r\n                    return false;\r\n                }\r\n                if('maxLength' in validation && value.length > validation.maxLength) {\r\n                    return false;\r\n                }\r\n                if('min' in validation && value < validation.min) {\r\n                    return false;\r\n                }\r\n                if('max' in validation && value > validation.max) {\r\n                    return false;\r\n                }\r\n                if('step' in validation && value - (validation.min || 0) % validation.step !== 0) {\r\n                    return false;\r\n                }\r\n                if('pattern' in validation && !validation.pattern.test(value)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getDefaultValue() {\r\n        // return this.config.defaultValue;\r\n    }\r\n\r\n    getValue() {\r\n        let value = this.getData(this.key);\r\n        return value === undefined ? this.getDefaultValue() : value;\r\n    }\r\n\r\n    setValue(value) {\r\n        this.putData(this.key, value);\r\n        this.events.emit('update', value);\r\n    }\r\n}\r\n","import BaseControl from './BaseControl';\r\n\r\nexport default class PropControl extends BaseControl {\r\n    constructor(editor, prop, name) {\r\n        super(editor, prop.key, name, {\r\n            ...prop.type?.data || {},\r\n            ...prop.config || {},\r\n            prop,\r\n            type: prop.type,\r\n            optional: prop.optional,\r\n        });\r\n    }\r\n\r\n    getDefaultValue() {\r\n        // let value = super.getDefaultValue();\r\n        // return value !== undefined ? value : this.config.type?.getDefaultValue();\r\n\r\n        return this.config.type?.getDefaultValue();\r\n    }\r\n\r\n    // Called every EDITOR_CHANGE_EVENT when control is visible\r\n    notifyEditorChange() {\r\n        // this.config.prop.onUpdateControl?.(this, this.getNode(), this.editor);\r\n    }\r\n}","import Rete from 'rete';\r\n\r\nexport default class BaseComponent extends Rete.Component {\r\n\r\n    getEditorNode(node) {\r\n        return this.editor.nodes.find(n => n.id === node.id);\r\n    }\r\n\r\n    getControls(node) {\r\n        return this.getEditorNode(node).controls;\r\n    }\r\n}","import Rete from 'rete';\r\nimport {getType} from '../../block-types/types';\r\n\r\nexport default class TypeSocket extends Rete.Socket {\r\n    constructor(type) {\r\n        type = getType(type);\r\n        super(type.name, {...type.data, type});\r\n    }\r\n\r\n    findType() {\r\n        return this.data.type;\r\n    }\r\n\r\n    // setType(type) {\r\n    //     this.data.type = type;\r\n    // }\r\n\r\n    compatibleWith(other) {\r\n        if(!('findType' in other)) {\r\n            return false;\r\n        }\r\n        let type = this.findType();\r\n        let otherType = other.findType();\r\n\r\n        return type.isSubtype(otherType) || otherType.isSubtype(type);\r\n    }\r\n}","import TypeSocket from './TypeSocket';\r\nimport {typeType} from '../../block-types/types';\r\n\r\nexport default class PropOutputSocket extends TypeSocket {\r\n    constructor(nodeId, nodeName, prop, typeCompiler) {\r\n        super(prop.type);\r\n\r\n        this.nodeId = nodeId;\r\n        this.nodeName = nodeName;\r\n        this.prop = prop;\r\n        this.typeCompiler = typeCompiler;\r\n\r\n        this._isTypeOfType = typeType.isSubtype(this.prop.type);\r\n    }\r\n\r\n    findType() {\r\n        if(this.typeCompiler.editor.silent) {\r\n            return super.findType();\r\n        }\r\n\r\n        try {\r\n            let type = this.typeCompiler.getOutput(this.nodeId, this.prop.key);\r\n            if(type) {\r\n                if(this._isTypeOfType) {\r\n                    if(typeType.isSubtype(type)) {\r\n                        console.warn('Type of Type of Type (Intentional?)');\r\n                    }\r\n                    type = typeType.of(type);\r\n                }\r\n                return type || super.findType();\r\n            }\r\n        }\r\n        catch(err) {\r\n            console.warn(`Error on socket [${this.nodeName}.${this.prop.key}]:`, err);///\r\n        }\r\n        return super.findType();\r\n    }\r\n\r\n    // compatibleWith(other) {\r\n    //     if(!('findType' in other)) {\r\n    //         return;\r\n    //     }\r\n    //     let reversed = !!this.data.reversed;\r\n    //     if(reversed === !other.data.reversed) {\r\n    //         return false;\r\n    //     }\r\n    //     let self = this;\r\n    //     if(!reversed) {\r\n    //         [self, other] = [other, self];\r\n    //     }\r\n    //     let selfType = self.findType();\r\n    //     let otherType = other.findType();\r\n    //\r\n    //     console.log(selfType, otherType);\r\n    //\r\n    //     return selfType && selfType.isSubtype(otherType);\r\n    // }\r\n}","import Rete from 'rete';\r\nimport PropControl from '../controls/PropControl';\r\nimport BaseComponent from './BaseComponent';\r\nimport TypeSocket from '../sockets/TypeSocket';\r\nimport PropOutputSocket from '../sockets/PropOutputSocket';\r\nimport {sentenceCase} from 'change-case';\r\nimport getPropLabel from '../../utils/getPropLabel';\r\n\r\nexport default class BlockComponent extends BaseComponent {\r\n\r\n    constructor(block) {\r\n        super(block.name);\r\n\r\n        this.block = block;\r\n        this.keywords = [\r\n            ...sentenceCase(block.name).toLowerCase().split(' ').filter(s => s),\r\n            ...block.title?.split(' ').filter(s => s) || [],\r\n            ...block.keywords || [],\r\n        ];\r\n    }\r\n\r\n    async builder(node) {\r\n\r\n        const addProp = (prop, isPropOutput) => {\r\n            let socket = isPropOutput ? new PropOutputSocket(node.id, node.name, prop, this.editor.compilers.type) : new TypeSocket(prop.type);\r\n            if(!!prop.type.data.reversed === isPropOutput) {\r\n                return addPropInput(prop, socket, isPropOutput);\r\n            }\r\n            else {\r\n                return addPropOutput(prop, socket, isPropOutput);\r\n            }\r\n        };\r\n\r\n        const addPropInput = (prop, socket, isOutput) => {\r\n            let title = getPropLabel(prop);\r\n            let input = new Rete.Input(prop.key, title, socket, prop.type.data.reversed || !!prop.multi);\r\n            if(shouldPropHaveControl(prop, socket, isOutput)) {\r\n                input.addControl(new PropControl(this.editor, prop, title));\r\n            }\r\n            node.addInput(input);\r\n            return input;\r\n        };\r\n\r\n        const addPropOutput = (prop, socket, isOutput) => {\r\n            let title = getPropLabel(prop);\r\n            let output = new Rete.Output(prop.key, title, socket, !prop.type.data.reversed || !!prop.multi);\r\n            node.addOutput(output);\r\n            if(shouldPropHaveControl(prop, socket, isOutput)) {\r\n                node.addControl(new PropControl(this.editor, prop, title));\r\n            }\r\n            return output;\r\n        };\r\n\r\n        const shouldPropHaveControl = (prop, socket, isOutput) => {\r\n            return prop.control || (!!socket.data.reversed === isOutput && socket.data.controlType && !prop.multi);\r\n        };\r\n\r\n        delete node.meta.title;\r\n        // if(this.block.title) {\r\n        //     node.meta.title = this.block.title;\r\n        // }\r\n        // else {\r\n        //     delete node.meta.title;\r\n        // }\r\n\r\n        for(let prop of this.block.inputs) {\r\n            addProp(prop, false);\r\n        }\r\n        for(let prop of this.block.outputs) {\r\n            addProp(prop, true);\r\n        }\r\n\r\n        for(let prop of this.block.controls) {\r\n            let title = getPropLabel(prop);\r\n            node.addControl(new PropControl(this.editor, prop, title));\r\n        }\r\n\r\n        // this.block.builder?.apply(this, arguments);\r\n    }\r\n\r\n    // async worker(node, inputs, outputs, ...args) {\r\n    //     await this.block.worker?.apply(this, arguments);\r\n    // }\r\n}","import Compiler from './Compiler';\r\n\r\nexport default class NodeCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'toEditorNode');\r\n    }\r\n\r\n    defaultCompile(prop, node, key) {\r\n        return node;\r\n    }\r\n\r\n    postCompile(result, node, key) {\r\n        if(!result) {\r\n            return;\r\n        }\r\n        let id;\r\n        if(typeof result === 'object') {\r\n            id = result.id;\r\n            if(!id) {\r\n                throw new Error(`Invalid node object with keys: {${Object.keys(result).join(', ')}}`);\r\n            }\r\n        }\r\n        else {\r\n            id = result;\r\n        }\r\n        // Convert node id to string in case of number/string mismatch\r\n        id = String(id);\r\n        return this.editor.nodes.find(n => String(n.id) === id);\r\n    }\r\n}","import Compiler from './Compiler';\r\nimport {getType} from '../block-types/types';\r\n\r\nexport default class TypeCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'inferType');\r\n    }\r\n\r\n    defaultCompile(prop, node, key) {\r\n        return getType(prop.type);\r\n    }\r\n\r\n    postCompile(type, node, key) {\r\n        if(type === undefined) {\r\n            return;\r\n        }\r\n        type = getType(type);\r\n        if(type.isAbstract()) {\r\n            console.warn(`[${node.name}.${key}]`, 'Abstract inferred type:', type.toTypeString());\r\n            return;\r\n        }\r\n        return type;\r\n    }\r\n}","import Rete from 'rete';\r\nimport MotokoCompiler from '../compilers/MotokoCompiler';\r\nimport NodeCompiler from '../compilers/NodeCompiler';\r\nimport TypeCompiler from '../compilers/TypeCompiler';\r\n\r\nexport default class BlocksNodeEditor extends Rete.NodeEditor {\r\n    constructor(...args) {\r\n        super(...args);\r\n\r\n        this.projectName = '';\r\n        this.compilers = {\r\n            type: new TypeCompiler(this),\r\n            node: new NodeCompiler(this),\r\n            motoko: new MotokoCompiler(this),\r\n        };\r\n    }\r\n\r\n    // noinspection JSCheckFunctionSignatures\r\n    toJSON() {\r\n        let json = {\r\n            name: this.projectName,\r\n            description: '',\r\n            version: this.id,\r\n            ...super.toJSON(),\r\n        };\r\n        delete json.id;\r\n        // noinspection JSValidateTypes\r\n        return json;\r\n    }\r\n\r\n    async fromJSON(json) {\r\n        // noinspection JSUnresolvedVariable\r\n        json = {id: json.version, ...json};\r\n\r\n        if(!this.beforeImport(json)) {\r\n            return false;\r\n        }\r\n        // TODO: refactor serialization\r\n        // noinspection JSUnresolvedVariable\r\n        this.projectName = json.name || '';\r\n\r\n        let hadError = false;\r\n        try {\r\n            const nodes = {};\r\n            await Promise.all(Object.entries(json.nodes).map(async ([id, jsonNode]) => {\r\n                try {\r\n                    const component = this.getComponent(jsonNode.name);\r\n                    const node = await component.build(Rete.Node.fromJSON(jsonNode));\r\n                    nodes[id] = node;\r\n                    this.addNode(node);\r\n                }\r\n                catch(e) {\r\n                    hadError = true;\r\n                    return this.trigger('error', e);\r\n                }\r\n            }));\r\n\r\n            Object.entries(json.nodes).forEach(([id, jsonNode]) => {\r\n                const node = nodes[id];\r\n\r\n                Object.entries(jsonNode.outputs).forEach(([key, jsonOutput]) => {\r\n\r\n                    jsonOutput.connections.forEach(jsonConnection => {\r\n                        const nodeId = jsonConnection.node;\r\n                        const data = jsonConnection.data;\r\n                        const targetOutput = node.outputs.get(key);\r\n                        const otherNode = nodes[nodeId];\r\n                        if(!otherNode) {\r\n                            hadError = true;\r\n                            return this.trigger('error', `Tried to connect to unknown node ${node.id}`);\r\n                        }\r\n                        const targetInput = otherNode.inputs.get(jsonConnection.input);\r\n\r\n                        if(!targetOutput || !targetInput) {\r\n                            hadError = true;\r\n                            return this.trigger('error', `IO not found for node ${node.id}`);\r\n                        }\r\n\r\n                        this.connect(targetOutput, targetInput, data);\r\n                    });\r\n                });\r\n\r\n            });\r\n        }\r\n        catch(e) {\r\n            this.trigger('warn', e);\r\n            hadError = true;\r\n        }\r\n        return this.afterImport() && !hadError;\r\n    }\r\n}","import Rete from 'rete';\r\n\r\nfunction sortConnections(io) {\r\n    let key = io instanceof Rete.Input ? 'output' : 'input';\r\n    io.connections.sort((a, b) => a[key].node.position[1] - b[key].node.position[1]);\r\n}\r\n\r\nfunction install(editor, config = {}) {\r\n    editor.on('connectioncreated', connection => {\r\n        sortConnections(connection.input);\r\n        sortConnections(connection.output);\r\n    });\r\n    editor.on('nodedragged', (node) => {\r\n        for(let [ioMap, key] of [[node.inputs, 'output'], [node.outputs, 'input']]) {\r\n            for(let io of ioMap.values()) {\r\n                for(let connection of io.connections) {\r\n                    sortConnections(connection[key]);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nconst VerticalSortPlugin = {\r\n    name: 'vertical-sort',\r\n    install,\r\n};\r\nexport default VerticalSortPlugin;","function install(editor, config = {}) {\r\n\r\n    // let currentIO = null;\r\n    //\r\n    // editor.on('connectionpick', (io) => {\r\n    //     currentIO = io;\r\n    // });\r\n    // editor.on('connectiondrop', (io) => {\r\n    //     currentIO = null;\r\n    // });\r\n\r\n    const onKeyDown = (event) => {\r\n        if(event.code === 'Escape') {\r\n            // TODO: implement drop connection without context menu\r\n\r\n            // if(currentIO) {\r\n            //     editor.trigger('connectiondrop', currentIO);\r\n            // }\r\n            // setTimeout(() => editor.trigger('hidecontextmenu'));\r\n        }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    editor.on('destroy', () => document.removeEventListener('keydown', onKeyDown));\r\n}\r\n\r\nconst ConnectionDropPlugin = {\r\n    name: 'connection-drop',\r\n    install,\r\n};\r\nexport default ConnectionDropPlugin;","function install(editor, config = {}) {\r\n\r\n    let {minDistance = 500, opacityFalloff = 200} = config;\r\n\r\n    // Fade out distant connections\r\n    editor.on(['renderconnection', 'updateconnection', 'zoom'], () => {\r\n        setTimeout(() => {\r\n            for(let pathElement of editor.view.container.querySelectorAll('.connection .main-path')) {\r\n                let bounds = pathElement.getBoundingClientRect();\r\n                let distance = bounds.width;\r\n                pathElement.style.opacity = 1 / (1 + Math.sqrt(Math.max(distance - minDistance, 0) / opacityFalloff));\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nconst ConnectionOpacityPlugin = {\r\n    name: 'connection-opacity',\r\n    install,\r\n};\r\nexport default ConnectionOpacityPlugin;","\r\nfunction install(editor, config = {}) {\r\n\r\n    // TODO: implement properly\r\n\r\n    // if(config.editorButton !== undefined) {\r\n    //     let drag = editor.view.area._drag;\r\n    //     drag.button = config.editorButton;\r\n    // }\r\n}\r\n\r\nconst DragButtonPlugin = {\r\n    name: 'drag-button',\r\n    install,\r\n};\r\nexport default DragButtonPlugin;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport classNames from 'classnames';\r\nimport {IconContext} from 'react-icons';\r\n\r\nlet MenuContainer = styled.div`\r\n    \r\n`;\r\n\r\nexport default function TopMenu({className, children, ...others}) {\r\n    return (\r\n        <MenuContainer className={classNames('bg-light text-secondary d-flex', className)} {...others}>\r\n            <IconContext.Provider value={{style: {verticalAlign: 'bottom', transform: 'translateY(-1px)'}}}>\r\n                {children}\r\n            </IconContext.Provider>\r\n        </MenuContainer>\r\n    );\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport styled from 'styled-components';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\n\r\nlet ItemContainer = styled.div`\r\n\r\n`;\r\n\r\nexport default function MenuItem({variant, tooltip, className, ...others}) {\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <ItemContainer\r\n            className={classNames('noselect h3 px-3 pt-1 pb-2 mb-0 d-inline-block text-center', variant && `text-${variant}`, className)}\r\n            data-tip={tooltip}\r\n            {...others}>\r\n        </ItemContainer>\r\n    );\r\n}","import React from 'react';\r\nimport MenuItem from './MenuItem';\r\nimport styled from 'styled-components';\r\n\r\nlet MenuItemStyled = styled(MenuItem)`\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #0002;\r\n  }\r\n`;\r\n\r\nexport default function MenuButton({children, ...others}) {\r\n    return (\r\n        <MenuItemStyled {...others}>\r\n            {children}\r\n        </MenuItemStyled>\r\n    );\r\n}","import React, {useCallback} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport classNames from 'classnames';\r\n\r\nexport default function FileDropZone({options, onFile, onFileContent, className, children, ...others}) {\r\n\r\n    const onDrop = useCallback(files => {\r\n        if(files.length) {\r\n            const file = files[0];\r\n            onFile?.(file);\r\n            if(onFileContent) {\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    onFileContent(e.target.result);\r\n                };\r\n                reader.readAsText(file);\r\n            }\r\n        }\r\n    }, [onFile, onFileContent]);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\r\n        maxFiles: 1,\r\n        onDrop,\r\n        ...options,\r\n    });\r\n\r\n    return (\r\n        <div className={classNames(className, isDragActive && 'dragging')} {...{...others, ...getRootProps()}}>\r\n            <input {...getInputProps()}/>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React, {useContext} from 'react';\nimport EventsContext, {PROJECT_LOAD_EVENT} from '../../contexts/EventsContext';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport {getExampleProjects} from '../../examples/examples';\nimport FileDropZone from '../common/FileDropZone';\n\nconst MenuContainer = styled.div`\n  padding: 20px;\n`;\n\nconst LoadProjectItemContainer = styled.div`\n  :hover {\n    background: #0001;\n  }\n`;\n\nconst FileDropZoneStyled = styled(FileDropZone)`\n  padding: 2em;\n  border: 2px #0005 dashed;\n\n  &.dragging, &:hover {\n    background: #0002;\n  }\n`;\n\nexport default function LoadProjectMenu({onLoadFileContent, className, ...others}) {\n\n    const events = useContext(EventsContext);\n\n    const examples = getExampleProjects();\n\n    return (\n        <MenuContainer className={classNames('bg-light', className)} {...others}>\n            <FileDropZone onFileContent={onLoadFileContent}>\n                <FileDropZoneStyled className={classNames('clickable text-center text-muted rounded-3')}>\n                    <h5>Import a .blocks file...</h5>\n                </FileDropZoneStyled>\n            </FileDropZone>\n            {examples.map((example, i) => (\n                <LoadProjectItemContainer\n                    key={i}\n                    className=\"clickable mt-2 px-3 py-2\"\n                    onClick={() => events.emit(PROJECT_LOAD_EVENT, example)}>\n                    <h4>{example.name}</h4>\n                    <div className=\"text-muted\">{example.description || '(No description provided)'}</div>\n                </LoadProjectItemContainer>\n            ))}\n        </MenuContainer>\n    );\n}","import TopMenu from '../common/menus/TopMenu';\nimport MenuButton from '../common/menus/MenuButton';\nimport {FaDownload, FaFile, FaFolder, FaFolderOpen, FaSave} from 'react-icons/fa';\nimport React, {useContext, useState} from 'react';\nimport MenuItem from '../common/menus/MenuItem';\nimport styled, {keyframes} from 'styled-components';\nimport classNames from 'classnames';\nimport EventsContext, {\n    EDITOR_CHANGE_EVENT,\n    EDITOR_SAVE_EVENT,\n    PROJECT_CLEAR_EVENT,\n    PROJECT_EXPORT_EVENT,\n    PROJECT_LOAD_EVENT,\n} from '../../contexts/EventsContext';\nimport useListener from '../../hooks/useListener';\nimport LoadProjectMenu from './LoadProjectMenu';\nimport {Modal} from 'react-bootstrap';\n\nconst ProjectNameInput = styled.input`\n  background: none !important;\n  border: none !important;\n  border-bottom: solid 2px #0005 !important;\n  font-weight: bold;\n  vertical-align: top;\n  margin-top: .4em;\n  padding: .25em .25em .1em;\n\n  :focus {\n    background: #0001 !important;\n  }\n`;\n\nconst saveAnimation = keyframes`\n  30% {\n    transform: scale(.9);\n  }\n`;\n\nconst SaveIcon = styled(FaSave)`\n  &.animated {\n    animation: ${saveAnimation} .5s ease-out;\n  }\n`;\n\nexport default function EditorMenu({getEditor, onLoadFileContent}) {\n    const [name, setName] = useState('');\n    const [saveAnimated, setSaveAnimated] = useState(false); // TODO: possibly generalize to MenuButton\n    const [loadMenuOpen, setLoadMenuOpen] = useState(false);\n\n    const events = useContext(EventsContext);\n\n    useListener(events, EDITOR_SAVE_EVENT, () => {\n        setSaveAnimated(true);\n    });\n\n    useListener(events, PROJECT_LOAD_EVENT, project => {\n        setName(project.name);\n        setLoadMenuOpen(false);\n    });\n\n    /// Temp, until projectName refactor\n    setTimeout(() => {\n        setName(getEditor().projectName);\n    });\n\n    // TODO refactor\n    const updateName = (name) => {\n        setName(name);\n        let editor = getEditor();\n        editor.projectName = name;\n        events.emit(EDITOR_CHANGE_EVENT, editor);\n    };\n\n    return (\n        <>\n            <TopMenu>\n                {/*<Link to=\"/\">*/}\n                <MenuItem variant=\"dark\">\n                    BLOCKS.\n                </MenuItem>\n                {/*</Link>*/}\n                <div className=\"d-inline-block mx-auto\">\n                    <MenuButton onMouseDown={() => events.emit(PROJECT_CLEAR_EVENT)} data-tip=\"New Project\">\n                        <FaFile/>\n                    </MenuButton>\n                    <ProjectNameInput\n                        type=\"text\"\n                        placeholder=\"(Unnamed Project)\"\n                        className=\"text-secondary\"\n                        value={name || ''}\n                        onChange={e => updateName(e.target.value)}\n                        onKeyDown={e => e.key === 'Enter' && events.emit(EDITOR_SAVE_EVENT, getEditor())}\n                    />\n                    <MenuButton\n                        tooltip=\"Save Changes\"\n                        onMouseDown={() => events.emit(EDITOR_SAVE_EVENT, getEditor())}>\n                        <SaveIcon\n                            className={classNames(saveAnimated && 'animated')}\n                            onAnimationEnd={() => setSaveAnimated(false)}\n                        />\n                    </MenuButton>\n                    <MenuButton\n                        tooltip=\"Export to File\"\n                        onMouseDown={() => events.emit(PROJECT_EXPORT_EVENT, getEditor().toJSON())}>\n                        <FaDownload/>\n                    </MenuButton>\n                    <MenuButton\n                        tooltip=\"Load Project\"\n                        onMouseDown={() => setLoadMenuOpen(!loadMenuOpen)}>\n                        {loadMenuOpen ? <FaFolderOpen/> : <FaFolder/>}\n                    </MenuButton>\n                </div>\n            </TopMenu>\n            <Modal\n                // className=''\n                show={loadMenuOpen}\n                onHide={() => setLoadMenuOpen(false)}>\n                <Modal.Body>\n                    <LoadProjectMenu onLoadFileContent={onLoadFileContent}/>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}","import React, {useContext} from 'react';\r\nimport './Editor.scss';\r\nimport AreaPlugin from 'rete-area-plugin';\r\nimport ConnectionPlugin from 'rete-connection-plugin';\r\nimport ContextMenuPlugin from '../../plugins/rete-blocks-contextmenu-plugin';\r\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin';\r\nimport ReactRenderPlugin from 'rete-react-render-plugin';\r\nimport EventsContext, {\r\n    EDITOR_CHANGE_EVENT,\r\n    EDITOR_SAVE_EVENT,\r\n    ERROR_EVENT,\r\n    PROJECT_LOAD_EVENT,\r\n} from '../../contexts/EventsContext';\r\nimport NodeHandle from './nodes/NodeHandle';\r\nimport BlockComponent from '../../editor/components/BlockComponent';\r\nimport {BLOCK_MAP} from '../../editor/blocks';\r\nimport useListener from '../../hooks/useListener';\r\nimport BlocksNodeEditor from '../../editor/BlocksNodeEditor';\r\nimport VerticalSortPlugin from '../../plugins/rete-vertical-sort-plugin';\r\nimport ConnectionDropPlugin from '../../plugins/rete-connection-drop-plugin';\r\nimport ConnectionOpacityPlugin from '../../plugins/rete-connection-opacity-plugin';\r\nimport DragButtonPlugin from '../../plugins/rete-drag-button-plugin';\r\nimport classNames from 'classnames';\r\nimport styled from 'styled-components';\r\nimport EditorMenu from './EditorMenu';\r\nimport FileDropZone from '../common/FileDropZone';\r\n\r\nconst EDITOR_NAME = process.env.REACT_APP_EDITOR_NAME;\r\nconst EDITOR_VERSION = process.env.REACT_APP_EDITOR_VERSION;\r\n\r\nfunction findCategory(socket) {\r\n    return socket.findType?.().data.category ?? socket.data.category ?? 'none';\r\n}\r\n\r\n// noinspection JSCheckFunctionSignatures\r\nfunction createEditor(element) {\r\n\r\n    let editor = new BlocksNodeEditor(EDITOR_NAME + '@' + EDITOR_VERSION, element);\r\n    editor.use(ReactRenderPlugin, {\r\n        component: NodeHandle,\r\n    });\r\n    // editor.use(HistoryPlugin); // TODO: set up undo/redo history\r\n    editor.use(ConnectionPlugin);\r\n    // editor.use(CommentPlugin);\r\n    // editor.use(SelectionPlugin, {\r\n    //     enabled: true,\r\n    // });\r\n    // noinspection JSCheckFunctionSignatures\r\n    editor.use(AutoArrangePlugin);\r\n    // noinspection JSCheckFunctionSignatures\r\n    editor.use(AreaPlugin, {\r\n        background: (() => {\r\n            let background = document.createElement('div');\r\n            background.classList.add('grid');\r\n            background.style.pointerEvents = 'none';\r\n            editor.on('destroy', () => background.remove());\r\n            return background;\r\n        })(),\r\n        snap: {size: 16, dynamic: true},\r\n    });\r\n    editor.use(ContextMenuPlugin);\r\n    editor.use(ConnectionDropPlugin);\r\n    editor.use(ConnectionOpacityPlugin);\r\n    editor.use(VerticalSortPlugin);\r\n    editor.use(DragButtonPlugin, {editorButton: 2});\r\n\r\n    let mouseMoved = false;\r\n    editor.view.container.addEventListener('mousedown', (e) => {\r\n        mouseMoved = false;\r\n    });\r\n    editor.on('mousemove', (e) => {\r\n        mouseMoved = true;\r\n    });\r\n    editor.on('click', ({e}) => {\r\n        // Deselect nodes when clicking background\r\n        if(!mouseMoved) {\r\n            editor.selected.clear();\r\n            editor.nodes.forEach(node => node.update());\r\n        }\r\n    });\r\n\r\n    editor.on('zoom', ({source}) => source !== 'dblclick'); // Prevent double-click zoom\r\n    editor.on('nodeselect', node => !editor.selected.contains(node)); // Allow dragging multiple nodes\r\n    editor.on('renderconnection', ({el, connection}) => {\r\n        let inputCategory = findCategory(connection.input.socket);\r\n        let outputCategory = findCategory(connection.output.socket);\r\n        if(connection.input.socket.data.reversed) {\r\n            [inputCategory, outputCategory] = [outputCategory, inputCategory];\r\n        }\r\n        el.querySelector('.connection').classList.add(\r\n            `socket-input-category-${inputCategory}`,\r\n            `socket-output-category-${outputCategory}`,\r\n        );\r\n    });\r\n\r\n    return editor;\r\n}\r\n\r\n\r\nconst EditorContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nexport default function Editor({hideMenu, onSetup, onChange, onSave, className, ...others}) {\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    let editor = null;\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, (_editor) => {\r\n        if(_editor === editor) {\r\n            onChange?.(editor);\r\n        }\r\n    });\r\n    useListener(events, EDITOR_SAVE_EVENT, (_editor) => {\r\n        if(_editor === editor) {\r\n            onSave?.(editor.toJSON(), editor);\r\n        }\r\n    });\r\n\r\n    const bindEditor = (element) => {\r\n        if(editor) {\r\n            editor.silent = true;\r\n            editor.clear();\r\n            editor.components.clear();\r\n            editor.destroy();\r\n        }\r\n        if(!element) {\r\n            return;\r\n        }\r\n\r\n        editor = createEditor(element);\r\n\r\n        window.EDITOR = editor; // Browser debugging\r\n\r\n        let onKeyDown = (event) => {\r\n            let key = String.fromCharCode(event.which).toLowerCase();\r\n\r\n            // if(key === 'f') {\r\n            //     editor.trigger('arrange');\r\n            // }\r\n            if(event.ctrlKey) {\r\n                if(key === 's') {\r\n                    event.preventDefault();\r\n                    events.emit(EDITOR_SAVE_EVENT, editor);\r\n                    console.log('Saved successfully');\r\n                }\r\n            }\r\n        };\r\n        document.addEventListener('keydown', onKeyDown);\r\n        editor.on('destroy', () => document.removeEventListener('keydown', onKeyDown));\r\n\r\n        for(let block of BLOCK_MAP.values()) {\r\n            let node = new BlockComponent(block);\r\n            editor.register(node);\r\n        }\r\n\r\n        let timeout;\r\n        editor.on(['nodecreated', 'noderemoved', 'nodedragged', 'connectioncreated', 'connectionremoved'], async () => {\r\n            if(!editor.silent) {\r\n                // Debounce change events\r\n                clearTimeout(timeout);\r\n                timeout = setTimeout(() => {\r\n                    events.emit(EDITOR_CHANGE_EVENT, editor);\r\n                });\r\n            }\r\n        });\r\n        editor.on('error', err => events.emit(ERROR_EVENT, err));\r\n\r\n        async function loadState(state) {\r\n            if(!state) {\r\n                return false;\r\n            }\r\n            let result = await editor.fromJSON(state);\r\n            if(result) {\r\n                editor.view.resize();\r\n                AreaPlugin.zoomAt(editor);\r\n                events.emit(EDITOR_CHANGE_EVENT, editor);\r\n                editor.nodes.forEach(node => node.update()); // Redraw nodes\r\n            }\r\n            return result;\r\n        }\r\n\r\n        (async () => {\r\n            await onSetup?.(loadState, editor);\r\n        })().catch(err => events.emit(ERROR_EVENT, err));\r\n    };\r\n\r\n    const loadFileContent = content => {\r\n        try {\r\n            let project = JSON.parse(content);\r\n            events.emit(PROJECT_LOAD_EVENT, project);\r\n        }\r\n        catch(err) {\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FileDropZone options={{noClick: true}} onFileContent={loadFileContent}>\r\n            <EditorContainer\r\n                className={classNames('node-editor d-flex flex-grow-1 flex-column', className)}\r\n                {...others}>\r\n                {!hideMenu && (\r\n                    <EditorMenu getEditor={() => editor} onLoadFileContent={loadFileContent}/>\r\n                )}\r\n                <div ref={bindEditor}/>\r\n            </EditorContainer>\r\n        </FileDropZone>\r\n    );\r\n}","import Editor from '../../rete/Editor';\r\nimport React, {useContext} from 'react';\r\nimport useListener from '../../../hooks/useListener';\r\nimport EventsContext, {\r\n    PROJECT_CLEAR_EVENT,\r\n    PROJECT_EXPORT_EVENT,\r\n    PROJECT_LOAD_EVENT,\r\n} from '../../../contexts/EventsContext';\r\nimport FileSaver from 'file-saver';\r\nimport {pascalCase} from 'change-case';\r\nimport useRedraw from '../../../hooks/useRedraw';\r\nimport isEmbedded from '../../../utils/isEmbedded';\r\nimport {useParams} from 'react-router-dom';\r\n// import {BlocksEditor} from 'react-blocks-editor';\r\n\r\nconst STORAGE_EDITOR_STATE = 'blocks.editorState';\r\n\r\nconst DEFAULT_STATE = require('../../../examples/files/DefaultProject.json');\r\n\r\nconst embedded = isEmbedded();\r\nconst storage = embedded ? {} : localStorage; // Use temporary storage for iframe\r\n\r\nif(embedded) {\r\n    console.log('Using embedded mode.');\r\n}\r\n\r\nlet nextEditorState;\r\n\r\nexport default function EditorPage() {\r\n    const redraw = useRedraw();\r\n\r\n    const {menu: menuParam} = useParams();\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, PROJECT_CLEAR_EVENT, () => {\r\n        // TODO: confirmation modal\r\n        // delete storage[STORAGE_EDITOR_STATE];\r\n        nextEditorState = DEFAULT_STATE;\r\n        redraw();\r\n    });\r\n\r\n    useListener(events, PROJECT_LOAD_EVENT, state => {\r\n        // storage[STORAGE_EDITOR_STATE] = JSON.stringify(state);\r\n        nextEditorState = state;///\r\n        redraw();\r\n    });\r\n\r\n    useListener(events, PROJECT_EXPORT_EVENT, state => {\r\n        let data = JSON.stringify(state);\r\n        FileSaver.saveAs(new Blob([data]), `${pascalCase(state.name || 'project')}.blocks.json`);\r\n    });\r\n\r\n    const onEditorSetup = async (loadState, editor) => {\r\n        let stateString = nextEditorState ? JSON.stringify(nextEditorState) : storage[STORAGE_EDITOR_STATE];\r\n        nextEditorState = null;\r\n\r\n        let state;\r\n        if(stateString) {\r\n            state = JSON.parse(stateString);\r\n        }\r\n        else {\r\n            state = DEFAULT_STATE;\r\n        }\r\n\r\n        if(!await loadState(state)) {\r\n            console.warn('Load error');\r\n        }\r\n    };\r\n\r\n    const onEditorChange = (editor) => {\r\n    };\r\n\r\n    const onEditorSave = (state, editor) => {\r\n        let stateString = JSON.stringify(state);\r\n        storage[STORAGE_EDITOR_STATE] = stateString;\r\n        if(embedded) {\r\n            let message = {\r\n                type: 'save',\r\n                state: stateString,\r\n            };\r\n            console.log('Sending message:', message);\r\n            let targetOrigin = '*'; // TODO: restrict\r\n            window.parent.postMessage(message, targetOrigin);\r\n        }\r\n    };\r\n\r\n    // Remote (iframe) message listener\r\n    useListener(window, 'message', ({source, data}) => {\r\n        if(typeof data === 'string') {\r\n            console.log('Received message:', data);\r\n            data = JSON.parse(data);\r\n            if(data?.type === 'load') {\r\n                nextEditorState = data.state ? JSON.parse(JSON.stringify(data.state)) : DEFAULT_STATE;\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Editor\r\n            hideMenu={menuParam === 'hidden'}\r\n            onSetup={onEditorSetup}\r\n            onChange={onEditorChange}\r\n            onSave={onEditorSave}\r\n        />\r\n        // <BlocksEditor style={{width: '100%', height: '100%'}} options={{menu: 'default'}}>\r\n        //     {({loadState}) => {\r\n        //         let state = require('../../../examples/files/Calculator.blocks.json');\r\n        //         state.name = 'TEST';\r\n        //         loadState(state);\r\n        //     }}\r\n        // </BlocksEditor>\r\n    );\r\n}","// Derived from: https://stackoverflow.com/questions/326069/how-to-identify-if-a-webpage-is-being-loaded-inside-an-iframe-or-directly-into-t\r\n\r\nexport default function isEmbedded() {\r\n    try {\r\n        return window.self !== window.top;\r\n    }\r\n    catch(e) {\r\n        return true;\r\n    }\r\n};","import {useState} from 'react';\r\n\r\nexport default function useRedraw() {\r\n\r\n    let redraw = useState({})[1];\r\n\r\n    return () => redraw({});\r\n}\r\n","import styled from 'styled-components';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport React from 'react';\r\n\r\nconst ReactTooltipStyled = styled(ReactTooltip)`\r\n  padding: .5em 1em !important;\r\n`;\r\n\r\nexport default function GlobalTooltip() {\r\n    return (\r\n        <ReactTooltipStyled backgroundColor=\"#111\" place=\"bottom\" delayShow={300}/>\r\n    );\r\n};","export default function reportWebVitals(onPerfEntry) {\n    if(onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n}\n","import React, {useContext} from 'react';\r\nimport EditorPage from './pages/editor/EditorPage';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport EventsContext, {ERROR_EVENT} from '../contexts/EventsContext';\r\nimport useListener from '../hooks/useListener';\r\nimport GlobalTooltip from './GlobalTooltip';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\n\r\nexport default function App() {\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    useListener(events, ERROR_EVENT, err => {\r\n        toast(err, {\r\n            type: 'error',\r\n            // closeOnClick: true,\r\n        });\r\n    });\r\n\r\n    return (\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <GlobalTooltip/>\r\n                <ToastContainer/>\r\n                <EditorPage/>\r\n                {/*<Switch>*/}\r\n                {/*    <Route path=\"/editor\">*/}\r\n                {/*        <EditorPage/>*/}\r\n                {/*    </Route>*/}\r\n                {/*    <Route path=\"/\">*/}\r\n                {/*        <HomePage/>*/}\r\n                {/*    </Route>*/}\r\n                {/*</Switch>*/}\r\n            </BrowserRouter>\r\n        </React.StrictMode>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\nreportWebVitals((...args) => {\n    // console.log('WebVitals:', ...args);\n});\n"],"sourceRoot":""}