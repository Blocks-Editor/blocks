{"version":3,"sources":["components/rete/controls/NumberControlHandle.js","components/common/inputs/TypeSelect.js","block-types/types.js","components/rete/controls/TypeControlHandle.js","components/rete/controls/NodeControlHandle.js","components/rete/controls/CheckboxControlHandle.js","block-categories/categories.js","contexts/EventsContext.js","compilers/MotokoCompiler.js","block-patterns/operator-patterns.js","block-patterns/statement-patterns.js","hooks/useListener.js","hooks/useControlState.js","blocks/State.js","hooks/useReactTooltip.js","editor/blocks.js","blocks/NewArray.js","components/rete/controls/SelectControlHandle.js","block-patterns/member-patterns.js","block-patterns/control-patterns.js","block-patterns/literal-patterns.js","compilers/Compiler.js","utils/bindNodeInput.js","utils/getBlockLabel.js","components/rete/controls/TextControlHandle.js","utils/getDefaultLabel.js","utils/getNodeLabel.js","block-patterns/code-patterns.js","config/configureMonaco.js","components/monaco/CodeEditor.js","components/rete/controls/CodeControlHandle.js","components/common/Loading.js","components/rete/controls/OutputControlHandle.js","block-patterns/compile-patterns.js","editor sync","blocks/Function.js","examples/examples.js","blocks sync /.js$","blocks/Actor.js","blocks/ActorClass.js","blocks/Add.js","blocks/And.js","blocks/ArrayAppend.js","blocks/ArrayAppended.js","blocks/ArrayFilter.js","blocks/ArrayGet.js","blocks/ArrayMap.js","blocks/ArrayPrepend.js","blocks/ArrayPut.js","blocks/Await.js","blocks/CodeType.js","blocks/CodeValue.js","blocks/CollectionGet.js","blocks/CollectionPut.js","blocks/CollectionSize.js","blocks/CompareEqual.js","blocks/CompareGreater.js","blocks/CompareGreaterEqual.js","blocks/CompareLess.js","blocks/CompareLessEqual.js","blocks/CompareNotEqual.js","blocks/CompileMotoko.js","blocks/CompileType.js","blocks/Conditional.js","blocks/ConditionalValue.js","blocks/Divide.js","blocks/DivideInt.js","blocks/FunctionCall.js","blocks/GlobalFunction.js","blocks/LiteralBool.js","blocks/LiteralCustomType.js","blocks/LiteralFloat.js","blocks/LiteralIdentifier.js","blocks/LiteralInt.js","blocks/LiteralNat.js","blocks/LiteralPair.js","blocks/LiteralPairType.js","blocks/LiteralText.js","blocks/LiteralTuple.js","blocks/LiteralTupleType.js","blocks/LiteralType.js","blocks/LoopWhile.js","blocks/MapGet.js","blocks/MapPut.js","blocks/MapRemove.js","blocks/Multiply.js","blocks/NewTextHashMap.js","blocks/Not.js","blocks/Null.js","blocks/Optional.js","blocks/OptionalUnwrap.js","blocks/Or.js","blocks/Parameter.js","blocks/ReferenceImport.js","blocks/Return.js","blocks/StateRead.js","blocks/StateUpdate.js","blocks/Subtract.js","blocks/TextConcat.js","blocks/TextSize.js","blocks/TypeMember.js","blocks/TypeMemberReference.js","blocks/Variable.js","plugins/rete-blocks-contextmenu-plugin/components/ContextMenu.js","plugins/rete-blocks-contextmenu-plugin/contexts/MenuContext.js","plugins/rete-blocks-contextmenu-plugin/components/MenuIcon.js","plugins/rete-blocks-contextmenu-plugin/components/MenuAction.js","utils/jsonCopy.js","plugins/rete-blocks-contextmenu-plugin/components/menus/SelectionMenu.js","plugins/rete-blocks-contextmenu-plugin/components/MenuComponent.js","plugins/rete-blocks-contextmenu-plugin/components/MenuSearch.js","plugins/rete-blocks-contextmenu-plugin/components/menus/PlacementMenu.js","plugins/rete-blocks-contextmenu-plugin/hooks/useEditorComponents.js","plugins/rete-blocks-contextmenu-plugin/index.js","contexts/ConnectionAwareListContext.js","components/rete/sockets/SocketHandle.js","components/rete/nodes/parts/DynamicTitle.js","utils/getPropLabel.js","components/rete/nodes/parts/ShortcutButton.js","components/rete/nodes/parts/PropField.js","components/rete/nodes/NodeHandle.js","editor/controls/BaseControl.js","editor/controls/PropControl.js","editor/components/BaseComponent.js","editor/sockets/TypeSocket.js","editor/sockets/PropOutputSocket.js","editor/components/BlockComponent.js","compilers/NodeCompiler.js","compilers/TypeCompiler.js","compilers/ControlCompiler.js","editor/BlocksNodeEditor.js","plugins/rete-vertical-sort-plugin/index.js","plugins/rete-connection-drop-plugin/index.js","plugins/rete-connection-opacity-plugin/index.js","plugins/rete-drag-button-plugin/index.js","assets/icons/gradient.svg","components/common/menus/TopMenu.js","components/common/menus/MenuItem.js","components/common/menus/MenuButton.js","components/common/FileDropZone.js","components/rete/LoadProjectMenu.js","assets/icons/download.svg","assets/icons/file-plus.svg","assets/icons/folder.svg","assets/icons/folder-wide.svg","assets/icons/folder-open.svg","assets/icons/save.svg","components/common/Icon.js","hooks/useLearningModeState.js","utils/makeObservable.js","hooks/useObservableState.js","components/rete/EditorMenu.js","editor/shortcutKeys.js","components/rete/Editor.js","components/pages/editor/EditorPage.js","utils/isEmbedded.js","hooks/useRedraw.js","components/GlobalTooltip.js","reportWebVitals.js","components/App.js","index.js","components/rete/nodes/views/CommentNodeView.js","blocks/Comment.js","components/rete/nodes/views/RegionNodeView.js","blocks/CommentRegion.js"],"names":["NumberControlHandle","control","bindInput","validation","min","max","step","useControlState","value","setValue","type","style","width","ref","onChange","event","target","TypeSelect","constraintType","abstract","invalid","others","anyType","types","TYPE_MAP","values","filter","data","isSubtype","events","useContext","EventsContext","getType","err","undefined","emit","ERROR_EVENT","some","t","useReactTooltip","className","classNames","name","label","map","generics","i","baseType","getDefaultLabel","genericNames","splice","toJSON","Type","parent","meta","this","otherMeta","buildType","Object","assign","isAbstract","defaultValue","other","length","every","equals","alwaysSubtype","arbitraryGenerics","getSharedType","toTypeString","call","g","join","Map","window","createType","category","reversed","anyReversedType","typeType","controlType","config","validate","nodeType","editor","useState","nodes","setNodes","useListener","EDITOR_CHANGE_EVENT","blockName","block","blockFilter","Array","isArray","getBlock","n","includes","String","id","maxWidth","node","getNodeLabel","JSON","stringify","valueType","toMotoko","customType","referenceType","identifierType","TextControlHandle","pattern","defaultInput","prop","nodeIdentifierRef","key","effectType","memberType","singleOutput","actorType","paramType","boolType","checked","verticalAlign","textType","minLength","maxLength","floatType","intType","natType","principalType","tupleType","unitType","of","Error","optionalType","nullType","collectionType","arrayType","item","mutableArrayType","mapType","asyncType","set","getGenericType","parentData","parentMeta","arguments","has","get","a","b","Category","root","CATEGORY_MAP","createCategory","getCategory","defaultCategory","stateCategory","color","icon","FaDatabase","priority","functionCategory","FaCubes","paramCategory","FaLongArrowAltRight","typeCategory","FaTextHeight","collectionCategory","FaTh","compilerCategory","FaCode","expressionCategory","FaEject","operatorCategory","FaFilter","actorCategory","FaFont","effectCategory","FaStream","literalCategory","FaPlusCircle","decompositionCategory","FaNetworkWired","commentCategory","FaCommentAlt","EDITOR_SAVE_EVENT","PROJECT_EXPORT_EVENT","PROJECT_LOAD_EVENT","PROJECT_CLEAR_EVENT","EventEmitter","setMaxListeners","on","console","error","EVENTS","React","createContext","importRef","resolveImportRefs","code","imports","replace","match","path","substring","lastIndexOf","hasOwnProperty","entries","MotokoCompiler","getTypeString","result","r","postCompile","s","warn","Compiler","unaryOperatorBlock","symbol","evaluate","topRight","title","inputs","outputs","input","binaryOperatorBlock","inputType","resultType","left","right","arithmeticOperatorBlock","args","numberComparisonOperatorBlock","defaultType","statementBlock","compileFn","beforeProp","inferType","compiler","getInput","props","after","topLeft","optional","endStatementBlock","statementProp","listener","options","useEffect","domTarget","addEventListener","removeEventListener","off","getValue","updateVisualValue","notifyEditorChange","stateReadIcon","FaAngleRight","stateWriteIcon","FaAngleDoubleRight","memberBlock","info","global","computeTitle","computeMemberName","compilers","motoko","shortcuts","nodeKey","initialValue","controls","stable","modifiers","m","timeout","deps","clearTimeout","setTimeout","ReactTooltip","rebuild","require","context","fs","base","scanSubDirectories","regularExpression","files","readDirectory","directory","readdirSync","forEach","file","fullPath","resolve","statSync","isDirectory","test","Module","keys","__dirname","allBlocks","blockNames","Set","blockContext","addProps","propList","basename","default","output","push","log","add","BLOCK_MAP","arrayImportRef","getOutput","mutable","multi","itemType","items","SelectControlHandle","findLabel","option","visibilityControlProp","controlProps","charAt","toUpperCase","memberProp","literalBlock","stringifier","UndefinedInputError","compileKey","Rete","Node","find","getNode","_output","connections","c","_compileConnection","_input","_control","_prop","getInputArgs","defaultCompile","trigger","cached","defineProperty","connection","from","to","bindNodeInput","stopPropagation","getBlockLabel","capitalCase","autoComplete","autoCorrect","placeholder","text","sentenceCase","simplified","replaceRegex","parseCodeBlockInputs","expression","replaceAll","configureMonaco","monaco","languages","register","setLanguageConfiguration","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","accessmodifiers","typeKeywords","operators","symbols","escapes","tokenizer","cases","include","token","bracket","next","comment","string","whitespace","CodeEditor","theme","defaultLanguage","beforeMount","newValue","tabSize","minimap","enabled","wordWrap","scrollBeyondLastLine","fontSize","CodeControlHandle","height","Loading","promise","loading","children","status","setStatus","setResult","Promise","then","catch","OutputControlHandle","tooltipRef","query","findValue","valuePromise","setValuePromise","copied","setCopied","showTooltip","show","readOnly","Button","size","variant","onClick","compileBlock","compilerKey","displayFn","queryFor","inputKey","webpackEmptyContext","req","e","module","exports","defaultReturnType","getFunctionReturnType","visibility","params","body","returnType","fromOutput","hasCaller","returnString","examples","getExampleProjects","webpackContext","webpackContextResolve","__webpack_require__","o","members","FaRegCaretSquareRight","array","hidden","FaLayerGroup","typeString","_","index","fromType","toType","fromTypeString","FaRegCaretSquareLeft","collection","FaSitemap","condition","trueCase","falseCase","falsePart","intImportRef","FaPlayCircle","functionNode","paramNames","withMeta","FiGlobe","FaPencilAlt","reference","FaItalic","loop","FaCompress","hashMapImportRef","textImportRef","valueTypeString","valueCase","nullCase","valuePart","nullPart","FaCaretLeft","stateNode","typeInput","typeNode","ContextMenu","x","y","styleProp","handleCloseMenu","useMemo","position","top","bindScreen","useCallback","el","bindContainer","moveIntoWindow","offset","getBoundingClientRect","bottom","innerHeight","onresize","pointerEvents","onKeyDown","keyCode","onMouseDown","MenuContext","MenuIcon","MenuAction","selected","onAction","userSelect","button","jsonCopy","parse","cloneSelected","newNodeMap","all","list","component","getComponent","createNode","newNode","addNode","original","clone","remove","update","SelectionMenu","each","removeNode","MenuComponent","endsWith","createElement","FaRegStickyNote","MenuSearch","focus","handleKeyDown","autoFocus","deepCopy","obj","PlacementMenu","searchText","setSearchText","setIndex","mouse","components","sortFn","hash","deprecated","v","sort","compare","localeCompare","useEditorComponents","socket","findType","outputType","findRelevantComponents","Math","lower","toLowerCase","k","startsWith","handleCreateNode","compatibleWith","connect","menuItems","ContextMenuPlugin","install","bind","mouseEvent","offsetX","offsetY","menu","display","preventDefault","contains","selectNode","clientX","clientY","document","view","container","appendChild","ReactDOM","render","Provider","connectionMouseMoved","removingConnection","io","prevConnections","conn","Input","Output","SocketHandle","innerRef","relevant","setRelevant","connectionAwareList","ConnectionAwareListContext","starting","connectionIO","indexOf","socketType","multiple","multipleConnections","paramCase","DynamicTitle","fallback","silent","setTitle","getPropLabel","ShortcutButton","shortcut","createNodeAtCursor","_drag","down","fromIO","toIO","background","borderColor","cursor","PropField","hideLeft","hideRight","bindSocket","bindControl","showControl","leftSocket","rightSocket","controlField","NodeHandle","state","Component","nodeHandle","getBindControl","transform","ButtonGroup","BaseControl","custom","getData","getDefaultValue","putData","PropControl","BaseComponent","getEditorNode","TypeSocket","otherType","Socket","PropOutputSocket","typeCompiler","nodeId","nodeName","_isTypeOfType","BlockComponent","split","addProp","isPropOutput","addPropInput","addPropOutput","isOutput","shouldPropHaveControl","addControl","addInput","addOutput","NodeCompiler","TypeCompiler","ControlCompiler","BlocksNodeEditor","projectName","projectDescription","json","description","version","beforeImport","hadError","jsonNode","build","fromJSON","jsonConnection","targetOutput","otherNode","targetInput","afterImport","area","NodeEditor","sortConnections","VerticalSortPlugin","ioMap","ConnectionDropPlugin","ConnectionOpacityPlugin","minDistance","opacityFalloff","querySelectorAll","pathElement","distance","opacity","sqrt","_linearGradient","DragButtonPlugin","_extends","source","prototype","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGradient","_ref","svgRef","titleId","x2","y2","stopColor","ForwardRef","MenuContainer","styled","div","StyledGradient","Gradient","TopMenu","ItemContainer","MenuItem","tooltip","StyledMenuItem","StyledIcon","svg","MenuButton","focusable","FileDropZone","onFile","onFileContent","onDrop","reader","FileReader","onload","readAsText","useDropzone","maxFiles","getRootProps","getInputProps","isDragActive","LoadProjectItemContainer","StyledFileDropZone","LoadProjectMenu","onLoadFileContent","example","_g","SvgDownload","viewBox","xmlns","xmlnsXlink","xmlSpace","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","d","_path","SvgFilePlus","SvgFolder","SvgFolderWide","fill","SvgFolderOpen","SvgSave","defaultFill","createIcon","SvgComponent","widthRatio","DownloadIcon","Download","FilePlusIcon","FilePlus","FolderWideIcon","Folder","FolderWide","FolderOpenIcon","FolderOpen","SaveIcon","Save","learningModeStore","_value","_listeners","fn","listenerFn","unsubscribe","useLearningModeState","observable","subscribe","useObservableState","ProjectNameInput","saveAnimation","keyframes","StyledSaveIcon","zoomAnimation","StyledZoomIcon","FiCrosshair","StyledLearningIcon","FaQuestionCircle","EditorMenu","getEditor","setName","saveAnimating","setSaveAnimating","zoomAnimating","setZoomAnimating","loadMenuOpen","setLoadMenuOpen","learningMode","setLearningMode","project","src","process","alt","updateName","onAnimationEnd","AreaPlugin","zoomAt","Modal","onShow","hide","onHide","Body","SHORTCUT_KEYS","INPUT_TAGS","EditorContainer","Editor","hideMenu","onSetup","onSave","_editor","loadFileContent","content","noClick","element","clear","destroy","EDITOR_NAME","use","ReactRenderPlugin","ConnectionPlugin","AutoArrangePlugin","classList","chrome","zoom","toggle","snap","dynamic","editorButton","mouseMoved","findCategory","querySelector","createEditor","EDITOR","ctrlKey","metaKey","activeElement","loadState","handleConnectionEnd","startIO","endIO","currentIO","resize","nextEditorState","STORAGE_EDITOR_STATE","DEFAULT_STATE","embedded","self","isEmbedded","storage","localStorage","EditorPage","redraw","useRedraw","menuParam","location","search","FileSaver","saveAs","Blob","pascalCase","onEditorSetup","stateString","message","postMessage","ReactTooltipStyled","GlobalTooltip","backgroundColor","place","delayShow","onPerfEntry","App","toast","StrictMode","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Container","StyledTextArea","TextareaAutosize","setText","setWidth","rows","maxRows","onMouseUp","clientWidth","ResizeArea","FaSquareFull","setHeight","parentElement","zIndex","clientHeight"],"mappings":"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","file":"static/js/main.e566b85a.chunk.js","sourcesContent":["import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\n\r\n\r\nexport default function NumberControlHandle({control, bindInput, validation: {min, max, step}}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    return (\r\n        <input\r\n            type=\"number\"\r\n            style={{width: '4em'}}\r\n            ref={bindInput}\r\n            min={min}\r\n            max={max}\r\n            step={step}\r\n            value={value || 0}\r\n            onChange={event => setValue(+event.target.value || event.target.value)}\r\n        />\r\n    );\r\n}\r\n","import {anyType, getType, TYPE_MAP} from '../../../block-types/types';\r\nimport React, {useContext} from 'react';\r\nimport EventsContext, {ERROR_EVENT} from '../../../contexts/EventsContext';\r\nimport classNames from 'classnames';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\nimport getDefaultLabel from '../../../utils/getDefaultLabel';\r\n\r\nexport default function TypeSelect({value, constraintType, abstract, invalid, onChange, ...others}) {\r\n\r\n    constraintType = constraintType || anyType;\r\n\r\n    const types = [...TYPE_MAP.values()]\r\n        .filter(type => (abstract || !type.data.abstract) && constraintType.isSubtype(type));\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    if(value) {\r\n        try {\r\n            value = getType(value);\r\n        }\r\n        catch(err) {\r\n            onChange(value = undefined);///\r\n            // console.error(err);\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    }\r\n\r\n    invalid = invalid || !value || !types.some(t => t.isSubtype(value));\r\n\r\n    // if(invalid && types.length) {\r\n    //     let firstType = types[0];\r\n    //     if(firstType) {\r\n    //         onChange(value = firstType);\r\n    //     }\r\n    //     // value = constraintType;\r\n    // }\r\n\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <>\r\n            <select\r\n                className={classNames(invalid && 'invalid')}\r\n                value={value?.name}\r\n                onChange={event => onChange(getType(event.target.value))}\r\n                {...others}>\r\n                {invalid && <option label=\"(Type)\" value={value?.name}/>}\r\n                {types.map(type => (\r\n                    <option key={type.name} label={type.name} value={type.name}/>\r\n                ))}\r\n            </select>\r\n            <div className=\"ps-2\">\r\n                {value?.generics?.map((type, i) => (\r\n                    <TypeSelect\r\n                        key={i}\r\n                        value={type}\r\n                        constraintType={value.data.baseType.generics[i]}\r\n                        abstract={abstract}\r\n                        data-tip={getDefaultLabel(value.data.genericNames?.[i])}\r\n                        onChange={t => {\r\n                            let generics = [...value.generics];\r\n                            generics.splice(i, 1, t);\r\n                            onChange(getType({\r\n                                ...value.toJSON(),\r\n                                generics,\r\n                            }));\r\n                        }}/>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}","import TextControlHandle from '../components/rete/controls/TextControlHandle';\r\nimport CheckboxControlHandle from '../components/rete/controls/CheckboxControlHandle';\r\nimport NumberControlHandle from '../components/rete/controls/NumberControlHandle';\r\nimport TypeControlHandle from '../components/rete/controls/TypeControlHandle';\r\nimport NodeControlHandle from '../components/rete/controls/NodeControlHandle';\r\nimport {nodeIdentifierRef} from '../compilers/MotokoCompiler';\r\n\r\nclass Type {\r\n    constructor(name, parent, generics, data = {}, meta = {}) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.generics = generics.map(type => getType(type));\r\n        this.data = data;\r\n        this.meta = meta;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            generics: this.generics.map(t => t.toJSON()),\r\n        };\r\n    }\r\n\r\n    of(...generics) {\r\n        return getType(this, generics);\r\n    }\r\n\r\n    withMeta(meta) {\r\n        let {name, ...otherMeta} = meta;\r\n        let type = buildType(name || this.name, this, this.generics);\r\n        Object.assign(type.meta, otherMeta);\r\n        return type;\r\n    }\r\n\r\n    isAbstract() {\r\n        return this.data.abstract || this.generics.some(type => type.isAbstract());\r\n    }\r\n\r\n    getDefaultValue() {\r\n        let value = this.data.defaultValue;\r\n        return typeof value === 'function' ? value(this) : value;\r\n    }\r\n\r\n    equals(other) {\r\n        return this.name === other.name && this.generics.length === other.generics.length && this.generics.every((t, i) => t.equals(other.generics[i]));\r\n    }\r\n\r\n    // TODO: rename to something like `isAssignableFrom`\r\n    isSubtype(other) {\r\n        if(!other) {\r\n            return false;\r\n        }\r\n        if(this.data.alwaysSubtype === other) {\r\n            return true;///\r\n        }\r\n        if(this.data.arbitraryGenerics && other.parent && this.name === other.parent.name) {\r\n            // e.g. `Tuple : Tuple<A, B, C>`\r\n            return true;\r\n        }\r\n        if(this.name === other.name) {\r\n            return this.generics.length === other.generics.length && this.generics.every((t, i) => t.isSubtype(other.generics[i]));\r\n        }\r\n        return !!other.parent && this.isSubtype(other.parent);\r\n    }\r\n\r\n    getSharedType(other) {\r\n        if(!other) {\r\n            return;\r\n        }\r\n        if(this === other) {\r\n            return this;\r\n        }\r\n        if(this.isSubtype(other)) {\r\n            return this;\r\n        }\r\n        if(other.isSubtype(this)) {\r\n            return other;\r\n        }\r\n        if(this.parent) {\r\n            return this.parent.getSharedType(other);\r\n        }\r\n    }\r\n\r\n    toTypeString() {\r\n        return this.data.toTypeString?.call(this) ?? this.name + (this.generics.length ? '<' + this.generics.map(g => g.toTypeString()).join(', ') + '>' : '');\r\n    }\r\n\r\n    toString() {\r\n        return `Type(${this.toTypeString()})`;\r\n    }\r\n}\r\n\r\nexport const TYPE_MAP = new Map();\r\n\r\nwindow.TYPE_MAP = TYPE_MAP; // Browser debug\r\n\r\nexport const anyType = createType('Any', {\r\n    abstract: true,\r\n    category: 'default',\r\n    reversed: false,\r\n});\r\nexport const anyReversedType = createType('AnyReversed', {\r\n    abstract: true,\r\n    category: 'default',\r\n    // parent: anyType,\r\n    reversed: true,\r\n});\r\n\r\nexport const typeType = createType('Type', {\r\n    parent: anyType,\r\n    category: 'types',\r\n    controlType: TypeControlHandle,\r\n    defaultValue: type => type.generics[0],\r\n    generics: [anyType],\r\n});\r\nexport const nodeType = createType('Node', {\r\n    parent: anyType,\r\n    category: 'nodes',\r\n    controlType: NodeControlHandle,\r\n    toTypeString() {\r\n        return this.meta.block ? `Node{block=${JSON.stringify(this.meta.block)}}` : 'Node';\r\n    },\r\n});\r\n\r\n// High-level type categories\r\nexport const valueType = createType('Value', {\r\n    abstract: true,\r\n    parent: anyType,\r\n    category: 'values',\r\n    toMotoko() {\r\n        if(this === valueType) {\r\n            return 'Any';\r\n        }\r\n    },\r\n});\r\nexport const customType = createType('Custom', {\r\n    // abstract: true, // TEMP\r\n    parent: valueType,\r\n    arbitraryGenerics: true,\r\n    // toMotoko() {\r\n    //     console.log(this)///\r\n    //     return this.meta.motoko || '$Custom$';\r\n    // },\r\n});\r\nexport const referenceType = createType('Reference', {\r\n    parent: anyType,\r\n    category: 'references',\r\n});\r\nexport const identifierType = createType('Identifier', {\r\n    parent: referenceType,\r\n    controlType: TextControlHandle,\r\n    // defaultValue: '',\r\n    validation: {\r\n        pattern: /^[a-zA-Z][a-zA-Z0-9_]*$/,\r\n    },\r\n    defaultInput(prop, node) {\r\n        // Create placeholder identifier\r\n        return nodeIdentifierRef(node, prop.key);\r\n    },\r\n});\r\nexport const effectType = createType('Effect', {\r\n    parent: anyReversedType,\r\n    category: 'effects',\r\n    generics: [valueType],\r\n    toMotoko([value]) {\r\n        return value;\r\n    },\r\n});\r\nexport const memberType = createType('Member', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'members',\r\n});\r\nexport const actorType = createType('Actor', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'actors',\r\n});\r\nexport const moduleType = createType('Module', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'modules',\r\n});\r\nexport const paramType = createType('Param', {\r\n    parent: anyReversedType,\r\n    category: 'parameters',\r\n});\r\n\r\n// Value types\r\nexport const boolType = createType('Bool', {\r\n    parent: valueType,\r\n    controlType: CheckboxControlHandle,\r\n    defaultValue: false,\r\n});\r\nexport const charType = createType('Char', {\r\n    parent: valueType,\r\n    controlType: TextControlHandle,\r\n    validation: {\r\n        minLength: 1,\r\n        maxLength: 1,\r\n    },\r\n});\r\nexport const textType = createType('Text', {\r\n    parent: valueType,\r\n    controlType: TextControlHandle,\r\n    defaultValue: '',\r\n});\r\nexport const floatType = createType('Float', {\r\n    parent: valueType,\r\n    controlType: NumberControlHandle,\r\n    defaultValue: 0,\r\n});\r\nexport const intType = createType('Int', {\r\n    parent: floatType,\r\n    category: 'integers',\r\n    controlType: NumberControlHandle,\r\n    validation: {\r\n        step: 1,\r\n    },\r\n});\r\nexport const natType = createType('Nat', {\r\n    parent: floatType,\r\n    category: 'naturals',\r\n    validation: {\r\n        step: 1,\r\n        min: 0,\r\n    },\r\n});\r\nexport const blobType = createType('Blob', {\r\n    parent: valueType,\r\n});\r\nexport const principalType = createType('Principal', {\r\n    parent: valueType,\r\n    category: 'principals',\r\n});\r\nexport const errorType = createType('Error', {\r\n    parent: valueType,\r\n});\r\nexport const tupleType = createType('Tuple', {\r\n    abstract: true,\r\n    arbitraryGenerics: true,\r\n    parent: valueType,\r\n    category: 'tuples',\r\n    // controlType: ,\r\n    toTypeString() {\r\n        return this === tupleType ? this.name : `(${this.generics.map(t => t.toTypeString()).join(', ')})`;\r\n    },\r\n});\r\n// export const unitType = createType('Unit', {\r\n//     parent: tupleType,\r\n// });\r\nexport const unitType = createType('Unit', tupleType.of());\r\nif(tupleType === unitType) throw new Error(); // TODO: move to tests\r\nexport const objectType = createType('Object', {\r\n    abstract: true,\r\n    arbitraryGenerics: true,\r\n    parent: valueType,\r\n    category: 'objects',\r\n    // controlType: ,\r\n    toTypeString() {\r\n        return `(${this.generics.map((t, i) => `${this.genericNames[i]}: ${t.toTypeString()}`).join(', ')})`;\r\n    },\r\n});\r\nexport const functionType = createType('Function', {\r\n    parent: valueType,\r\n    generics: [valueType, valueType],\r\n    genericNames: ['input', 'output'],\r\n    category: 'functions',\r\n    toTypeString() {\r\n        return `${this.generics[0].toTypeString()} -> ${this.generics[1].toTypeString()}`;\r\n    },\r\n});\r\nexport const optionalType = createType('Optional', {\r\n    parent: valueType,\r\n    generics: [valueType],\r\n    category: 'optionals',\r\n    toMotoko([value]) {\r\n        return `?${value}`;\r\n    },\r\n});\r\nexport const nullType = createType('Null', {\r\n    parent: valueType,\r\n    alwaysSubtype: optionalType,\r\n});\r\nexport const collectionType = createType('Collection', {\r\n    abstract: true,\r\n    parent: valueType,\r\n    category: 'collections',\r\n});\r\nexport const arrayType = createType('Array', {\r\n    parent: collectionType,\r\n    generics: [valueType],\r\n    genericNames: ['item'],\r\n    toMotoko([item]) {\r\n        return `[${item}]`;\r\n    },\r\n});\r\nexport const mutableArrayType = createType('MutableArray', {\r\n    parent: arrayType,\r\n    generics: [valueType],\r\n    genericNames: ['item'],\r\n    toMotoko([item]) {\r\n        return `[var ${item}]`;\r\n    },\r\n});\r\nexport const mapType = createType('Map', {\r\n    parent: collectionType,\r\n    generics: [valueType, valueType],\r\n    genericNames: ['key', 'value'],\r\n    toMotoko([key, value]) {\r\n        return `HashMap.HashMap<${key}, ${value}>`;\r\n    },\r\n});\r\nexport const asyncType = createType('Async', {\r\n    parent: valueType,\r\n    generics: [valueType],\r\n    category: 'futures',\r\n    toMotoko([value]) {\r\n        return `async ${value}`;\r\n    },\r\n});\r\n// export const andType = createType('And', {\r\n//     parent: valueType,\r\n//     generics: [valueType, valueType],\r\n//     toMotoko([a, b]) {\r\n//         return `(${a} and ${b})`;\r\n//     },\r\n// });\r\n\r\n// // Fixed-size int values\r\n// export const int64Type = createType('Int64', {\r\n//     parent: intType,\r\n//     validation: getIntValidation(64),\r\n// });\r\n// export const int32Type = createType('Int32', {\r\n//     parent: int64Type,\r\n//     validation: getIntValidation(32),\r\n// });\r\n// export const int16Type = createType('Int16', {\r\n//     parent: int32Type,\r\n//     validation: getIntValidation(16),\r\n// });\r\n// export const int8Type = createType('Int8', {\r\n//     parent: int16Type,\r\n//     validation: getIntValidation(8),\r\n// });\r\n//\r\n// // Fixed-size nat values\r\n// export const nat64Type = createType('Nat64', {\r\n//     parent: natType,\r\n//     validation: getNatValidation(64),\r\n// });\r\n// export const nat32Type = createType('Nat32', {\r\n//     parent: nat64Type,\r\n//     validation: getNatValidation(32),\r\n// });\r\n// export const nat16Type = createType('Nat16', {\r\n//     parent: nat32Type,\r\n//     validation: getNatValidation(16),\r\n// });\r\n// export const nat8Type = createType('Nat8', {\r\n//     parent: nat16Type,\r\n//     validation: getNatValidation(8),\r\n// });\r\n\r\n// function getNatValidation(n) {\r\n//     return {\r\n//         ...natType.data.validation,\r\n//         max: 2 ** n - 1,\r\n//     };\r\n// }\r\n//\r\n// function getIntValidation(n) {\r\n//     let x = 2 ** (n - 1);\r\n//     return {\r\n//         ...intType.data.validation,\r\n//         min: -x,\r\n//         max: x - 1,\r\n//     };\r\n// }\r\n\r\n// Create a global type\r\nfunction createType(name, data) {\r\n    let type;\r\n    if(data instanceof Type) {\r\n        type = data;\r\n        type.name = name;\r\n    }\r\n    else {\r\n        let {parent} = data;\r\n        let {generics = [], meta = {}, ...other} = data;\r\n        type = buildType(name, parent, generics, other, meta);\r\n        type.data.baseType = type;///\r\n    }\r\n    TYPE_MAP.set(name, type);\r\n    return type;\r\n}\r\n\r\n// Get or create a generic version of the given type\r\nfunction getGenericType(parent, generics) {\r\n    if(typeof parent === 'string') {\r\n        parent = getType(parent);\r\n    }\r\n    if((!generics || !generics.length || generics === parent.generics) && !parent.data.arbitraryGenerics) {\r\n        return getType(parent);\r\n    }\r\n    let type = buildType(parent.name, parent, generics);\r\n    if(!parent.isSubtype(type)) {\r\n        throw new Error(`Generics not assignable to ${parent.toTypeString()} from ${type.toTypeString()}`);\r\n    }\r\n    return type;\r\n}\r\n\r\n// Instantiate a new type\r\nfunction buildType(name, parent, generics, data = {}, meta = {}) {\r\n    // Special cases for data inheritance\r\n    let {\r\n        abstract,\r\n        arbitraryGenerics,\r\n        ...parentData\r\n    } = parent ? parent.data : {};\r\n    let parentMeta = parent ? parent.meta : {};\r\n    return new Type(\r\n        name,\r\n        parent || null,\r\n        generics || (parent ? parent.generics : []),\r\n        {...parentData, ...data},\r\n        {...parentMeta, ...meta},\r\n    );\r\n}\r\n\r\n// Get or create a type\r\nexport function getType(name, generics) {\r\n    if(arguments.length > 1) {\r\n        return getGenericType(name, generics);\r\n    }\r\n    if(name instanceof Type) {\r\n        return name;\r\n    }\r\n    if(typeof name === 'object') {\r\n        return getGenericType(name.name, (name.generics || []).map(t => getType(t)));\r\n    }\r\n    if(!name) {\r\n        throw new Error(`Invalid type: ${name}`);\r\n    }\r\n    if(!TYPE_MAP.has(name)) {\r\n        throw new Error(`Unknown type: ${name}`);\r\n    }\r\n    return TYPE_MAP.get(name);\r\n}\r\n\r\nexport function getSharedType(...types) {\r\n    let a = types[0];\r\n    for(let i = 1; i < types.length; i++) {\r\n        let b = types[i];\r\n        if(!a) {\r\n            a = b;\r\n        }\r\n        else if(b) {\r\n            a = a.getSharedType(b);\r\n        }\r\n    }\r\n    return a;\r\n}","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport TypeSelect from '../../common/inputs/TypeSelect';\r\n\r\n\r\nexport default function TypeControlHandle({abstract, control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let constraintType = control.config.type.generics[0];\r\n\r\n    let invalid = !control.validate(value);\r\n\r\n    // if(typeType.isSubtype(value)) {\r\n    //     value = value?.generics[0];\r\n    // }\r\n\r\n    return (\r\n        <div ref={bindInput}>\r\n            <TypeSelect\r\n                value={value}\r\n                constraintType={constraintType}\r\n                abstract={abstract}\r\n                invalid={invalid}\r\n                onChange={setValue/*type => setValue(typeType.of(type))*/}>\r\n            </TypeSelect>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useContext, useState} from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../contexts/EventsContext';\r\nimport useListener from '../../../hooks/useListener';\r\nimport getNodeLabel from '../../../utils/getNodeLabel';\r\nimport classNames from 'classnames';\r\nimport {getBlock} from '../../../editor/blocks';\r\n\r\n\r\nexport default function NodeControlHandle({editor, control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let [nodes, setNodes] = useState(() => [...editor.nodes]);\r\n\r\n    let events = useContext(EventsContext);\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => setNodes([...editor.nodes]));\r\n\r\n    let blockName = control.config.type?.meta.block;///\r\n    let blockFilter = blockName && (Array.isArray(blockName) ? blockName : [blockName]).map(block => {\r\n        let name = typeof block === 'string' ? block : block.name;\r\n        getBlock(name); // Ensure block exists\r\n        return name;\r\n    });\r\n\r\n    if(blockFilter) {\r\n        nodes = nodes.filter(n => !blockFilter || blockFilter.includes(n.name));\r\n    }\r\n\r\n    let invalid = !value || !nodes.some(n => String(n.id) === String(value) && (!blockFilter || blockFilter.includes(n.name)));\r\n\r\n    // TODO: cleanly prevent number -> string id conversion\r\n    return (\r\n        <select\r\n            ref={bindInput}\r\n            className={classNames(invalid && 'invalid')}\r\n            style={{maxWidth: '100%'}}\r\n            value={value}\r\n            onChange={event => setValue(event.target.value || undefined)}>\r\n            <option key={-1} label={'(Select a Node)'} value={undefined}/>\r\n            {nodes.map(node => (\r\n                <option key={node.id} label={getNodeLabel(node, editor)} value={node.id}/>\r\n            ))}\r\n        </select>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\n\r\n\r\nexport default function CheckboxControlHandle({control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    return (\r\n        <label ref={bindInput}>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={!!value}\r\n                onChange={event => setValue(event.target.checked)}\r\n            />\r\n            <span className=\"input-title my-0\" style={{verticalAlign: 'top'}}>{control.name}</span>\r\n        </label>\r\n    );\r\n}\r\n","import {\r\n    FaCode,\r\n    FaCommentAlt,\r\n    FaCubes,\r\n    FaDatabase,\r\n    FaEject,\r\n    FaFilter,\r\n    FaFont,\r\n    FaLongArrowAltRight,\r\n    FaNetworkWired,\r\n    FaPlusCircle,\r\n    FaStream,\r\n    FaTextHeight,\r\n    FaTh,\r\n} from 'react-icons/fa';\r\n\r\nclass Category {\r\n    constructor(name, parent, data = {}) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.root = parent ? parent.root : this;\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nconst CATEGORY_MAP = new Map();\r\n\r\nfunction createCategory(data) {\r\n    let {name, parent, ...other} = data;\r\n    let category = new Category(name, parent, parent ? {...parent.data, ...other} : other);\r\n    CATEGORY_MAP.set(category.name, category);\r\n    return category;\r\n}\r\n\r\nexport function getCategory(name) {\r\n    if(name instanceof Category) {\r\n        return name;\r\n    }\r\n    if(!CATEGORY_MAP.has(name)) {\r\n        throw new Error(`Could not find category with name: ${name}`);\r\n    }\r\n    return CATEGORY_MAP.get(name);\r\n}\r\n\r\n\r\nexport const defaultCategory = createCategory('Default', {});\r\nexport const stateCategory = createCategory({\r\n    name: 'State',\r\n    color: '#3fd',\r\n    icon: FaDatabase,\r\n    priority: 10,\r\n});\r\nexport const functionCategory = createCategory({\r\n    name: 'Function',\r\n    color: '#fd3',\r\n    icon: FaCubes,\r\n    priority: 20,\r\n});\r\nexport const paramCategory = createCategory({\r\n    name: 'Param',\r\n    color: '#a8f',\r\n    icon: FaLongArrowAltRight,\r\n    priority: 3,\r\n});\r\nexport const typeCategory = createCategory({\r\n    name: 'Type',\r\n    color: '#2af',\r\n    icon: FaTextHeight,\r\n});\r\nexport const collectionCategory = createCategory({\r\n    name: 'Collection',\r\n    color: '#1c8',\r\n    icon: FaTh,\r\n});\r\nexport const compilerCategory = createCategory({\r\n    name: 'Compiler',\r\n    color: '#f5a',\r\n    icon: FaCode,\r\n});\r\nexport const expressionCategory = createCategory({\r\n    name: 'Expression',\r\n    color: '#aaa',\r\n    icon: FaEject,\r\n});\r\nexport const operatorCategory = createCategory({\r\n    name: 'Operator',\r\n    // color: '#57f',\r\n    icon: FaFilter,\r\n});\r\nexport const actorCategory = createCategory({\r\n    name: 'Actor',\r\n    color: '#fa8',\r\n    icon: FaFont,\r\n});\r\nexport const effectCategory = createCategory({\r\n    name: 'Effect',\r\n    // color: '#57f',\r\n    icon: FaStream,\r\n    priority: 5,\r\n});\r\nexport const literalCategory = createCategory({\r\n    name: 'Literal',\r\n    // color: '#8fa',\r\n    icon: FaPlusCircle,\r\n});\r\nexport const decompositionCategory = createCategory({\r\n    name: 'Decomposition',\r\n    // color: '#ccc',\r\n    icon: FaNetworkWired,\r\n});\r\nexport const commentCategory = createCategory({\r\n    name: 'Comment',\r\n    // color: '#ccc',\r\n    icon: FaCommentAlt,\r\n});\r\n","import React from 'react';\r\nimport EventEmitter from 'events';\r\n\r\nexport const EDITOR_CHANGE_EVENT = 'editor-change';\r\nexport const EDITOR_SAVE_EVENT = 'editor-save';\r\nexport const PROJECT_EXPORT_EVENT = 'project-export';\r\nexport const PROJECT_LOAD_EVENT = 'project-load';\r\nexport const PROJECT_CLEAR_EVENT = 'project-clear';\r\nexport const ERROR_EVENT = 'error';\r\n\r\n// TODO: fix HMR memory leak\r\n\r\nconst events = new EventEmitter();\r\nevents.setMaxListeners(1000);\r\nevents.on(ERROR_EVENT, console.error);\r\n\r\n// Browser debug\r\nwindow.EVENTS = events;\r\n\r\nexport default React.createContext(events);\r\n","import Compiler from './Compiler';\r\nimport {identifierType, typeType} from '../block-types/types';\r\n\r\nexport function nodeIdentifierRef(node, key) {\r\n    // TODO: ensure `id` is a valid identifier\r\n    let id = typeof node === 'number' || typeof node === 'string' ? String(node) : node.id;\r\n    return `node__${id}${key ? '_' + key : ''}`;\r\n}\r\n\r\nexport function importRef(name) {\r\n    return `$import$\"${name}\"`;\r\n}\r\n\r\nexport function resolveImportRefs(code) {\r\n    if(!code) {\r\n        return code;\r\n    }\r\n    code = String(code);\r\n\r\n    const imports = {};\r\n    code = code.replace(/\\$import\\$\"([^\"]*)\"/g, (match, path) => {\r\n        const id = path.includes('/') ? path.substring(path.lastIndexOf('/') + 1) : path;\r\n        if(imports.hasOwnProperty(id) && imports[id] !== path) {\r\n            throw new Error(`Conflicting import paths: \"${path}\" != \"${imports[id]}\"`);\r\n        }\r\n        imports[id] = path;\r\n        return id;\r\n    });\r\n    for(const [id, path] of Object.entries(imports)) {\r\n        code = `import ${id} \"${path}\"; ${code}`;\r\n    }\r\n    return code;\r\n}\r\n\r\nexport default class MotokoCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'toMotoko');\r\n    }\r\n\r\n    defaultCompile(prop, node) {\r\n        // TODO: refactor these special cases\r\n\r\n        if(identifierType.isSubtype(prop.type)) {\r\n            // console.log(node.name)///\r\n            return nodeIdentifierRef(node, prop.key);\r\n        }\r\n\r\n        if(typeType.isSubtype(prop.type)) {\r\n            let type = prop.type.generics[0];\r\n            if(type && !type.isAbstract()) {\r\n                return this.getTypeString();\r\n            }\r\n        }\r\n    }\r\n\r\n    postCompile(result, node, key) {\r\n        if(typeof result === 'string' || typeof result === 'number' || typeof result === 'boolean' || result === null) {\r\n            return result;\r\n        }\r\n        if(result === undefined) {\r\n            return;\r\n        }\r\n        if(Array.isArray(result)) {\r\n            return result.map(r => this.postCompile(r, node, key)).filter(s => s).join(' ');\r\n        }\r\n        console.warn('Unexpected Motoko expression:', result);\r\n        return String(result);\r\n    }\r\n}","import {boolType, floatType, getType} from '../block-types/types';\r\nimport {operatorCategory} from '../block-categories/categories';\r\n\r\nexport function unaryOperatorBlock(type, symbol, evaluate) {\r\n    type = getType(type);\r\n    return {\r\n        topRight: 'result',\r\n        title: `(${symbol} a)`,\r\n        category: operatorCategory,\r\n        inputs: [{\r\n            key: 'input',\r\n            title: 'a',\r\n            type,\r\n        }],\r\n        outputs: [{\r\n            key: 'result',\r\n            type,\r\n            toMotoko({input}) {\r\n                return `${symbol}(${input})`;\r\n            },\r\n            // inferType({input}) {\r\n            //     return input;\r\n            // },\r\n        }],\r\n    };\r\n}\r\n\r\nexport function binaryOperatorBlock(type, symbol, evaluate) {\r\n    let [inputType, resultType] = Array.isArray(type) ? type : [type, type];\r\n\r\n    inputType = getType(inputType);\r\n    resultType = getType(resultType);\r\n\r\n    return {\r\n        title: `(a ${symbol} b)`,\r\n        category: operatorCategory,\r\n        topRight: 'result',\r\n        inputs: [{\r\n            key: 'left',\r\n            title: 'a',\r\n            type: inputType,\r\n        }, {\r\n            key: 'right',\r\n            title: 'b',\r\n            type: inputType,\r\n        }],\r\n        outputs: [{\r\n            key: 'result',\r\n            type: resultType,\r\n            toMotoko({left, right}) {\r\n                return `(${left} ${symbol} ${right})`;\r\n            },\r\n            // inferType({left, right}) {\r\n            //     return left.getSharedType(right);\r\n            // },\r\n        }],\r\n    };\r\n}\r\n\r\nexport function arithmeticOperatorBlock(...args) {\r\n    return binaryOperatorBlock(floatType, ...args);\r\n}\r\n\r\nexport function numberComparisonOperatorBlock(...args) {\r\n    return binaryOperatorBlock([floatType, boolType], ...args);\r\n}","import {effectType, getSharedType, unitType} from '../block-types/types';\r\nimport {effectCategory} from '../block-categories/categories';\r\n\r\nconst defaultType = effectType.of(unitType);\r\n\r\nexport function statementBlock(block, compileFn) {\r\n    const beforeProp = {\r\n        key: 'before',\r\n        type: effectType,\r\n        inferType(/*{after}*/args, node, compiler) {\r\n            // return after || defaultType;\r\n\r\n            let block = compiler.getBlock(node);\r\n            return getSharedType(...block.inputs\r\n                .filter(prop => effectType.isSubtype(prop.type))\r\n                .map(prop => compiler.getInput(node, prop.key))) || defaultType;\r\n        },\r\n        toMotoko(props, ...args) {\r\n            let result = compileFn(props, ...args);\r\n            if(result === undefined) {\r\n                return;\r\n            }\r\n            let {after} = props;\r\n            return `${result}${after ? ' ' + after : ''}`;\r\n        },\r\n    };\r\n    // for(let [key, fn] of Object.entries(compileObject)) {\r\n    //     beforeProp[key] = typeof fn === 'function' ? function(props, ...args) {\r\n    //         let result = fn(props, ...args);\r\n    //         if(result === undefined) {\r\n    //             return;\r\n    //         }\r\n    //         let {after} = props;\r\n    //         return `${result}${after ? ' ' + after : ''}`;\r\n    //     } : fn;\r\n    // }\r\n\r\n    return {\r\n        category: effectCategory,\r\n        topLeft: 'before',\r\n        topRight: 'after',\r\n        ...block,\r\n        inputs: [\r\n            ...block.inputs || [], {\r\n                key: 'after',\r\n                type: effectType,\r\n                optional: true,\r\n                // multi: true,\r\n            },\r\n        ],\r\n        outputs: [\r\n            ...block.outputs || [],\r\n            beforeProp,\r\n        ],\r\n    };\r\n}\r\n\r\nexport function endStatementBlock(block, statementProp) {\r\n    return {\r\n        category: effectCategory,\r\n        topLeft: 'statement',\r\n        ...block,\r\n        outputs: [...block.outputs || [], {\r\n            key: 'statement',\r\n            type: effectType,\r\n            ...statementProp,\r\n        }],\r\n    };\r\n}\r\n","import {useEffect} from 'react';\r\n\r\nexport default function useListener(target, event, listener, options) {\r\n    useEffect(() => {\r\n        if(!target) {\r\n            return;\r\n        }\r\n        const domTarget = 'addEventListener' in target;\r\n        if(domTarget) {\r\n            target.addEventListener(event, listener, options);\r\n        }\r\n        else {\r\n            target.on(event, listener, options);\r\n        }\r\n        return () => {\r\n            if(domTarget) {\r\n                target.removeEventListener(event, listener);\r\n            }\r\n            else {\r\n                target.off(event, listener);\r\n            }\r\n        };\r\n    });\r\n    return listener;\r\n}","import {useContext, useState} from 'react';\r\nimport useListener from './useListener';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../contexts/EventsContext';\r\n\r\nexport default function useControlState(control) {\r\n    const value = control.getValue();\r\n    const [, updateVisualValue] = useState(value); // updateVisualValue(..): redraw component if value changed\r\n\r\n    const events = useContext(EventsContext);\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => {\r\n        updateVisualValue(control.getValue());\r\n        control.notifyEditorChange?.();\r\n    });\r\n\r\n    useListener(control.events, 'update', () => events.emit(EDITOR_CHANGE_EVENT, control, value));\r\n\r\n    return [\r\n        value,\r\n        value => control.setValue(value),\r\n    ];\r\n}\r\n","import {boolType, unitType, valueType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock} from '../block-patterns/member-patterns';\r\nimport {stateCategory} from '../block-categories/categories';\r\nimport {FaAngleDoubleRight, FaAngleRight} from 'react-icons/fa';\r\n\r\nexport const stateReadIcon = FaAngleRight;\r\nexport const stateWriteIcon = FaAngleDoubleRight;\r\n\r\nconst block = memberBlock({\r\n    info: 'A persistent smart contract variable',\r\n    topRight: 'value',\r\n    category: stateCategory,\r\n    global: true,\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        // let name = editor.compilers.motoko.getInput(node, 'name');\r\n        let type = editor.compilers.type.getInput(node, 'initialValue') || unitType;\r\n        return name && `${name} : ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    shortcuts: [{\r\n        block: 'StateRead',\r\n        nodeKey: 'stateNode',\r\n    }, {\r\n        block: 'StateUpdate',\r\n        nodeKey: 'stateNode',\r\n    }],\r\n    inputs: [{\r\n        //     key: 'type',\r\n        //     type: 'Type',\r\n        // }, {\r\n        key: 'initialValue',\r\n        type: valueType,\r\n        optional: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        toMotoko({name}) {\r\n            return name;\r\n        },\r\n        inferType({initialValue}) {\r\n            return initialValue;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'stable',\r\n        type: boolType,\r\n        // }, {\r\n        //     key: 'readonly',\r\n        //     type: 'Bool',\r\n    }],\r\n}, {\r\n    toMotoko({stable, name, initialValue}, node, compiler) {\r\n        let readonly = false;/// TODO: infer and/or adjust shortcuts\r\n        let modifiers = [!!stable && 'stable'].filter(m => m).join(' '); //TODO: combine into single control\r\n        let type = compiler.editor.compilers.type.getInput(node, 'initialValue');\r\n\r\n        initialValue = initialValue || '()';\r\n\r\n        return `${modifiers && modifiers + ' '}${readonly ? 'let' : 'var'} ${name}${type ? ` : ${compiler.getTypeString(type)}` : ''} = ${initialValue};`;\r\n    },\r\n});\r\nexport default block;\r\n","import {useEffect} from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nlet timeout;\r\n\r\n// Rebuild react-tooltip\r\nexport default function useReactTooltip(deps = []) {\r\n    useEffect(() => {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => ReactTooltip.rebuild());\r\n    }, deps); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n    return ReactTooltip;\r\n}\r\n","import {basename} from 'path';\r\nimport {getType} from '../block-types/types';\r\nimport {defaultCategory, getCategory} from '../block-categories/categories';\r\n\r\n// Temp: `/utils/jest/requireContextTransform`\r\n// noinspection JSUnresolvedVariable\r\nif(typeof require.context === 'undefined') {\r\n    const fs = require('fs');\r\n    const path = require('path');\r\n\r\n    // noinspection JSUndefinedPropertyAssignment\r\n    require.context = (base = '.', scanSubDirectories = false, regularExpression = /\\.js$/) => {\r\n        const files = {};\r\n\r\n        const readDirectory = (directory) => {\r\n            fs.readdirSync(directory).forEach((file) => {\r\n                const fullPath = path.resolve(directory, file);\r\n                if(fs.statSync(fullPath).isDirectory()) {\r\n                    if(scanSubDirectories) {\r\n                        readDirectory(fullPath);\r\n                    }\r\n                }\r\n                else if(regularExpression.test(fullPath)) {\r\n                    files[fullPath] = true;\r\n                }\r\n            });\r\n        };\r\n\r\n        const Module = (file) => {\r\n            return require(file);\r\n        };\r\n        Module.keys = () => Object.keys(files);\r\n\r\n        readDirectory(path.resolve(__dirname, base));\r\n        return Module;\r\n    };\r\n}\r\n\r\nconst allBlocks = [];\r\nconst blockNames = new Set();\r\n\r\n// noinspection JSUnresolvedFunction\r\nconst blockContext = require.context('../blocks', true, /\\.js$/);\r\nblockContext.keys().forEach(path => {\r\n    let name = basename(path, '.js');\r\n    let block = blockContext(path).default;\r\n    block = {...block}; // HMR fix\r\n    if(block) {\r\n        block.name = name;\r\n        if(blockNames.has(name)) {\r\n            console.error(`Duplicate block name: ${name}`);\r\n            return;\r\n        }\r\n        block.category = block.category ? getCategory(block.category) : defaultCategory;\r\n        block.props = block.props || {};\r\n        for(let [key, prop] of Object.entries(block.props)) {\r\n            if(prop.key && prop.key !== key) {\r\n                throw new Error(`Prop key mismatch: ${key} != ${prop.key}`);\r\n            }\r\n            prop.key = key;\r\n        }\r\n\r\n        // `outputs` prioritized over `inputs`\r\n        addProps(block, block.outputs, 'output');\r\n        addProps(block, block.inputs, 'input');\r\n        addProps(block, block.controls, 'control');\r\n\r\n        // Rearrange block inputs/outputs/controls\r\n        block.inputs = [];\r\n        block.outputs = [];\r\n        block.controls = [];\r\n\r\n        for(let [key, prop] of Object.entries(block.props)) {\r\n            prop.key = key;\r\n            // `output` prioritized over `input`\r\n            if(prop.output) {\r\n                if(!block.outputs.includes(prop)) {\r\n                    block.outputs.push(prop);\r\n                }\r\n            }\r\n            else if(prop.input) {\r\n                if(!block.inputs.includes(prop)) {\r\n                    block.inputs.push(prop);\r\n                }\r\n            }\r\n            else if(prop.control) {\r\n                if(!block.controls.includes(prop)) {\r\n                    block.controls.push(prop);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Type deserialization\r\n        for(let prop of Object.values(block.props)) {\r\n            if(!prop.type && (prop.input || prop.output) && prop.control) {\r\n                console.log(prop);///\r\n                throw new Error(`Type not found for ${block.name} : ${prop.key}`);\r\n            }\r\n            if(prop.type) {\r\n                prop.type = getType(prop.type);\r\n            }\r\n        }\r\n\r\n        blockNames.add(block.name);\r\n        allBlocks.push(block);\r\n    }\r\n});\r\n\r\nfunction addProps(block, propList, type) {\r\n    if(propList) {\r\n        for(let prop of propList) {\r\n            if(prop.key && block.props[prop.key] === prop) {\r\n                continue;\r\n            }\r\n            if(block.props.hasOwnProperty(prop.key)) {\r\n                throw new Error(`Duplicate prop in ${block.name}: ${prop.key}`);\r\n            }\r\n            prop[type] = prop[type] || true;\r\n            block.props[prop.key] = prop;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const BLOCK_MAP = new Map(allBlocks.map(block => [block.name, block]));\r\n\r\nwindow.BLOCK_MAP = BLOCK_MAP; // Browser debugging\r\n\r\n// Post-initialization\r\nfor(let block of BLOCK_MAP.values()) {\r\n    if(block.shortcuts) {\r\n        block.shortcuts.forEach(s => {\r\n            if(!s.block) {\r\n                throw new Error(`Shortcut in ${block.name} requires a \\`block\\` attribute`);\r\n            }\r\n            s.block = getBlock(s.block);\r\n        });\r\n    }\r\n    else {\r\n        block.shortcuts = [];\r\n    }\r\n}\r\n\r\nexport function getBlock(name) {\r\n    if(!name) {\r\n        throw new Error(`Block cannot be ${name}`);\r\n    }\r\n    if(typeof name === 'string') {\r\n        if(!BLOCK_MAP.has(name)) {\r\n            throw new Error(`Block does not exist: ${name}`);\r\n        }\r\n        return BLOCK_MAP.get(name);\r\n    }\r\n    return name;\r\n}","import {arrayType, boolType, mutableArrayType, typeType, valueType} from '../block-types/types';\r\nimport {importRef} from '../compilers/MotokoCompiler';\r\nimport {collectionCategory} from '../block-categories/categories';\r\n\r\nexport const arrayImportRef = importRef('mo:base/Array');\r\n\r\nconst block = {\r\n    title: 'Create Array',\r\n    category: collectionCategory,\r\n    icon: collectionCategory.data.icon,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');\r\n        let mutable = editor.compilers.motoko.getOutput(node, 'mutable'); // TODO: control compiler?\r\n        return type && `new Array [ ${mutable ? 'var ' : ''}${editor.compilers.motoko.getTypeString(type.generics[0])} ]`;\r\n    },\r\n    inputs: [{\r\n        key: 'itemType',\r\n        type: typeType.of(valueType),\r\n    }, {\r\n        key: 'items',\r\n        type: valueType,\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: arrayType,\r\n        inferType({itemType}, node, compiler) {\r\n            let mutable = compiler.editor.compilers.motoko.getInput(node, 'mutable'); // TODO: simplify\r\n            return (mutable ? mutableArrayType : arrayType).of(itemType);\r\n        },\r\n        toMotoko({mutable, items}) {\r\n            return `[${mutable ? (items.length ? 'var ' : 'var') : ''}${items.join(', ')}]`;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'mutable',\r\n        type: boolType,\r\n    }],\r\n};\r\nexport default block;\r\n","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport classNames from 'classnames';\r\n\r\n\r\nexport default function SelectControlHandle({control, bindInput, options, findLabel}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    if(value === undefined && !options.includes(value)) {\r\n        value = options[0];\r\n        setValue(value);\r\n    }\r\n\r\n    let invalid = !control.validate(value) || !options.includes(value);\r\n\r\n    return (\r\n        <select\r\n            className={classNames(invalid && 'invalid')}\r\n            ref={bindInput}\r\n            value={value}\r\n            onChange={event => setValue(event.target.value || undefined)}>\r\n            {options.map((option, i) => (\r\n                <option key={i} label={findLabel?.(option, i) ?? option} value={option}/>\r\n            ))}\r\n        </select>\r\n    );\r\n}\r\n","import {identifierType, memberType} from '../block-types/types';\r\nimport {stringSelectProp} from './control-patterns';\r\n\r\n\r\nexport function computeMemberName(node, editor) {\r\n    return editor.compilers.motoko.getInput(node, 'name');\r\n\r\n    // let name = editor.compilers.motoko.getInput(node, 'name');\r\n    // if(!name) {\r\n    //     return;\r\n    // }\r\n    // if(!parentNode) {\r\n    //     return name;\r\n    // }\r\n    // let actorName = editor.compilers.motoko.getInput(parentNode, 'name');\r\n    // return actorName?`${actorName}.${name}`:name;\r\n}\r\n\r\nexport function visibilityControlProp() {\r\n    return stringSelectProp({\r\n        key: 'visibility',\r\n        // optional: true,\r\n    }, ['public', 'private', 'system']);\r\n}\r\n\r\nexport function memberBlock(block, memberProp) {\r\n    return {\r\n        topLeft: 'member',\r\n        ...block,\r\n        inputs: [\r\n            {\r\n                key: 'name',\r\n                type: identifierType,\r\n            },\r\n            ...block.inputs || [],\r\n        ],\r\n        outputs: [\r\n            {\r\n                key: 'member',\r\n                type: memberType,\r\n                ...memberProp,\r\n            },\r\n            ...block.outputs || [],\r\n        ],\r\n    };\r\n}","import SelectControlHandle from '../components/rete/controls/SelectControlHandle';\r\n\r\nexport function stringSelectProp(prop, options) {\r\n    return {\r\n        ...prop,\r\n        config: {\r\n            ...prop.config || {},\r\n            controlType: SelectControlHandle,\r\n            controlProps: {\r\n                options: prop.optional ? [undefined, ...options] : options,\r\n                findLabel: (option) => option ? option.charAt(0).toUpperCase() + option.substring(1) : '--',\r\n            },\r\n        },\r\n    };\r\n}","import {literalCategory} from '../block-categories/categories';\r\n\r\nexport function literalBlock(block, type, stringifier) {\r\n    return {\r\n        category: literalCategory,\r\n        topRight: 'value',\r\n        ...block,\r\n        outputs: [...block.outputs || [], {\r\n            key: 'value',\r\n            type,\r\n            control: true,\r\n            toMotoko({value}) {\r\n                if(value === undefined) {\r\n                    return;\r\n                }\r\n                return String(stringifier ? stringifier(value) : value);\r\n            },\r\n        }],\r\n    };\r\n}","import {getBlock} from '../editor/blocks';\r\nimport Rete from 'rete';\r\nimport {getType} from '../block-types/types';\r\n\r\nexport class UndefinedInputError extends Error {\r\n    constructor(block, key) {\r\n        super(`${block.name}.${key}`);\r\n    }\r\n}\r\n\r\nexport default class Compiler {\r\n    constructor(editor, compileKey) {\r\n        this.editor = editor;\r\n        this.compileKey = compileKey;\r\n    }\r\n\r\n    // Default output value if `[compileKey]` does not exist on block property\r\n    defaultCompile(prop, node) {\r\n    }\r\n\r\n    // Post-process results from either `prop[compileKey]` or `defaultCompile(..)`\r\n    postCompile(result, node, key) {\r\n        return result;\r\n    }\r\n\r\n    getNode(node) {\r\n        if(node instanceof Rete.Node) {\r\n            return node;\r\n        }\r\n        if(!node) {\r\n            throw new Error(`Node cannot be ${JSON.stringify(node)}`);\r\n        }\r\n        let id = String(typeof node === 'string' || typeof node === 'number' ? node : node.id);\r\n        node = this.editor.nodes.find(node => String(node.id) === id);\r\n        if(!node) {\r\n            throw new Error(`Node does not exist: ${id}`);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    getBlock(node) {\r\n        node = this.getNode(node);\r\n        return getBlock(node.name);\r\n    }\r\n\r\n    getInput(node, key) {\r\n        node = this.getNode(node);\r\n        let block = this.getBlock(node);\r\n        if(!block.props.hasOwnProperty(key)) {\r\n            throw new Error(`Prop not found on ${node.name}: ${key}`);\r\n        }\r\n        let prop = block.props[key];\r\n        if(prop.input) {\r\n            if(!prop.type.data.reversed) {\r\n                let input = this._input(node, key);\r\n                if(prop.multi) {\r\n                    return input.connections.map(c => this._compileConnection(c, c.input, c.output, 'outputs'));\r\n                }\r\n                if(input.connections.length) {\r\n                    let c = input.connections[0];\r\n                    return this._compileConnection(c, c.input, c.output, 'outputs');\r\n                }\r\n                if(input.control) {\r\n                    return input.control.getValue();\r\n                }\r\n            }\r\n            else {\r\n                let output = this._output(node, key);\r\n                if(prop.multi) {\r\n                    return output.connections.map(c => this._compileConnection(c, c.output, c.input, 'inputs'));\r\n                }\r\n                if(output.connections.length) {\r\n                    let c = output.connections[0];\r\n                    return this._compileConnection(c, c.output, c.input, 'inputs');\r\n                }\r\n            }\r\n        }\r\n\r\n        if(prop.control) {\r\n            let control = this._control(node, prop.key);\r\n            return this.postCompile(control.getValue(), node, key);\r\n        }\r\n    }\r\n\r\n    getOutput(node, key) {\r\n        node = this.getNode(node);\r\n        let prop = this._prop(node, key);\r\n        try {\r\n            let args = this.getInputArgs(node);\r\n            if(!args) {\r\n                return;\r\n            }\r\n            let result;\r\n            if(prop[this.compileKey]) {\r\n                result = prop[this.compileKey](args, node, this);\r\n            }\r\n            else {\r\n                result = this.defaultCompile(prop, node);\r\n            }\r\n            return this.postCompile(result, node, key);\r\n        }\r\n        catch(err) {\r\n            if(err instanceof UndefinedInputError) {\r\n                return;\r\n            }\r\n            console.error(`[${node.name}.${key}]`, err);\r\n            this.editor.trigger('warn', `[${node.name}.${key}] ${err}`);\r\n        }\r\n    }\r\n\r\n    getInputArgs(node) {\r\n        node = this.getNode(node);\r\n        let block = this.getBlock(node);\r\n        // if(block.__inputArgs?.[this.compileKey]) {\r\n        //     for(let key in block.__inputCache[this.compileKey]) {\r\n        //         delete block.__inputCache[this.compileKey][key];\r\n        //     }// TODO: proper cache invalidation\r\n        //     return block.__inputArgs[this.compileKey];\r\n        // }\r\n        let args = {};\r\n        for(let prop of Object.values(block.props)) {\r\n            if(prop.input || prop.control) {\r\n                // let value = this.getInput(node, prop.key);\r\n                // if(value === undefined && !prop.optional) {\r\n                //     this.editor.trigger('warn', `Missing input on ${block.name}: ${prop.key}`);\r\n                //     return;\r\n                // }\r\n                // args[prop.key] = value;\r\n\r\n                let cached = false;\r\n                let cachedValue;\r\n\r\n                Object.defineProperty(args, prop.key, {\r\n                    get: () => {\r\n                        // let cache = block.__inputCache[this.compileKey];\r\n                        // if(cache.hasOwnProperty(prop.key)) {\r\n                        //     return cache[prop.key];\r\n                        // }\r\n                        if(cached) {\r\n                            return cachedValue;\r\n                        }\r\n                        let value = this.getInput(node, prop.key);\r\n                        if(value === undefined && !prop.optional) {\r\n                            value = prop.type?.data.defaultInput?.(prop, node);\r\n                            if(value === undefined && !prop.optional) {\r\n                                throw new UndefinedInputError(block, prop.key);\r\n                            }\r\n                        }\r\n                        // cache[prop.key] = value;\r\n                        cached = true;\r\n                        return value;\r\n                    },\r\n                });\r\n            }\r\n        }\r\n        if(process.env.NODE_ENV !== 'production') {\r\n            // Throw error on missing key\r\n            let target = args;\r\n            args = new Proxy({}, {\r\n                get: (_, key) => {\r\n                    if(!target.hasOwnProperty(key)) {\r\n                        throw new Error(`Unknown input: ${block.name}.${key}`);\r\n                    }\r\n                    return target[key];\r\n                },\r\n            });\r\n        }\r\n        // TODO: refactor caching\r\n        // [block.__inputArgs || (block.__inputArgs = {})][this.compileKey] = args;\r\n        // [block.__inputCache || (block.__inputCache = {})][this.compileKey] = {};\r\n        // this.editor.on('process', ()=>{\r\n        //     for(let key in block.__inputCache) {\r\n        //         delete block.__inputCache[key];\r\n        //     }\r\n        // })///\r\n        return args;\r\n    }\r\n\r\n    // getControl(node, key) {\r\n    //     node = this.getNode(node);\r\n    //     return this._control(node, key).getValue();\r\n    // }\r\n\r\n    getTypeString(type) {\r\n        // console.log('/////', type);///\r\n        type = getType(type);\r\n        return type?.data[this.compileKey]?.(type.generics.map(t => this.getTypeString(t)), this) || type.toTypeString();\r\n    }\r\n\r\n    inferType(node, key) {\r\n        return this.editor.compilers.type.getInput(node, key);\r\n    }\r\n\r\n    _compileConnection(connection, from, to) {\r\n        // let prop = this._prop(to.node, to.key);\r\n        // if(!prop[this.compileKey]) {\r\n        //     throw new Error(`Cannot compile property of ${from.node.name} with key: ${prop.key}`);\r\n        // }\r\n        return this.getOutput(to.node, to.key);\r\n    }\r\n\r\n    _prop(node, key) {\r\n        let block = this.getBlock(node);\r\n        if(!block.props.hasOwnProperty(key)) {\r\n            throw new Error(`Prop does not exist in ${node.name}: ${key}`);\r\n        }\r\n        return block.props[key];\r\n    }\r\n\r\n    _input(node, key) {\r\n        if(!node.inputs.has(key)) {\r\n            throw new Error(`Input not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.inputs.get(key);\r\n    }\r\n\r\n    _output(node, key) {\r\n        if(!node.outputs.has(key)) {\r\n            throw new Error(`Output not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.outputs.get(key);\r\n    }\r\n\r\n    _control(node, key) {\r\n        if(!node.controls.has(key)) {\r\n            throw new Error(`Control not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.controls.get(key);\r\n    }\r\n}","// Enable selecting input fields without dragging node\r\nexport const bindNodeInput = ref => ref && ref.addEventListener('pointerdown', event => event.stopPropagation());\r\n","import {capitalCase} from 'change-case';\r\n\r\nexport default function getBlockLabel(block) {\r\n    if(!block) {\r\n        return '';\r\n    }\r\n    return block.title || capitalCase(block.name);\r\n}","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport classNames from 'classnames';\r\n\r\n\r\nexport default function TextControlHandle({control, bindInput, validation: {minLength, maxLength}}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let invalid = !control.validate(value);\r\n\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className={classNames('w-100', invalid && 'invalid')}\r\n            autoComplete=\"blocks-app\"\r\n            autoCorrect=\"off\"\r\n            ref={bindInput}\r\n            value={value || ''}\r\n            placeholder={control.name}\r\n            minLength={minLength}\r\n            maxLength={maxLength}\r\n            onChange={event => setValue(event.target.value || undefined)}\r\n        />\r\n    );\r\n}\r\n","import {sentenceCase} from 'change-case';\r\n\r\nexport default function getDefaultLabel(text) {\r\n    if(!text) {\r\n        return '';\r\n    }\r\n    return sentenceCase(text);\r\n}","import {getBlock} from '../editor/blocks';\r\nimport getBlockLabel from './getBlockLabel';\r\n\r\nexport default function getNodeLabel(node, editor, simplified) {\r\n    let block = getBlock(node.name);\r\n    if(!simplified && block && block.computeTitle) {\r\n        let title = block.computeTitle(node, editor);\r\n        if(title) {\r\n            return title;\r\n        }\r\n    }\r\n    return getBlockLabel(block);\r\n}","let replaceRegex = /{([0-9]+)}/g;\r\n\r\nexport function parseCodeBlockInputs(inputs, expression) {\r\n    return (expression || '').replaceAll(replaceRegex, (match, i) => {\r\n        i = +i;\r\n        return i >= 0 && i < inputs.length ? inputs[i] : match;\r\n    });\r\n}\r\n","// Derived from: https://github.com/dfinity/motoko-playground/blob/main/src/config/monacoConfig.js\r\n\r\nexport const configureMonaco = (monaco) => {\r\n    monaco.languages.register({ id: \"motoko\" });\r\n    monaco.languages.setLanguageConfiguration(\"motoko\", {\r\n        comments: {\r\n            lineComment: \"//\",\r\n            blockComment: [\"/*\", \"*/\"],\r\n        },\r\n        brackets: [\r\n            [\"{\", \"}\"],\r\n            [\"[\", \"]\"],\r\n            [\"(\", \")\"],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: \"{\", close: \"}\" },\r\n            { open: \"[\", close: \"]\" },\r\n            { open: \"(\", close: \")\" },\r\n            { open: '\"', close: '\"' },\r\n            { open: \"<\", close: \">\" },\r\n        ],\r\n    });\r\n    monaco.languages.setMonarchTokensProvider(\"motoko\", {\r\n        defaultToken: \"\",\r\n        tokenPostfix: \".mo\",\r\n        // prettier-ignore\r\n        keywords: [\r\n            'actor','and','async','assert','await','break','case','catch','class',\r\n            'continue','debug','else','false','for','func','if','in','import',\r\n            'module','not','null','object','or','label','let','loop','private',\r\n            'public','return','shared','try','throw','debug_show','query','switch',\r\n            'true','type','var','while','stable','flexible','system',\r\n        ],\r\n        accessmodifiers: [\"public\", \"private\", \"shared\"],\r\n        // prettier-ignore\r\n        typeKeywords: [\r\n            'Any','None','Null','Bool','Int','Int8','Int16','Int32','Int64','Nat',\r\n            'Nat8','Nat16','Nat32','Nat64','Word8','Word16','Word32','Word64','Float',\r\n            'Char','Text','Blob','Error','Principal',\r\n        ],\r\n        // prettier-ignore\r\n        operators: [\r\n            '=','<','>',':','<:','?','+','-','*','/','%','**','&','|','^','<<','>>',\r\n            '#','==','!=','>=','<=',':=','+=','-=','*=','/=','%=','**=','&=','|=',\r\n            '^=','<<=','>>=','#=','->',\r\n        ],\r\n        symbols: /[=(){}[\\].,:;@#_&\\-<>`?!+*\\\\/]/,\r\n        // C# style strings\r\n        escapes:\r\n            /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                [\r\n                    /[a-zA-Z_$][\\w$]*/,\r\n                    {\r\n                        cases: {\r\n                            \"@typeKeywords\": \"keyword.type\",\r\n                            \"@keywords\": \"keyword\",\r\n                            \"@default\": \"identifier\",\r\n                        },\r\n                    },\r\n                ],\r\n                // whitespace\r\n                { include: \"@whitespace\" },\r\n\r\n                // delimiters and operators\r\n                [/[{}()[\\]]/, \"@brackets\"],\r\n                [/[<>](?!@symbols)/, \"@brackets\"],\r\n                [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }],\r\n                // numbers\r\n                [/\\d*\\.\\d+([eE][-+]?\\d+)?/, \"number.float\"],\r\n                [/0[xX][0-9a-fA-F_]+/, \"number.hex\"],\r\n                [/[0-9_]+/, \"number\"],\r\n\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, \"delimiter\"],\r\n\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], // non-teminated string\r\n                [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\r\n\r\n                // characters\r\n                [/'[^\\\\']'/, \"string\"],\r\n                [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\r\n                [/'/, \"string.invalid\"],\r\n            ],\r\n\r\n            comment: [\r\n                [/[^/*]+/, \"comment\"],\r\n                [/\\/\\*/, \"comment\", \"@push\"], // nested comment\r\n                [\"\\\\*/\", \"comment\", \"@pop\"],\r\n                [/[/*]/, \"comment\"],\r\n            ],\r\n\r\n            string: [\r\n                [/[^\\\\\"]+/, \"string\"],\r\n                [/@escapes/, \"string.escape\"],\r\n                [/\\\\./, \"string.escape.invalid\"],\r\n                [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }],\r\n            ],\r\n\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, \"white\"],\r\n                [/\\/\\*/, \"comment\", \"@comment\"],\r\n                [/\\/\\/.*$/, \"comment\"],\r\n            ],\r\n        },\r\n    });\r\n};","import MonacoEditor from \"@monaco-editor/react\";\r\nimport {configureMonaco} from '../../config/configureMonaco';\r\n\r\nexport default function CodeEditor({value, onChange, ...others}) {\r\n\r\n    // const monaco = useMonaco();\r\n\r\n    const onEditorChange = (newValue) => {\r\n        onChange?.(newValue);\r\n    };\r\n\r\n    return (\r\n        <MonacoEditor\r\n            // width=\"30vh\"\r\n            // height=\"40vh\"\r\n            theme=\"vs-dark\"\r\n            defaultLanguage=\"motoko\"\r\n            beforeMount={configureMonaco}\r\n            value={value}\r\n            // path={fileName}\r\n            onChange={onEditorChange}\r\n            options={{\r\n                tabSize: 2,\r\n                minimap: {enabled: false},\r\n                wordWrap: 'off',\r\n                // wrappingIndent: 'indent',\r\n                scrollBeyondLastLine: false,\r\n                fontSize: 16,\r\n            }}\r\n            {...others}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport CodeEditor from '../../monaco/CodeEditor';\r\n\r\n\r\nexport default function CodeControlHandle({control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    return (\r\n        <div ref={bindInput} style={{height: 150}}>\r\n            <CodeEditor value={value} onChange={setValue}/>\r\n        </div>\r\n    );\r\n}\r\n","import {useContext, useEffect, useState} from 'react';\r\nimport EventsContext, {ERROR_EVENT} from '../../contexts/EventsContext';\r\n\r\nexport default function Loading({promise, loading, error, children}) {\r\n    let [status, setStatus] = useState('loading');\r\n    let [result, setResult] = useState();\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    useEffect(() => {\r\n        Promise.resolve(promise)\r\n            .then(result => {\r\n                setStatus('success');\r\n                setResult(result);\r\n            })\r\n            .catch(err => {\r\n                setStatus('error');\r\n                setResult(err);\r\n                if(!error) {\r\n                    events.emit(ERROR_EVENT, err);\r\n                }\r\n            });\r\n    }, [promise, error, events]);\r\n\r\n    if(status === 'loading') {\r\n        return loading?.() ?? null;\r\n    }\r\n    if(status === 'error') {\r\n        return error?.(result) ?? null;\r\n    }\r\n    return children?.(result) ?? null;\r\n}","import React, {useContext, useState} from 'react';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../contexts/EventsContext';\r\nimport useListener from '../../../hooks/useListener';\r\nimport Loading from '../../common/Loading';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard/lib/Component';\r\nimport {FaCopy} from 'react-icons/fa';\r\nimport {Button} from 'react-bootstrap';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n\r\nexport default function OutputControlHandle({control, bindInput, query}) {\r\n\r\n    const findValue = async () => {\r\n        try {\r\n            return await query(control, control.getNode(), control.editor);\r\n        }\r\n        catch(err) {\r\n            console.warn(err);\r\n            return `<${err}>`;\r\n        }\r\n    };\r\n\r\n    const [valuePromise, setValuePromise] = useState(findValue);\r\n    const [copied, setCopied] = useState();\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => {\r\n        setValuePromise(findValue());\r\n    });\r\n\r\n    let tooltipRef;\r\n    const showTooltip = () => {\r\n        setCopied(true);\r\n        ReactTooltip.show(tooltipRef);\r\n        setTimeout(() => /*ReactTooltip.hide(tooltipRef)&*/setCopied(false), 1000);\r\n    };\r\n\r\n    useReactTooltip();\r\n\r\n    // TODO: \"Copy to Clipboard\" tooltip\r\n\r\n    return (\r\n        <Loading promise={valuePromise}>\r\n            {value => (value ?? null) && (\r\n                <div className=\"d-flex\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"w-100 small\"\r\n                        readOnly\r\n                        ref={bindInput}\r\n                        value={value || ''}\r\n                    />\r\n                    <CopyToClipboard text={value} /* onCopy={() => setCopied(true)} */ >\r\n                        <Button\r\n                            ref={bindInput}\r\n                            size=\"sm\"\r\n                            variant=\"outline-light\"\r\n                            data-tip={copied ? undefined : 'Copy to Clipboard'}\r\n                            onClick={showTooltip}>\r\n                            <span ref={ref => tooltipRef = ref} data-tip=\"Copied!\"/>\r\n                            <FaCopy/>\r\n                        </Button>\r\n                    </CopyToClipboard>\r\n                </div>\r\n            )}\r\n        </Loading>\r\n    );\r\n}\r\n","import {anyReversedType, anyType} from '../block-types/types';\r\nimport OutputControlHandle from '../components/rete/controls/OutputControlHandle';\r\nimport {compilerCategory} from '../block-categories/categories';\r\nimport {resolveImportRefs} from '../compilers/MotokoCompiler';\r\n\r\nexport function compileBlock(title, compilerKey, displayFn) {\r\n    function queryFor(inputKey) {\r\n        return (control, node, editor) => {\r\n            let value = editor.compilers[compilerKey].getInput(node, inputKey);\r\n            let string = displayFn ? displayFn(value) : value;\r\n            return resolveImportRefs(string);\r\n        };\r\n    }\r\n\r\n    return {\r\n        title,\r\n        category: compilerCategory,\r\n        icon: compilerCategory.data.icon,\r\n        topLeft: 'input',\r\n        topRight: 'reversed',\r\n        inputs: [{\r\n            key: 'input',\r\n            title: 'Input',\r\n            type: anyType,\r\n        }, {\r\n            key: 'reversed',\r\n            title: 'Input',\r\n            type: anyReversedType,\r\n        }],\r\n        controls: [{\r\n            key: 'reversedDisplay',\r\n            title: 'Display',\r\n            config: {\r\n                controlType: OutputControlHandle,\r\n                controlProps: {\r\n                    query: queryFor('reversed'),\r\n                },\r\n            },\r\n        }, {\r\n            key: 'display',\r\n            config: {\r\n                controlType: OutputControlHandle,\r\n                controlProps: {\r\n                    query: queryFor('input'),\r\n                },\r\n            },\r\n        }],\r\n    };\r\n}\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 67;","import {asyncType, boolType, effectType, paramType, principalType, unitType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock, visibilityControlProp} from '../block-patterns/member-patterns';\r\nimport {functionCategory} from '../block-categories/categories';\r\nimport {nodeIdentifierRef} from '../compilers/MotokoCompiler';\r\n\r\nconst defaultReturnType = unitType;\r\n\r\nexport function getFunctionReturnType(node, editor) {\r\n    let type = editor.compilers.type.getInput(node, 'body')?.generics[0] || defaultReturnType;\r\n    let query = editor.compilers.control.getInput(node, 'query');\r\n    let visibility = editor.compilers.control.getInput(node, 'visibility');\r\n    if(query || visibility === 'public') {\r\n        type = asyncType.of(type);\r\n    }\r\n    return type;\r\n}\r\n\r\nconst block = memberBlock({\r\n    info: 'Evaluate based on given input parameters',\r\n    category: functionCategory,\r\n    topRight: 'body',\r\n    global: true,\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        // return name;/////\r\n        let {params, body} = editor.compilers.motoko.getInputArgs(node);\r\n        let returnType = getFunctionReturnType(node, editor);\r\n        if(!name && !params.length && !body) {\r\n            return;\r\n        }\r\n        return `${name || ''}(${params.join(', ')})${returnType ? ' : ' + editor.compilers.motoko.getTypeString(returnType) : ''}`;\r\n    },\r\n    shortcuts: [{\r\n        block: 'FunctionCall',\r\n        nodeKey: 'functionNode',\r\n    }, {\r\n        block: 'Return',\r\n        connections: [{\r\n            fromOutput: true,\r\n            from: 'body',\r\n            to: 'statement',\r\n        }],\r\n    }],\r\n    inputs: [{\r\n        key: 'params',\r\n        type: paramType,\r\n        multi: true,\r\n    }, {\r\n        key: 'body',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n    outputs: [{\r\n        //     key: 'reference',\r\n        //     type: referenceType,\r\n        //     toMotoko({name}) {\r\n        //         return name;\r\n        //     },\r\n        // }, {\r\n        key: 'caller',\r\n        type: principalType,\r\n        toMotoko(args, node, compiler) {\r\n            return `${nodeIdentifierRef(node)}.caller`;\r\n        },\r\n    }],\r\n    controls: [/*{\r\n        key: 'shared',\r\n        type: boolType,\r\n    },*/ /*stringSelectProp({\r\n        key: 'asyncKind',\r\n        optional: true,\r\n    }, ['async', 'query']),*/\r\n        visibilityControlProp(), {\r\n            key: 'query',\r\n            type: boolType,\r\n        }],\r\n}, {\r\n    toMotoko({name, visibility, query, params, body}, node, compiler) {\r\n        let hasCaller = node.outputs.get('caller').connections.length;\r\n\r\n        let shared = !!hasCaller;\r\n        let modifiers = [visibility !== 'system' && visibility, shared && 'shared'].filter(m => m).join(' ');\r\n\r\n        let returnType = getFunctionReturnType(node, compiler.editor);\r\n        let returnString = compiler.getTypeString(returnType);\r\n        return [\r\n            modifiers,\r\n            hasCaller ? nodeIdentifierRef(node) : '',\r\n            query ? 'query' : '',\r\n            `func ${name || ''}(${params.join(', ')})${returnString !== '()' ? ` : ${returnString}` : ''}`,\r\n            `{ ${body || ''} };`,\r\n        ];\r\n    },\r\n});\r\nexport default block;\r\n","const examples = [\r\n    require('./files/Echo.blocks.json'),\r\n    require('./files/Counter.blocks.json'),\r\n    require('./files/Calculator.blocks.json'),\r\n    require('./files/WhoAmI.blocks.json'),\r\n    require('./files/PhoneBook.blocks.json'),\r\n    require('./files/ToDoList.blocks.json'),\r\n];\r\n\r\nmodule.exports = {\r\n    getExampleProjects() {\r\n        return examples;\r\n    },\r\n};","var map = {\n\t\"./Actor.js\": 108,\n\t\"./ActorClass.js\": 109,\n\t\"./Add.js\": 110,\n\t\"./And.js\": 111,\n\t\"./ArrayAppend.js\": 112,\n\t\"./ArrayAppended.js\": 113,\n\t\"./ArrayFilter.js\": 114,\n\t\"./ArrayGet.js\": 115,\n\t\"./ArrayMap.js\": 116,\n\t\"./ArrayPrepend.js\": 117,\n\t\"./ArrayPut.js\": 118,\n\t\"./Await.js\": 119,\n\t\"./CodeType.js\": 120,\n\t\"./CodeValue.js\": 121,\n\t\"./CollectionGet.js\": 122,\n\t\"./CollectionPut.js\": 123,\n\t\"./CollectionSize.js\": 124,\n\t\"./Comment.js\": 189,\n\t\"./CommentRegion.js\": 190,\n\t\"./CompareEqual.js\": 128,\n\t\"./CompareGreater.js\": 129,\n\t\"./CompareGreaterEqual.js\": 130,\n\t\"./CompareLess.js\": 131,\n\t\"./CompareLessEqual.js\": 132,\n\t\"./CompareNotEqual.js\": 133,\n\t\"./CompileMotoko.js\": 134,\n\t\"./CompileType.js\": 137,\n\t\"./Conditional.js\": 138,\n\t\"./ConditionalValue.js\": 139,\n\t\"./Divide.js\": 140,\n\t\"./DivideInt.js\": 141,\n\t\"./Function.js\": 69,\n\t\"./FunctionCall.js\": 142,\n\t\"./GlobalFunction.js\": 143,\n\t\"./LiteralBool.js\": 144,\n\t\"./LiteralCustomType.js\": 145,\n\t\"./LiteralFloat.js\": 146,\n\t\"./LiteralIdentifier.js\": 147,\n\t\"./LiteralInt.js\": 148,\n\t\"./LiteralNat.js\": 149,\n\t\"./LiteralPair.js\": 150,\n\t\"./LiteralPairType.js\": 151,\n\t\"./LiteralText.js\": 152,\n\t\"./LiteralTuple.js\": 153,\n\t\"./LiteralTupleType.js\": 154,\n\t\"./LiteralType.js\": 155,\n\t\"./LoopWhile.js\": 156,\n\t\"./MapGet.js\": 157,\n\t\"./MapPut.js\": 158,\n\t\"./MapRemove.js\": 159,\n\t\"./Multiply.js\": 160,\n\t\"./NewArray.js\": 35,\n\t\"./NewTextHashMap.js\": 161,\n\t\"./Not.js\": 162,\n\t\"./Null.js\": 163,\n\t\"./Optional.js\": 164,\n\t\"./OptionalUnwrap.js\": 165,\n\t\"./Or.js\": 166,\n\t\"./Parameter.js\": 167,\n\t\"./ReferenceImport.js\": 168,\n\t\"./Return.js\": 169,\n\t\"./State.js\": 29,\n\t\"./StateRead.js\": 170,\n\t\"./StateUpdate.js\": 171,\n\t\"./Subtract.js\": 172,\n\t\"./TextConcat.js\": 173,\n\t\"./TextSize.js\": 174,\n\t\"./TypeMember.js\": 175,\n\t\"./TypeMemberReference.js\": 176,\n\t\"./Variable.js\": 177\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 107;","import {actorType, identifierType, memberType} from '../block-types/types';\r\nimport {actorCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    info: 'An actor which can be deployed as a smart contract',\r\n    category: actorCategory,\r\n    topLeft: 'actor',\r\n    topRight: 'members',\r\n    // global: true,\r\n    computeTitle(node, editor) {\r\n        let {name} = editor.compilers.motoko.getInputArgs(node);\r\n        return name && `actor ${name}`;\r\n    },\r\n    inputs: [{\r\n        key: 'name',\r\n        type: identifierType,\r\n        optional: true,\r\n    }, {\r\n        key: 'members',\r\n        type: memberType,\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'actor',\r\n        type: actorType,\r\n        toMotoko({name, members}) {\r\n            return `actor${name ? ' ' + name : ''} { ${members.join(' ')} };`;\r\n        },\r\n    }],\r\n};\r\nexport default block;","import {actorType, identifierType, memberType, paramType, principalType} from '../block-types/types';\r\nimport {actorCategory} from '../block-categories/categories';\r\nimport {nodeIdentifierRef} from '../compilers/MotokoCompiler';\r\n\r\n// TODO: subclasses\r\nlet thisName = 'this';\r\n\r\nconst block = {\r\n    info: 'An object-oriented class of actors',\r\n    category: actorCategory,\r\n    topLeft: 'actor',\r\n    topRight: 'members',\r\n    // global: true,\r\n    computeTitle(node, editor) {\r\n        let {name, params} = editor.compilers.motoko.getInputArgs(node);\r\n        if(!name) {\r\n            return;\r\n        }\r\n        return `actor class ${name}(${params.join(', ')})`;\r\n    },\r\n    inputs: [{\r\n        key: 'name',\r\n        type: identifierType,\r\n        optional: true,\r\n    }, {\r\n        key: 'members',\r\n        type: memberType,\r\n        multi: true,\r\n    }, {\r\n        key: 'params',\r\n        type: paramType,\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'actor',\r\n        type: actorType,\r\n        toMotoko({name, params, members}, node, compiler) {\r\n            let hasCaller = node.outputs.get('caller').connections.length;\r\n\r\n            return `${hasCaller ? `shared (${nodeIdentifierRef(node)})` : ''}actor class${name ? ' ' + name : ''}(${params.join(', ')}) = ${thisName} { ${members.join(' ')} };`;\r\n        },\r\n        // }, {\r\n        //     key: 'this',\r\n        //     type: valueType,\r\n        //     toMotoko({}) {\r\n        //         return thisName;\r\n        //     },\r\n    }, {\r\n        key: 'caller',\r\n        type: principalType,\r\n        toMotoko(args, node, compiler) {\r\n            return `${nodeIdentifierRef(node)}.caller`;\r\n        },\r\n    }],\r\n};\r\nexport default block;","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('+', (a, b) => a + b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(boolType, 'and', (a, b) => a && b);\r\nexport default block;","import {arrayType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {arrayImportRef} from './NewArray';\r\nimport {FaRegCaretSquareRight} from 'react-icons/fa';\r\n\r\nconst block = statementBlock({\r\n    title: 'Append (Array)',\r\n    category: collectionCategory,\r\n    icon: FaRegCaretSquareRight,\r\n    inputs: [{\r\n        key: 'array',\r\n        title: 'Array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n    }],\r\n}, ({array, value}) => {\r\n    return `${array} := ${arrayImportRef}.append(${array}, [${value}]);`;\r\n});\r\nexport default block;\r\n","import {arrayType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateWriteIcon} from './State';\r\nimport {arrayImportRef} from './NewArray';\r\n\r\nconst block = {\r\n    title: 'Appended (Array)',\r\n    category: collectionCategory,\r\n    icon: stateWriteIcon,\r\n    topRight: 'result',\r\n    hidden: true,///\r\n    inputs: [{\r\n        key: 'array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'item',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: valueType,\r\n        inferType({array}) {\r\n            if(arrayType.isSubtype(array)) {\r\n                return array.generics[0];\r\n            }\r\n        },\r\n        toMotoko({array, item}) {\r\n            return `${arrayImportRef}.append(${array}, ${item});`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arrayType, boolType, effectType, unitType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {FaLayerGroup} from 'react-icons/fa';\r\nimport {nodeIdentifierRef} from '../compilers/MotokoCompiler';\r\nimport {arrayImportRef} from './NewArray';\r\n\r\nconst block = {\r\n    title: 'Filter Items (Array)',\r\n    category: collectionCategory,\r\n    icon: FaLayerGroup,\r\n    topRight: 'result',\r\n    inputs: [{\r\n        key: 'array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'body',\r\n        title: 'Filter',\r\n        type: effectType.of(boolType),\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: arrayType,\r\n        inferType({array}) {\r\n            return array;\r\n        },\r\n        toMotoko({array, body}, node, compiler) {\r\n            let type = array?.generics[0] || unitType;\r\n            let typeString = compiler.getTypeString(type);\r\n\r\n            return `${arrayImportRef}.filter<${typeString}>(${array}, func (${nodeIdentifierRef(node)} : ${typeString}) : Bool { ${body} })`;\r\n        },\r\n    }, {\r\n        key: 'item',\r\n        type: valueType,\r\n        inferType({array}) {\r\n            if(arrayType.isSubtype(array)) {\r\n                return array.generics[0];\r\n            }\r\n        },\r\n        toMotoko(_, node, compiler) {\r\n            return nodeIdentifierRef(node);\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arrayType, natType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateReadIcon} from './State';\r\n\r\nconst block = {\r\n    title: 'Get (Array)',\r\n    category: collectionCategory,\r\n    icon: stateReadIcon,\r\n    topRight: 'value',\r\n    // deprecated: true,\r\n    inputs: [{\r\n        key: 'array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'index',\r\n        type: natType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType({array}) {\r\n            if(arrayType.isSubtype(array)) {\r\n                return array.generics[0];\r\n            }\r\n        },\r\n        toMotoko({array, index}) {\r\n            return `${array}[${index}]`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arrayType, effectType, unitType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {FaLayerGroup} from 'react-icons/fa';\r\nimport {nodeIdentifierRef} from '../compilers/MotokoCompiler';\r\nimport {arrayImportRef} from './NewArray';\r\n\r\nconst block = {\r\n    title: 'Replace Items (Array)',\r\n    category: collectionCategory,\r\n    icon: FaLayerGroup,\r\n    topRight: 'body',\r\n    inputs: [{\r\n        key: 'array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'body',\r\n        title: 'Replace',\r\n        type: effectType,\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: arrayType,\r\n        inferType({body}) {\r\n            if(effectType.isSubtype(body)) {\r\n                return arrayType.of(body.generics[0]);\r\n            }\r\n        },\r\n        toMotoko({array, body}, node, compiler) {\r\n            let fromType = array?.generics[0] || unitType;\r\n            let toType = compiler.editor.compilers.type.getInput(node, 'body') || unitType;\r\n\r\n            let fromTypeString = compiler.getTypeString(fromType);\r\n            let toTypeString = compiler.getTypeString(toType);\r\n\r\n            return `${arrayImportRef}.map<${fromTypeString}, ${toTypeString}>(${array}, func (${nodeIdentifierRef(node)} : ${fromTypeString}) : ${toTypeString} { ${body} })`;\r\n        },\r\n    }, {\r\n        key: 'item',\r\n        type: valueType,\r\n        inferType({array}) {\r\n            if(arrayType.isSubtype(array)) {\r\n                return array.generics[0];\r\n            }\r\n        },\r\n        toMotoko(_, node, compiler) {\r\n            return nodeIdentifierRef(node);\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arrayType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {arrayImportRef} from './NewArray';\r\nimport {FaRegCaretSquareLeft} from 'react-icons/fa';\r\n\r\nconst block = statementBlock({\r\n    title: 'Prepend (Array)',\r\n    category: collectionCategory,\r\n    icon: FaRegCaretSquareLeft,\r\n    inputs: [{\r\n        key: 'array',\r\n        title: 'Array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n    }],\r\n}, ({array, value}) => {\r\n    return `${array} := ${arrayImportRef}.append([${value}], ${array});`;\r\n});\r\nexport default block;\r\n","import {mutableArrayType, natType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateWriteIcon} from './State';\r\n\r\nconst block = statementBlock({\r\n    title: 'Put (Array)',\r\n    category: collectionCategory,\r\n    icon: stateWriteIcon,\r\n    // deprecated: true,\r\n    inputs: [{\r\n        key: 'array',\r\n        title: 'Array (mutable)',\r\n        type: mutableArrayType,\r\n    }, {\r\n        key: 'index',\r\n        type: natType,\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n    }],\r\n}, ({array, index, value}) => {\r\n    return `${array}.put(${index}, ${value});`;\r\n});\r\nexport default block;\r\n","import {valueType} from '../block-types/types';\nimport {operatorCategory} from '../block-categories/categories';\n\nconst block = {\n    title: '(await a)',\n    info: 'Wait for an asynchronous value',\n    category: operatorCategory,\n    topRight: 'result',\n    inputs: [{\n        key: 'input',\n        // type: asyncType,\n        type: valueType,//// Temporary\n    }],\n    outputs: [{\n        key: 'result',\n        type: valueType,\n        inferType({input}) {\n            return input.generics[0];\n        },\n        toMotoko({input}) {\n            return `(await ${input})`;\n        },\n    }],\n};\nexport default block;\n","import {parseCodeBlockInputs} from '../block-patterns/code-patterns';\r\nimport {customType, typeType, valueType} from '../block-types/types';\r\nimport {expressionCategory} from '../block-categories/categories';\r\nimport CodeControlHandle from '../components/rete/controls/CodeControlHandle';\r\n\r\nconst block = {\r\n    title: `{ Type }`,\r\n    info: `Compile an arbitrary type`,\r\n    category: expressionCategory,\r\n    icon: expressionCategory.data.icon,\r\n    // topLeft: 'inputs',\r\n    topRight: 'result',\r\n    width: 14,\r\n    inputs: [{\r\n        key: 'inputs',\r\n        type: typeType,\r\n        multi: true,\r\n    }, {\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: typeType.of(valueType),\r\n        inferType({type}) {\r\n            return type || customType; // TODO: distinct customType\r\n        },\r\n        toMotoko({inputs, expression}) {\r\n            return parseCodeBlockInputs(inputs, expression);\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'expression',\r\n        config: {\r\n            controlType: CodeControlHandle,\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {parseCodeBlockInputs} from '../block-patterns/code-patterns';\r\nimport {anyType, typeType, valueType} from '../block-types/types';\r\nimport {expressionCategory} from '../block-categories/categories';\r\nimport CodeControlHandle from '../components/rete/controls/CodeControlHandle';\r\n\r\nconst block = {\r\n    title: `{ Expression }`,\r\n    info: `Compile an arbitrary expression`,\r\n    category: expressionCategory,\r\n    icon: expressionCategory.data.icon,\r\n    // topLeft: 'inputs',\r\n    topRight: 'result',\r\n    width: 14,\r\n    inputs: [{\r\n        key: 'inputs',\r\n        type: anyType,\r\n        multi: true,\r\n    }, {\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: valueType,\r\n        inferType({type}) {\r\n            // return parseInputs(inputs, typeCode);\r\n            return type;\r\n        },\r\n        toMotoko({inputs, expression}) {\r\n            return `do { ${parseCodeBlockInputs(inputs, expression)} }`;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'expression',\r\n        config: {\r\n            controlType: CodeControlHandle,\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {collectionType, mapType, optionalType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateReadIcon} from './State';\r\n\r\nconst block = {\r\n    title: 'Get (Collection)',\r\n    category: collectionCategory,\r\n    icon: stateReadIcon,\r\n    topRight: 'value',\r\n    hidden: true,\r\n    inputs: [{\r\n        key: 'collection',\r\n        type: collectionType,\r\n    }, {\r\n        key: 'key',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: optionalType.of(valueType),\r\n        inferType({collection}) {\r\n            if(mapType.isSubtype(collection)) {\r\n                return optionalType.of(collection.generics[1]);\r\n            }\r\n        },\r\n        toMotoko({collection, key}) {\r\n            return `${collection}.get(${key})`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateWriteIcon} from './State';\r\n\r\nconst block = statementBlock({\r\n    title: 'Put (Collection)',\r\n    category: collectionCategory,\r\n    icon: stateWriteIcon,\r\n    hidden: true,\r\n    inputs: [{\r\n        key: 'collection',\r\n        type: collectionCategory,\r\n    }, {\r\n        key: 'key',\r\n        type: valueType,\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n    }],\r\n}, ({collection, key, value}) => {\r\n    return `${collection}.put(${key}, ${value});`;\r\n});\r\nexport default block;\r\n","import {mapType, natType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {FaSitemap} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Size (Collection)',\r\n    category: collectionCategory,\r\n    icon: FaSitemap,\r\n    inputs: [{\r\n        key: 'collection',\r\n        type: mapType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: natType,\r\n        toMotoko({map}) {\r\n            return `${map}.size()`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType, valueType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock([valueType, boolType], '==', (a, b) => a === b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('>', (a, b) => a > b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('>=', (a, b) => a >= b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('<', (a, b) => a < b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('<=', (a, b) => a <= b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType, valueType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock([valueType, boolType], '!=', (a, b) => a !== b);\r\nexport default block;\r\n","import {compileBlock} from '../block-patterns/compile-patterns';\n\nconst block = compileBlock('Motoko', 'motoko');\nexport default block;\n","import {compileBlock} from '../block-patterns/compile-patterns';\n\nconst block = compileBlock('Type', 'type', type => type?.toTypeString());\nexport default block;\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {boolType, effectType} from '../block-types/types';\r\n\r\nconst block = statementBlock({\r\n    title: 'if() then {} else {}',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'trueCase',\r\n        title: 'True',\r\n        type: effectType,\r\n        optional: true,\r\n    }, {\r\n        key: 'falseCase',\r\n        title: 'False',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n}, ({condition, trueCase, falseCase}) => {\r\n    if(String(condition) === 'true') {\r\n        return trueCase;\r\n    }\r\n    if(String(condition) === 'false') {\r\n        return falseCase;\r\n    }\r\n\r\n    let falsePart = falseCase ? ` else { ${falseCase} }` : '';\r\n    return `if (${condition}) { ${trueCase || ''} }${falsePart};`;\r\n});\r\nexport default block;","import {boolType, valueType} from '../block-types/types';\r\nimport {decompositionCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    title: 'Map Bool',\r\n    category: decompositionCategory,\r\n    topLeft: 'condition',\r\n    topRight: 'result',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'trueCase',\r\n        type: valueType,\r\n    }, {\r\n        key: 'falseCase',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: valueType,\r\n        inferType({trueCase, falseCase}) {\r\n            return trueCase.getSharedType(falseCase);\r\n        },\r\n        toMotoko({condition, trueCase, falseCase}) {\r\n            if(condition === true) {\r\n                return trueCase;\r\n            }\r\n            else if(condition === false) {\r\n                return falseCase;\r\n            }\r\n            return `(if (${condition}) { ${trueCase} } else { ${falseCase} })`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('/', (a, b) => a / b);\r\nexport default block;","import {operatorCategory} from '../block-categories/categories';\r\nimport {intType} from '../block-types/types';\r\nimport {importRef} from '../compilers/MotokoCompiler';\r\n\r\nexport const intImportRef = importRef('mo:base/Int');\r\n\r\nconst block = {\r\n    title: `(a // b)`,\r\n    category: operatorCategory,\r\n    topRight: 'result',\r\n    inputs: [{\r\n        key: 'left',\r\n        title: 'a',\r\n        type: intType,\r\n    }, {\r\n        key: 'right',\r\n        title: 'b',\r\n        type: intType,\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: intType,\r\n        toMotoko({left, right}) {\r\n            return `${intImportRef}.div(${left}, ${right})`;\r\n        },\r\n        // inferType({left, right}) {\r\n        //     return left.getSharedType(right);\r\n        // },\r\n    }],\r\n};\r\nexport default block;","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {nodeType, valueType} from '../block-types/types';\r\nimport {FaPlayCircle} from 'react-icons/fa';\r\nimport {functionCategory} from '../block-categories/categories';\r\nimport {getFunctionReturnType} from './Function';\r\n\r\nconst block = statementBlock({\r\n    info: 'Invoke a function in this project',\r\n    title: 'Call Function',\r\n    category: functionCategory,\r\n    icon: FaPlayCircle,\r\n    computeTitle(node, editor) {\r\n        let functionNode = editor.compilers.node.getInput(node, 'functionNode');\r\n        if(!functionNode) {\r\n            return;\r\n        }\r\n        let name = editor.compilers.motoko.getInput(functionNode, 'name');\r\n        let paramNames = editor.compilers.node.getInput(functionNode, 'params')\r\n            .map(n => editor.compilers.motoko.getInput(n, 'name'));\r\n        return name && `${name}(${paramNames.join(', ')})`;\r\n    },\r\n    inputs: [{\r\n        key: 'args',\r\n        type: valueType,\r\n        multi: true, // TODO: separate arg sockets\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType(_, node, compiler) {\r\n            let functionNode = compiler.editor.compilers.node.getInput(node, 'functionNode');\r\n            if(!functionNode) {\r\n                return;\r\n            }\r\n            return getFunctionReturnType(functionNode, compiler.editor);\r\n        },\r\n        toMotoko({args}, node, compiler) {\r\n            let functionNode = compiler.editor.compilers.node.getInput(node, 'functionNode');\r\n            if(!functionNode) {\r\n                return;\r\n            }\r\n            let name = compiler.getInput(functionNode, 'name');\r\n            if(!name) {\r\n                return;\r\n            }\r\n            return `${name}(${args.join(', ')})`;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'functionNode',\r\n        type: nodeType.withMeta({block: 'Function'}),\r\n    }],\r\n}, ({functionNode, args}, node, compiler) => {\r\n    let name = compiler.getInput(functionNode, 'name');\r\n    if(!name) {\r\n        return;\r\n    }\r\n    return `ignore ${name}(${args.join(', ')});`;\r\n});\r\nexport default block;\r\n","import {boolType, effectType, identifierType, paramType} from '../block-types/types';\r\nimport {functionCategory} from '../block-categories/categories';\r\nimport {FiGlobe} from 'react-icons/fi';\r\n\r\n// const defaultReturnType = unitType;\r\n//\r\n// function getGlobalFunctionReturnType(node, editor) {\r\n//     let type = editor.compilers.type.getInput(node, 'body')?.generics[0] || defaultReturnType;\r\n//     return asyncType.of(type);\r\n// }\r\n\r\n// TODO: dry with Function\r\n\r\nconst block = {\r\n    title: 'Method',\r\n    info: 'Define a callable method for the smart contract',\r\n    category: functionCategory,\r\n    icon: FiGlobe,\r\n    topRight: 'body',\r\n    // global: true,\r\n    computeTitle(node, editor) {\r\n        // return editor.compilers.motoko.getInput(node, 'name');\r\n        let name = editor.compilers.motoko.getInput(node, 'name');\r\n        let {params, body} = editor.compilers.motoko.getInputArgs(node);\r\n        let returnType = editor.compilers.type.getInput(node, 'body')?.generics[0];\r\n        if(!name && !params.length && !body) {\r\n            return;\r\n        }\r\n        return `${name || ''}(${params.join(', ')})${returnType ? ' : ' + editor.compilers.motoko.getTypeString(returnType) : ''}`;\r\n    },\r\n    shortcuts: [{\r\n        block: 'Return',\r\n        connections: [{\r\n            from: 'body',\r\n            to: 'statement',\r\n        }],\r\n    }],\r\n    inputs: [{\r\n        key: 'name',\r\n        type: identifierType,\r\n    }, {\r\n        key: 'params',\r\n        type: paramType,\r\n        multi: true,\r\n    }, {\r\n        key: 'body',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n    // outputs: [{\r\n    //     key: 'caller',\r\n    //     type: principalType,\r\n    //     toMotoko(args, node, compiler) {\r\n    //         return `${nodeIdentifierRef(node)}.caller`;\r\n    //     },\r\n    // }],\r\n    controls: [{\r\n        key: 'query',\r\n        type: boolType,\r\n    }],\r\n};\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Boolean',\r\n}, boolType);\r\nexport default block;","import {typeCategory} from '../block-categories/categories';\r\nimport {customType, referenceType, typeType, valueType} from '../block-types/types';\r\nimport {FaPencilAlt} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Custom Type',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    icon: FaPencilAlt,\r\n    hidden: true,////\r\n    inputs: [{\r\n        key: 'reference',\r\n        type: referenceType,\r\n    }, {\r\n        key: 'generics',\r\n        type: typeType.of(valueType),\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(customType),\r\n        inferType(args, node, compiler) {\r\n            let reference = compiler.editor.compilers.motoko.getInput(node, 'reference');\r\n            let generics = compiler.editor.compilers.type.getInput(node, 'generics');\r\n            if(!reference) {\r\n                return;\r\n            }\r\n            return customType.of(...generics).withMeta({name: reference}); ///\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {floatType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Float',\r\n}, floatType);\r\nexport default block;","import {identifierType} from '../block-types/types';\r\nimport {FaItalic} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Name',\r\n    // category: defaultCategory,\r\n    icon: FaItalic,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: identifierType,\r\n        control: true,\r\n        toMotoko({value}) {\r\n            return value;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {intType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Integer',\r\n}, intType);\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {natType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Natural Number',\r\n}, natType);\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {tupleType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Pair',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && `Pair ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    inputs: [{\r\n        key: 'left',\r\n        title: 'a',\r\n        type: valueType,\r\n    }, {\r\n        key: 'right',\r\n        title: 'b',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: tupleType.of(valueType, valueType),\r\n        inferType({left, right}) {\r\n            return tupleType.of(left, right);\r\n        },\r\n        toMotoko({left, right}) {\r\n            return `(${left}, ${right})`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {tupleType, typeType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Pair of Types',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && editor.compilers.motoko.getTypeString(type);\r\n    },\r\n    inputs: [{\r\n        key: 'left',\r\n        title: 'a',\r\n        type: typeType.of(valueType),\r\n    }, {\r\n        key: 'right',\r\n        title: 'b',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(tupleType.of(valueType, valueType)),\r\n        inferType({left, right}) {\r\n            return /*typeType.of(*/tupleType.of(left, right)/*)*/;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {textType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Text',\r\n}, textType, JSON.stringify);\r\nexport default block;\r\n","import {literalCategory} from '../block-categories/categories';\r\nimport {tupleType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Tuple',\r\n    category: literalCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && `Tuple ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    inputs: [{\r\n        key: 'inputs',\r\n        type: valueType,\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: tupleType,\r\n        inferType({inputs}) {\r\n            return tupleType.of(...inputs);\r\n        },\r\n        toMotoko({inputs}) {\r\n            return `(${inputs.join(', ')})`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {tupleType, typeType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Tuple of Types',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && editor.compilers.motoko.getTypeString(type);\r\n    },\r\n    inputs: [{\r\n        key: 'types',\r\n        type: typeType.of(valueType),\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(tupleType),\r\n        inferType({types}) {\r\n            return /*typeType.of(*/tupleType.of(...types/*.map(t => t.generics[0])*/)/*)*/; // Unwrap Type<?> inputs\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {typeType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Type',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(valueType),\r\n        control: true,\r\n        inferType({value}) {\r\n            // return typeType.of(value);\r\n            return value;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {boolType, effectType} from '../block-types/types';\r\n\r\nconst block = statementBlock({\r\n    title: 'while() {}',\r\n    info: 'Repeat while the condition is true',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'loop',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n}, ({condition, loop}) => {\r\n    return `while (${condition}) { ${loop ?? ''} };`;\r\n});\r\nexport default block;","import {mapType, optionalType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateReadIcon} from './State';\r\n\r\nconst block = {\r\n    title: 'Get (Map)',\r\n    category: collectionCategory,\r\n    icon: stateReadIcon,\r\n    topRight: 'value',\r\n    // deprecated: true,\r\n    inputs: [{\r\n        key: 'map',\r\n        type: mapType,\r\n    }, {\r\n        key: 'key',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: optionalType.of(valueType),\r\n        inferType({map}) {\r\n            if(mapType.isSubtype(map)) {\r\n                return optionalType.of(map.generics[1]);\r\n            }\r\n        },\r\n        toMotoko({map, key}) {\r\n            return `${map}.get(${key})`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {mapType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateWriteIcon} from './State';\r\n\r\nconst block = statementBlock({\r\n    title: 'Put (Map)',\r\n    category: collectionCategory,\r\n    icon: stateWriteIcon,\r\n    // deprecated: true,\r\n    inputs: [{\r\n        key: 'map',\r\n        type: mapType,\r\n    }, {\r\n        key: 'key',\r\n        type: valueType,\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n    }],\r\n}, ({map, key, value}) => {\r\n    return `${map}.put(${key}, ${value});`;\r\n});\r\nexport default block;\r\n","import {mapType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {FaCompress} from 'react-icons/fa';\r\n\r\nconst block = statementBlock({\r\n    title: 'Remove (Map)',\r\n    category: collectionCategory,\r\n    icon: FaCompress,\r\n    inputs: [{\r\n        key: 'map',\r\n        type: mapType,\r\n    }, {\r\n        key: 'key',\r\n        type: valueType,\r\n    }],\r\n}, ({map, key}) => {\r\n    return `${map}.remove(${key});`;\r\n});\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {floatType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(floatType, '*', (a, b) => a * b);\r\nexport default block;","import {mapType, textType, typeType, valueType} from '../block-types/types';\r\nimport {importRef} from '../compilers/MotokoCompiler';\r\nimport {collectionCategory} from '../block-categories/categories';\r\n\r\nexport const hashMapImportRef = importRef('mo:base/HashMap');\r\nexport const textImportRef = importRef('mo:base/Text');\r\n\r\nconst block = {\r\n    title: 'Create Map',\r\n    category: collectionCategory,\r\n    icon: collectionCategory.data.icon,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && `new HashMap<${editor.compilers.motoko.getTypeString(type.generics[0])}, ${editor.compilers.motoko.getTypeString(type.generics[1])}>`;\r\n    },\r\n    inputs: [{\r\n        key: 'keyType',\r\n        type: typeType.of(textType), // TODO: other key types\r\n    }, {\r\n        key: 'valueType',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: mapType,\r\n        inferType({valueType}) {\r\n            return mapType.of(textType, valueType);\r\n        },\r\n        toMotoko(args, node, compiler) {\r\n            let {valueType} = compiler.editor.compilers.type.getInputArgs(node);\r\n            let valueTypeString = compiler.getTypeString(valueType);\r\n            return `${hashMapImportRef}.HashMap<Text, ${valueTypeString}>(0, ${textImportRef}.equal, ${textImportRef}.hash)`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {unaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = unaryOperatorBlock(boolType, 'not', (a) => !a);\r\nexport default block;\r\n","import {nullType} from '../block-types/types';\r\nimport {literalCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    category: literalCategory,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: nullType,\r\n        toMotoko() {\r\n            return `null`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {optionalType, valueType} from '../block-types/types';\nimport {operatorCategory} from '../block-categories/categories';\n\nconst block = {\n    title: 'Wrap Optional (?a)',\n    info: 'Create an optional version of the input value',\n    category: operatorCategory,\n    // topRight: 'result',\n    inputs: [{\n        key: 'input',\n        title: 'Value',\n        type: valueType,\n    }],\n    outputs: [{\n        key: 'result',\n        type: optionalType,\n        inferType({input}) {\n            return optionalType.of(input);\n        },\n        toMotoko({input}) {\n            return `(?${input})`;\n        },\n    }, {\n        key: 'null',\n        type: optionalType,\n        inferType({input}) {\n            return optionalType.of(input);\n        },\n        toMotoko({input}) {\n            return `null`;\n        },\n    }],\n};\nexport default block;\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {effectType, optionalType, valueType} from '../block-types/types';\r\nimport {decompositionCategory} from '../block-categories/categories';\r\nimport {nodeIdentifierRef} from '../compilers/MotokoCompiler';\r\n\r\nconst block = statementBlock({\r\n    title: 'Unwrap Optional',\r\n    info: 'Run different logic depending on whether an Optional value is null',\r\n    category: decompositionCategory,\r\n    inputs: [{\r\n        key: 'input',\r\n        type: optionalType,\r\n    }, {\r\n        key: 'valueCase',\r\n        title: 'Value',\r\n        type: effectType,\r\n        optional: true,\r\n    }, {\r\n        key: 'nullCase',\r\n        title: 'Null',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType({input}) {\r\n            return input;\r\n        },\r\n        toMotoko({input}, node) {\r\n            return nodeIdentifierRef(node);\r\n        },\r\n    }],\r\n}, ({input, valueCase, nullCase}, node) => {\r\n    if(String(input) === 'null') {\r\n        return nullCase;\r\n    }\r\n\r\n    let valuePart = valueCase ? `case (?${nodeIdentifierRef(node)}) {${valueCase}};` : '';\r\n    let nullPart = nullCase ? `case null {${nullCase}};` : '';\r\n\r\n    return `switch (${input}) { ${valuePart}${nullPart && ' ' + nullPart} };`;\r\n});\r\nexport default block;","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(boolType, 'or', (a, b) => a || b);\r\nexport default block;\r\n","import {identifierType, paramType, typeType, valueType} from '../block-types/types';\r\nimport {paramCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    info: 'An input parameter to a class or function',\r\n    topLeft: 'param',\r\n    topRight: 'value',\r\n    category: paramCategory,\r\n    computeTitle(node, editor) {\r\n        let name = editor.compilers.motoko.getInput(node, 'name');\r\n        let type = editor.compilers.type.getInput(node, 'type');\r\n        return name && `${name} : ${type ? editor.compilers.motoko.getTypeString(type) : 'Any'}`;\r\n    },\r\n    inputs: [{\r\n        key: 'name',\r\n        type: identifierType,\r\n    }, {\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'param',\r\n        type: paramType,\r\n        toMotoko({name, type}, node, compiler) {\r\n            // console.log(type)//\r\n            let typeString = compiler.getTypeString(type) || 'Any';\r\n            return `${name} : ${typeString}`;\r\n        },\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n        toMotoko({name}) {\r\n            return name;\r\n        },\r\n        inferType({type}) {\r\n            return type;\r\n        },\r\n    }],\r\n};\r\nexport default block;","import {referenceType, textType} from '../block-types/types';\r\nimport {FaItalic} from 'react-icons/fa';\r\nimport {importRef} from '../compilers/MotokoCompiler';\r\n\r\nconst block = {\r\n    title: 'Import Reference',\r\n    // category: defaultCategory,\r\n    icon: FaItalic,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: referenceType,\r\n        toMotoko({path}) {\r\n            return importRef(path);\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'path',\r\n        type: textType,\r\n        config: {\r\n            validation: {\r\n                minLength: 1,\r\n            },\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {effectType, unitType, valueType} from '../block-types/types';\r\nimport {endStatementBlock} from '../block-patterns/statement-patterns';\r\nimport {functionCategory} from '../block-categories/categories';\r\nimport {FaCaretLeft} from 'react-icons/fa';\r\n\r\nconst block = endStatementBlock({\r\n    info: 'End a function\\'s execution path',\r\n    category: functionCategory,\r\n    icon: FaCaretLeft,\r\n    inputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        optional: true,\r\n    }],\r\n    // controls: [{\r\n    //     key: 'functionNode',\r\n    //     config: {\r\n    //         controlType: NodeControlHandle,\r\n    //         controlProps: {\r\n    //             component: 'Function',\r\n    //         },\r\n    //     },\r\n    // }],\r\n}, {\r\n    inferType({value}) {\r\n        return effectType.of(value || unitType);\r\n    },\r\n    toMotoko({value}) {\r\n        return `return${value ? ' ' + value : ''};`;\r\n    },\r\n});\r\nexport default block;","import {nodeType, valueType} from '../block-types/types';\r\nimport {stateCategory} from '../block-categories/categories';\r\nimport {stateReadIcon} from './State';\r\n\r\nconst block = {\r\n    title: 'Read State',\r\n    category: stateCategory,\r\n    icon: stateReadIcon,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType(args, node, compiler) {\r\n            let stateNode = compiler.editor.compilers.node.getInput(node, 'stateNode');\r\n            if(!stateNode) {\r\n                return;\r\n            }\r\n            return compiler.getInput(stateNode, 'initialValue');\r\n        },\r\n        toMotoko(args, node, compiler) {\r\n            let stateNode = compiler.editor.compilers.node.getInput(node, 'stateNode');\r\n            if(!stateNode) {\r\n                return;\r\n            }\r\n            return compiler.getInput(stateNode, 'name');\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'stateNode',\r\n        type: nodeType.withMeta({block: 'State'}),\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {stateCategory} from '../block-categories/categories';\r\nimport {nodeType} from '../block-types/types';\r\nimport {stateWriteIcon} from './State';\r\n\r\nconst block = statementBlock({\r\n    title: 'Write State',\r\n    category: stateCategory,\r\n    icon: stateWriteIcon,\r\n    inputs: [{\r\n        key: 'value',\r\n        type: 'Value',\r\n        // optional: true,\r\n    }],\r\n    // outputs: [{\r\n    //     key: 'newValue',\r\n    //     type: 'Value',\r\n    //     toMotoko({node: stateNode, value}, node, compiler) {\r\n    //         let name = compiler.getOutput(stateNode, 'name');\r\n    //         if(!name) {\r\n    //             return;\r\n    //         }\r\n    //         return `(${name} := ${value || '()'})`;\r\n    //     },\r\n    // }],\r\n    controls: [{\r\n        key: 'stateNode',\r\n        type: nodeType.withMeta({block: 'State'}),\r\n    }],\r\n}, ({stateNode, value}, node, compiler) => {\r\n    let name = compiler.getInput(stateNode, 'name');\r\n    if(!name) {\r\n        return;\r\n    }\r\n    return `${name} := ${value};`;\r\n});\r\nexport default block;\r\n","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('-', (a, b) => a - b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {textType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(textType, '#', (a, b) => a || b);\r\nexport default block;\r\n","import {natType, textType} from '../block-types/types';\r\nimport {FaSitemap} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Length (Text)',\r\n    // category: textCategory,\r\n    icon: FaSitemap,\r\n    inputs: [{\r\n        key: 'text',\r\n        type: textType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: natType,\r\n        toMotoko({text}) {\r\n            return `${text}.size()`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {typeType, valueType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock, visibilityControlProp} from '../block-patterns/member-patterns';\r\nimport {typeCategory} from '../block-categories/categories';\r\n\r\nconst block = memberBlock({\r\n    title: 'Named Type',\r\n    info: 'An actor-level type definition',\r\n    category: typeCategory,\r\n    topRight: 'type',\r\n    shortcuts: [{\r\n        block: 'TypeMemberReference',\r\n        nodeKey: 'typeNode',\r\n    }],\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        let type = editor.compilers.type.getInput(node, 'typeInput');//?.generics[0];\r\n        return type && `${name || '(?)'} = ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    inputs: [{\r\n        key: 'typeInput',\r\n        title: 'Definition',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n        inferType({name, typeInput}) {\r\n            if(!typeInput.isAbstract()) {\r\n                // return typeType.of(typeInput);\r\n                return typeInput.withMeta({name});///\r\n            }\r\n        },\r\n        // toMotoko({name}) {\r\n        //     return name;\r\n        // },\r\n    }],\r\n    controls: [\r\n        visibilityControlProp(),\r\n    ],\r\n}, {\r\n    toMotoko({visibility, name, typeInput}) {\r\n        let modifiers = [visibility !== 'system' && visibility].filter(m => m).join(' ');\r\n\r\n        return `${modifiers && modifiers + ' '}type ${name} = ${typeInput};`;\r\n    },\r\n});\r\nexport default block;\r\n","import {nodeType, typeType, valueType} from '../block-types/types';\r\nimport {typeCategory} from '../block-categories/categories';\r\nimport {FaAngleRight} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Type Reference',\r\n    category: typeCategory,\r\n    icon: FaAngleRight,\r\n    topRight: 'type',\r\n    computeTitle(node, editor) {\r\n        let typeNode = editor.compilers.node.getInput(node, 'typeNode');\r\n        console.log(typeNode);\r\n        if(!typeNode) {\r\n            return;\r\n        }\r\n        return editor.compilers.motoko.getInput(typeNode, 'name');\r\n    },\r\n    outputs: [{\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n        inferType(args, node, compiler) {\r\n            let typeNode = compiler.editor.compilers.node.getInput(node, 'typeNode');\r\n            if(!typeNode) {\r\n                return;\r\n            }\r\n            return compiler.editor.compilers.types.getInput(typeNode, 'type');\r\n        },\r\n        // toMotoko({name}) {\r\n        //     return name;\r\n        // },\r\n    }],\r\n    controls: [{\r\n        key: 'typeNode',\r\n        type: nodeType.withMeta({block: 'TypeMember'}),\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {identifierType, valueType} from '../block-types/types';\r\nimport {paramCategory} from '../block-categories/categories';\r\nimport {nodeIdentifierRef} from '../compilers/MotokoCompiler';\r\n\r\nconst block = statementBlock({\r\n    title: 'Local Variable',\r\n    info: 'Store and retrieve data from within a function',\r\n    category: paramCategory,\r\n    inputs: [{\r\n        key: 'name',\r\n        type: identifierType,\r\n        optional: true,\r\n    }, {\r\n        key: 'initialValue',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType({initialValue}) {\r\n            return initialValue;\r\n        },\r\n        toMotoko({name}, node) {\r\n            return name || nodeIdentifierRef(node);\r\n        },\r\n    }],\r\n}, ({name, initialValue}, node) => {\r\n    return `var ${name || nodeIdentifierRef(node)} = ${initialValue};`;\r\n});\r\nexport default block;","import React, {useMemo, useCallback} from 'react';\r\n\r\nexport default function ContextMenu({x, y, children, style: styleProp, handleCloseMenu, ...others}) {\r\n\r\n    const style = useMemo(() => ({\r\n        position: 'absolute',\r\n        left: x,\r\n        top: y,\r\n        ...styleProp,\r\n    }), [x, y, styleProp]);\r\n\r\n    const bindScreen = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        const listener = event => event.stopPropagation();\r\n        el.addEventListener('pointermove', listener);\r\n        el.addEventListener('mousemove', listener);\r\n        el.addEventListener('wheel', listener);\r\n    }, []);\r\n\r\n    const bindContainer = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        const moveIntoWindow = () => {\r\n            let offset = el.getBoundingClientRect().bottom - window.innerHeight;\r\n            if(offset > 0) {\r\n                el.style.top = `${y - offset}px`;\r\n            }\r\n        };\r\n        moveIntoWindow();\r\n        el.onresize = moveIntoWindow;\r\n    }, [y]);\r\n\r\n    return (\r\n        <div\r\n            className=\"context-menu-screen\"\r\n            style={{position: 'absolute', top: 0, left: 0, bottom: 0, right: 0, pointerEvents: 'all'}}\r\n            ref={bindScreen}\r\n            onKeyDown={e => e.keyCode === 27 /* escape */ && handleCloseMenu()}\r\n            onMouseDown={() => handleCloseMenu()}\r\n            {...others}>\r\n            <div className=\"context-menu-container\" style={style} ref={bindContainer}>\r\n                <div className=\"context-menu\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const MenuContext = React.createContext(null);\r\n","export default function MenuIcon({children, color}) {\r\n    return (\r\n        <span className=\"context-menu-icon\" style={{color}}>{children}</span>\r\n    );\r\n}","import classNames from 'classnames';\r\nimport MenuIcon from './MenuIcon';\r\n\r\nexport default function MenuAction({icon, color, selected, onAction, children, style, ...others}) {\r\n    return (\r\n        <div\r\n            className={classNames('context-menu-action', selected && 'selected')}\r\n            style={{color, userSelect: 'none', ...style}}\r\n            onMouseDown={event => event.button === 0 && onAction(event)} {...others}>\r\n            {icon && <MenuIcon>{icon}</MenuIcon>}\r\n            {children}\r\n        </div>\r\n    );\r\n}","export default function jsonCopy(value) {\r\n    return JSON.parse(JSON.stringify(value));\r\n}","import React, {useContext} from 'react';\r\nimport MenuAction from '../MenuAction';\r\nimport {MenuContext} from '../../contexts/MenuContext';\r\nimport jsonCopy from '../../../../utils/jsonCopy';\r\n\r\nconst cloneSelected = async (editor) => {\r\n\r\n    const newNodeMap = {};\r\n\r\n    let results = await Promise.all(editor.selected.list.map(async node => {\r\n        const component = editor.getComponent(node.name);\r\n        const newNode = await component.createNode(jsonCopy(node.data));\r\n\r\n        newNode.meta = jsonCopy(node.meta);\r\n        [newNode.position[0], newNode.position[1]] = [node.position[0] + 25, node.position[1] + 25];\r\n\r\n        editor.addNode(newNode);\r\n\r\n        newNodeMap[node.id] = newNode;\r\n\r\n        return {\r\n            original: node,\r\n            clone: newNode,\r\n        };\r\n    }));\r\n\r\n    results.forEach(({original}) => {\r\n        // original.inputs.forEach((input) => {\r\n        //     input.connections.forEach((connection) => {\r\n        //         const newInputNode = newNodeMap[connection.input.node.id];\r\n        //         const newOutputNode = newNodeMap[connection.output.node.id];\r\n        //         if(!newInputNode || !newOutputNode) {\r\n        //             return;\r\n        //         }\r\n        //         const input = newInputNode.inputs.get(connection.input.key);\r\n        //         const output = newOutputNode.outputs.get(connection.output.key);\r\n        //         if(!input || !output) {\r\n        //             return;\r\n        //         }\r\n        //         editor.connect(output, input);\r\n        //     });\r\n        // });\r\n\r\n        editor.selected.remove(original);\r\n        original.update();\r\n    });\r\n\r\n    // TODO: select after clone (capture mouse click)\r\n    // results.forEach(({clone}) => {\r\n    //     editor.selected.add(clone);\r\n    //     clone.update();\r\n    // });\r\n};\r\n\r\nexport default function SelectionMenu() {\r\n\r\n    const {editor} = useContext(MenuContext);\r\n\r\n    return (\r\n        <>\r\n            <MenuAction onAction={() => cloneSelected(editor)}>Clone</MenuAction>\r\n            <MenuAction onAction={() => editor.selected.each(node => editor.removeNode(node))}>Delete</MenuAction>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport MenuAction from './MenuAction';\r\nimport {FaRegStickyNote} from 'react-icons/fa';\r\nimport getBlockLabel from '../../../utils/getBlockLabel';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\n\r\n\r\nexport default function MenuComponent({component, ...others}) {\r\n    const block = component.block;\r\n    const category = block?.category;\r\n\r\n    useReactTooltip();\r\n    if(block?.info) {\r\n        others = {\r\n            'data-tip': block.info.endsWith('.') ? block.info : `${block.info}.`,\r\n            'data-place': 'right',\r\n            ...others,\r\n        };\r\n    }\r\n\r\n    return (\r\n        <MenuAction\r\n            icon={React.createElement(block?.icon || category?.data.icon || FaRegStickyNote)}\r\n            color={category?.data.color}\r\n            {...others}>\r\n            {getBlockLabel(block) || component.name}\r\n        </MenuAction>\r\n    );\r\n}","import {useCallback} from 'react';\r\n\r\nexport default function MenuSearch({value, onChange, onAction, onKeyDown, children, ...others}) {\r\n\r\n    const bindInput = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        el.focus();\r\n        // el.select();\r\n    }, [{}/* Force redraw in order to refocus */]); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n\r\n    const handleKeyDown = (onKeyDown || onAction) && (event => {\r\n        if(onKeyDown) {\r\n            onKeyDown(event);\r\n        }\r\n        if(onAction && event.key === 'Enter') {\r\n            onAction();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                className=\"context-menu-search\"\r\n                autoFocus\r\n                ref={bindInput}\r\n                autoComplete=\"blocks-search\"\r\n                value={value || ''}\r\n                onClick={event => event.stopPropagation()}\r\n                onChange={onChange && (event => onChange(event.target.value))}\r\n                onKeyDown={handleKeyDown}\r\n                {...others}/>\r\n            <div className=\"context-menu-search-area\">\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, {useCallback, useContext, useState} from 'react';\r\nimport MenuComponent from '../MenuComponent';\r\nimport {MenuContext} from '../../contexts/MenuContext';\r\nimport MenuSearch from '../MenuSearch';\r\nimport useEditorComponents from '../../hooks/useEditorComponents';\r\n\r\nfunction deepCopy(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nexport async function createNode(component, {data, meta, position: {x, y} = {}}) {\r\n    const node = await component.createNode(data ? deepCopy(data) : {});\r\n    if(meta) {\r\n        node.meta = Object.assign(deepCopy(meta), node.meta);\r\n    }\r\n    [node.position[0], node.position[1]] = [x, y];\r\n    return node;\r\n}\r\n\r\nfunction findRelevantComponents(input, output, components) {\r\n    if(!input && !output) {\r\n        return components;\r\n    }\r\n    let [inputType, outputType] = [input?.socket.findType?.(), output?.socket.findType?.()];\r\n    if(inputType?.data.reversed || outputType?.data.reversed) {\r\n        [inputType, outputType] = [outputType, inputType];\r\n    }\r\n    // Permissive for outputs but not inputs\r\n    return components.filter(c =>\r\n        (!inputType || c.block.outputs.some((prop) => inputType.isSubtype(prop.type))) &&\r\n        (!outputType || c.block.inputs.some((prop) => outputType.isSubtype(prop.type) || prop.type.isSubtype(outputType))));\r\n}\r\n\r\nexport default function PlacementMenu() {\r\n    let [searchText, setSearchText] = useState('');\r\n    let [index, setIndex] = useState(0);\r\n\r\n    let {editor, mouse, context} = useContext(MenuContext);\r\n\r\n    let components = useEditorComponents(editor, c => [-(c.block?.category.data.priority || 0), c.block?.category.root.name || '', c.data.title || c.name]);\r\n    if(context) {\r\n        components = findRelevantComponents(context.input, context.output, components);\r\n    }\r\n    else {\r\n        components = components.filter(c => c.block.global);\r\n    }\r\n    index = Math.min(components.length - 1, index);\r\n\r\n    if(searchText) {\r\n        let lower = searchText.toLowerCase();\r\n        components = components.filter(c => c.keywords?.some(k => k.toLowerCase().startsWith(lower)) || c.name.toLowerCase().startsWith(lower));\r\n    }\r\n\r\n    // Arrow keys pressed\r\n    function handleSearchKeyDown(event) {\r\n        if(event.keyCode === 38 /* Up Arrow */) {\r\n            setIndex(Math.max(0, index - 1));\r\n        }\r\n        if(event.keyCode === 40 /* Down Arrow */) {\r\n            setIndex(index + 1);\r\n        }\r\n    }\r\n\r\n    // Enter key pressed\r\n    async function handleSearchAction() {\r\n        if(components.length) {\r\n            await handleCreateNode(components[index]);\r\n        }\r\n    }\r\n\r\n    // Create node from component\r\n    const handleCreateNode = useCallback(async (component) => {\r\n        setSearchText('');\r\n        editor.trigger('hidecontextmenu');\r\n\r\n        const node = await createNode(component, {position: mouse});\r\n        editor.addNode(node);\r\n\r\n        if(context) {\r\n            let {input, output} = context;\r\n            if(input) {\r\n                const output = [...node.outputs.values()].find(output => input.socket.compatibleWith(output.socket));\r\n                if(output) {\r\n                    editor.connect(output, input);\r\n                }\r\n            }\r\n            if(output) {\r\n                const input = [...node.inputs.values()].find(input => input.socket.compatibleWith(output.socket));\r\n                if(input) {\r\n                    editor.connect(output, input);\r\n                }\r\n            }\r\n        }\r\n    }, [editor, mouse, context]);\r\n\r\n    // TODO: create literal blocks when typing numbers, strings, etc.\r\n    let menuItems = components.map((component, i) => (\r\n        <MenuComponent\r\n            key={component.name}\r\n            component={component}\r\n            selected={index === i}\r\n            onAction={() => handleCreateNode(component)}\r\n        />\r\n    ));\r\n    return context ? (\r\n        <MenuSearch\r\n            value={searchText}\r\n            onChange={setSearchText}\r\n            onKeyDown={handleSearchKeyDown}\r\n            onAction={handleSearchAction}>\r\n            {menuItems}\r\n        </MenuSearch>\r\n    ) : menuItems;\r\n}","import {useMemo} from 'react';\r\n\r\nexport default function useEditorComponents(editor, sortFn) {\r\n    const hash = [...editor.components].map(c => c.name).join('##');\r\n\r\n    return useMemo(() => {\r\n        return [...editor.components.values()]\r\n            .filter(c => c && 'block' in c && !c.block?.hidden && !c.block?.deprecated)// TODO: refactor?\r\n            .map(v => [sortFn(v), v])\r\n            .sort(([a], [b]) => {\r\n                if(Array.isArray(a)) {\r\n                    for(let i = 0; i < a.length; i++) {\r\n                        let compare = typeof a[i] === 'number'\r\n                            ? a[i] - b[i]\r\n                            : a[i].localeCompare(b[i]);\r\n                        if(compare !== 0) {\r\n                            return compare;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return a.localeCompare(b);\r\n                }\r\n            })\r\n            .map(([, v]) => v);\r\n    }, [hash]); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ContextMenu from './components/ContextMenu';\r\nimport {MenuContext} from './contexts/MenuContext';\r\nimport SelectionMenu from './components/menus/SelectionMenu';\r\nimport PlacementMenu from './components/menus/PlacementMenu';\r\nimport Rete from 'rete';\r\n\r\n// Adapted from https://github.com/michael-braun/rete-react-contextmenu-plugin\r\n\r\nfunction install(editor, config = {}) {\r\n    editor.bind('hidecontextmenu');\r\n    editor.bind('showcontextmenu');\r\n\r\n    let [offsetX, offsetY] = config.offset ? [config.offset.x, config.offset.y] : [-10, -10];\r\n\r\n    let menu = null;\r\n\r\n    editor.on('hidecontextmenu', () => {\r\n        if(menu) {\r\n            menu.style.display = 'none';\r\n        }\r\n    });\r\n\r\n    editor.on(['click', 'contextmenu'], () => {\r\n        editor.trigger('hidecontextmenu');\r\n    });\r\n\r\n    editor.on('contextmenu', ({e, node, context}) => {\r\n        e.preventDefault?.();\r\n        // if(e.button === 2) {\r\n        //     return;///\r\n        // }\r\n        e.stopPropagation?.();\r\n\r\n        if(!editor.trigger('showcontextmenu', {e, node, context})) {\r\n            return;\r\n        }\r\n\r\n        // Select node under cursor\r\n        if(node) {\r\n            if(!editor.selected.contains(node)) {\r\n                editor.selectNode(node);\r\n            }\r\n        }\r\n        else {\r\n            // editor.selected.clear();\r\n        }\r\n\r\n        const [x, y] = [e.clientX, e.clientY];\r\n\r\n        if(!menu) {\r\n            menu = document.createElement('div');\r\n            editor.view.container.appendChild(menu);\r\n        }\r\n        menu.style.display = 'block';\r\n        ReactDOM.render((\r\n            <ContextMenu\r\n                x={x + offsetX}\r\n                y={node ? y - 50 : y + offsetY} // TODO: magic number\r\n                handleCloseMenu={() => editor.trigger('hidecontextmenu')}>\r\n                <MenuContext.Provider value={{editor, mouse, node, context}}>\r\n                    {node ? (\r\n                        <SelectionMenu/>\r\n                    ) : (\r\n                        <PlacementMenu/>\r\n                    )}\r\n                </MenuContext.Provider>\r\n            </ContextMenu>\r\n        ), menu);\r\n    });\r\n\r\n    editor.on('destroy', () => {\r\n        editor.trigger('hidecontextmenu');\r\n        if(menu) {\r\n            menu.remove();\r\n            menu = null;\r\n        }\r\n    });\r\n\r\n    let mouse;\r\n    let mouseEvent;\r\n    let connectionMouseMoved = false;\r\n    let removingConnection = false;\r\n\r\n    editor.view.container.addEventListener('pointermove', e => mouseEvent = e);\r\n\r\n    // // Open context menu on left click\r\n    // editor.on('click', e => {\r\n    //     editor.trigger('contextmenu', {e});\r\n    // });\r\n\r\n    editor.on('mousemove', m => {\r\n        mouse = m;\r\n        connectionMouseMoved = true;\r\n    });\r\n\r\n    editor.on('connectionpick', io => {\r\n        connectionMouseMoved = false;\r\n        let prevConnections = [...io.connections];\r\n        setTimeout(() => {\r\n            if(io.connections.length < prevConnections.length) {\r\n                // Connection is being removed\r\n                removingConnection = true;\r\n            }\r\n        });\r\n    });\r\n\r\n    editor.on('connectiondrop', io => {\r\n        if(!connectionMouseMoved) {\r\n            return;\r\n        }\r\n        if(removingConnection) {\r\n            removingConnection = false;\r\n            return;\r\n        }\r\n        let prevConnections = [...io.connections];\r\n        setTimeout(() => {\r\n            // Prevent activating if connections changed\r\n            if(io.connections.length !== prevConnections.length || io.connections.some((conn, i) =>\r\n                (conn.input !== prevConnections[i].input) || (conn.output !== prevConnections[i].output))) {\r\n                return;\r\n            }\r\n            editor.trigger('contextmenu', {\r\n                e: mouseEvent,\r\n                context: {\r\n                    input: io instanceof Rete.Input ? io : null,\r\n                    output: io instanceof Rete.Output ? io : null,\r\n                },\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nconst ContextMenuPlugin = {\r\n    name: 'blocks-contextmenu',\r\n    install,\r\n};\r\nexport default ContextMenuPlugin;\r\n","import React from 'react';\r\n\r\n// List of functions to call when starting/ending a connection (event listener optimization)\r\nexport default React.createContext([]);\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {paramCase} from 'change-case';\r\nimport classNames from 'classnames';\r\nimport Rete, {Output} from 'rete';\r\nimport ConnectionAwareListContext from '../../../contexts/ConnectionAwareListContext';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\n\r\n// Derived from: https://github.com/retejs/react-render-plugin/blob/master/src/Socket.jsx\r\n\r\nexport function SocketHandle(props) {\r\n    const {type, socket, innerRef, io} = props;\r\n\r\n    const [relevant, setRelevant] = useState(false);\r\n\r\n    const connectionAwareList = useContext(ConnectionAwareListContext);\r\n\r\n    useEffect(() => {\r\n        const listener = (starting, connectionIO) => {\r\n            if(starting) {\r\n                if((io instanceof Output) === (connectionIO instanceof Output)) {\r\n                    return;\r\n                }\r\n                if(io.node && io.node === connectionIO.node) {\r\n                    return;\r\n                }\r\n                let [input, output] = (io instanceof Output) === !!socket.data.reversed\r\n                    ? [io, connectionIO] : [connectionIO, io];\r\n\r\n                let [inputType, outputType] = [input.socket.findType?.(), output.socket.findType?.()];\r\n\r\n                if(outputType && inputType?.isSubtype(outputType)) {\r\n                    setRelevant(true);\r\n                }\r\n            }\r\n            else {\r\n                setRelevant(false);\r\n            }\r\n        };\r\n        connectionAwareList.push(listener);\r\n        return () => {\r\n            let index = connectionAwareList.indexOf(listener);\r\n            if(index !== -1) {\r\n                connectionAwareList.splice(index, 1);\r\n            }\r\n        };\r\n    }, [socket, connectionAwareList, io]);\r\n\r\n    let socketType = socket.findType();\r\n    let reversed = !!socketType.data.reversed;\r\n\r\n    let multiple = io.multipleConnections && (io instanceof Rete.Input) === !reversed;\r\n\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <div\r\n            ref={el => el && innerRef(el, type, io)}\r\n            className={classNames(\r\n                'socket',\r\n                type,\r\n                paramCase(socket.name),\r\n                relevant && 'relevant',\r\n                multiple && 'multiple',\r\n                reversed && 'reversed',\r\n                !multiple && io.connections.length && 'occupied',\r\n                'category-' + socketType.data.category,\r\n            )}\r\n            // title={socket.name}\r\n            data-tip={socket.findLabel?.() || socket.name}>\r\n            <div className=\"socket-color w-100 h-100\"/>\r\n        </div>\r\n    );\r\n}","import {useContext, useState} from 'react';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../../contexts/EventsContext';\r\nimport useListener from '../../../../hooks/useListener';\r\nimport useReactTooltip from '../../../../hooks/useReactTooltip';\r\n\r\nexport default function DynamicTitle({editor, node, block, fallback}) {\r\n\r\n    const computeTitle = () => {\r\n        /// untested\r\n        if(editor.silent) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            return block.computeTitle(node, editor);\r\n        }\r\n        catch(err) {\r\n            console.error(`Unable to compute title for node: ${node.name}`);\r\n            console.error(err);\r\n            return '<Error>';\r\n        }\r\n    };\r\n\r\n    const [title, setTitle] = useState(computeTitle);\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => setTitle(computeTitle()));\r\n\r\n    const result = title || fallback || null;\r\n\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <span data-tip={result}>{result}</span>\r\n    );\r\n}","import getDefaultLabel from './getDefaultLabel';\r\n\r\nexport default function getPropLabel(prop) {\r\n    if(!prop) {\r\n        return '';\r\n    }\r\n    return prop.title || getDefaultLabel(prop.key);\r\n}","import React, {useContext} from 'react';\r\nimport {bindNodeInput} from '../../../../utils/bindNodeInput';\r\nimport getBlockLabel from '../../../../utils/getBlockLabel';\r\nimport {Button} from 'react-bootstrap';\r\nimport EventsContext, {ERROR_EVENT} from '../../../../contexts/EventsContext';\r\nimport useReactTooltip from '../../../../hooks/useReactTooltip';\r\n\r\nexport default function ShortcutButton({editor, node, shortcut}) {\r\n    const {block} = shortcut;\r\n    const {category} = block;\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    const onClick = async event => {\r\n        try {\r\n            let component = editor.components.get(block.name);\r\n            if(!component) {\r\n                events.emit(ERROR_EVENT, `Component not found: ${block.name}`);\r\n                return;\r\n            }\r\n            let data = {};\r\n            if(node && shortcut.nodeKey) {\r\n                data[shortcut.nodeKey] = node.id;\r\n            }\r\n            let newNode = await editor.createNodeAtCursor(component, data);\r\n\r\n            // Start dragging node\r\n            let nodeView = editor.view.nodes.get(newNode);\r\n            nodeView._drag.down(event);\r\n\r\n            // Add shortcut-defined connections\r\n            if(shortcut.connections) {\r\n                for(let connection of shortcut.connections) {\r\n                    let {from, to, fromOutput} = connection;\r\n\r\n                    let fromIO = fromOutput ? node.outputs.get(from) : node.inputs.get(from);\r\n                    let toIO = (fromOutput ? newNode.inputs.get(to) : newNode.outputs.get(to));\r\n                    let [output, input] = fromOutput ? [fromIO, toIO] : [toIO, fromIO];\r\n                    if(output && input) {\r\n                        editor.connect(output, input);\r\n                    }\r\n                    else {\r\n                        console.warn('Could not connect', output, 'to', input);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch(err) {\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    };\r\n\r\n    useReactTooltip([block]);\r\n\r\n    return (\r\n        <Button\r\n            ref={bindNodeInput}\r\n            className=\"node-shortcut-button px-1 pt-0 pb-1\"\r\n            data-tip={getBlockLabel(block)}\r\n            data-delay-show={100}\r\n            style={{\r\n                background: 'none',\r\n                color: category.data.color,\r\n                borderColor: category.data.color,\r\n                cursor: 'grab',\r\n                // fontSize: '1em',\r\n            }}\r\n            onMouseDown={onClick}>\r\n            {block.icon\r\n                ? React.createElement(block.icon)\r\n                : getBlockLabel(block)}\r\n        </Button>\r\n    );\r\n}","import {SocketHandle} from '../../sockets/SocketHandle';\r\nimport {Control} from 'rete-react-render-plugin';\r\nimport classNames from 'classnames';\r\nimport {paramCase} from 'change-case';\r\nimport getPropLabel from '../../../../utils/getPropLabel';\r\nimport React from 'react';\r\n\r\nexport default function PropField({prop, node, hideLeft, hideRight, bindSocket, bindControl}) {\r\n    let input = node.inputs.get(prop.key);\r\n    let output = node.outputs.get(prop.key);\r\n    let control = node.controls.get(prop.key) || (input?.showControl() && input.control);\r\n\r\n    let leftSocket = input && !hideLeft && (\r\n        <SocketHandle\r\n            type=\"input\"\r\n            socket={input.socket}\r\n            io={input}\r\n            innerRef={bindSocket}\r\n        />\r\n    );\r\n    let rightSocket = output && !hideRight && (\r\n        <SocketHandle\r\n            type=\"output\"\r\n            socket={output.socket}\r\n            io={output}\r\n            innerRef={bindSocket}\r\n        />\r\n    );\r\n    let controlField = control && (\r\n        <Control\r\n            className={input ? 'input-control' : 'control'}\r\n            control={control}\r\n            innerRef={bindControl}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className={classNames('prop', 'key-' + paramCase(prop.key))}>\r\n            <div className=\"input\">\r\n                {leftSocket}\r\n                {controlField || (leftSocket && (\r\n                    <div className=\"input-title\">{getPropLabel(prop)}</div>\r\n                ))}\r\n            </div>\r\n            <div className=\"output\">\r\n                {!input && (rightSocket && (\r\n                    <div className=\"output-title\">{getPropLabel(prop)}</div>\r\n                ))}\r\n                {rightSocket}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {Node} from 'rete-react-render-plugin';\r\nimport {SocketHandle} from '../sockets/SocketHandle';\r\nimport {getBlock} from '../../../editor/blocks';\r\nimport classNames from 'classnames';\r\nimport DynamicTitle from './parts/DynamicTitle';\r\nimport getNodeLabel from '../../../utils/getNodeLabel';\r\nimport getPropLabel from '../../../utils/getPropLabel';\r\nimport {ButtonGroup} from 'react-bootstrap';\r\nimport ShortcutButton from './parts/ShortcutButton';\r\nimport PropField from './parts/PropField';\r\n\r\nexport default class NodeHandle extends Node {\r\n    render() {\r\n        let {editor, node, bindSocket, bindControl} = this.props;\r\n        let {selected} = this.state;\r\n\r\n        let block = getBlock(node.name);\r\n        if(block.component) {\r\n            let Component = block.component;\r\n            return <Component block={block} nodeHandle={this}/>;\r\n        }\r\n\r\n        // Properties for the top left/right corners\r\n        let topLeft = block.topLeft && node.inputs.get(block.topLeft);\r\n        let topRight = block.topRight && node.outputs.get(block.topRight);\r\n\r\n        let title = getNodeLabel(node, editor, true);\r\n        if(block.computeTitle) {\r\n            title = <DynamicTitle editor={editor} node={node} block={block} fallback={title}/>;\r\n        }\r\n\r\n        let getBindControl = prop => (ref, ...args) => {\r\n            let result = bindControl(ref, ...args);\r\n            if(ref) {\r\n                // Custom hover text\r\n                ref.title = getPropLabel(prop);\r\n            }\r\n            return result;\r\n        };\r\n\r\n        let width = 32 * (node.data['editor:width'] || block.width || 6) - 3;\r\n\r\n        return (\r\n            <div style={{width}} className={classNames('node', selected, block.className)}>\r\n                <div className=\"header d-flex\">\r\n                    {topLeft && (\r\n                        <div>\r\n                            <SocketHandle\r\n                                type=\"input\"\r\n                                socket={topLeft.socket}\r\n                                io={topLeft}\r\n                                innerRef={bindSocket}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <div\r\n                        className=\"title d-inline-block flex-grow-1 text-nowrap overflow-hidden\"\r\n                        style={{color: block.category.data.color}}>\r\n                        {block.icon && (\r\n                            // TODO: globally improve react-icons render logic\r\n                            <span className=\"d-inline-block pe-1\" style={{transform: 'translateY(-.1em)'}}>\r\n                                {React.createElement(block.icon)}\r\n                            </span>\r\n                        )}\r\n                        {title}\r\n                    </div>\r\n                    {topRight && (\r\n                        <div>\r\n                            <SocketHandle\r\n                                type=\"output\"\r\n                                socket={topRight.socket}\r\n                                io={topRight}\r\n                                innerRef={bindSocket}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {block.shortcuts.length > 0 && (\r\n                    <ButtonGroup className=\"px-4 py-1 w-100\" style={{background: '#0002'}}>\r\n                        {block.shortcuts.map((shortcut, i) => (\r\n                            <ShortcutButton key={i} editor={editor} node={node} shortcut={shortcut}/>\r\n                        ))}\r\n                    </ButtonGroup>\r\n                )}\r\n                {Object.values(block.props)\r\n                    .filter(prop => !prop.hidden && (prop.control || ((!topLeft || prop.key !== block.topLeft) && (!topRight || prop.key !== block.topRight))))\r\n                    .map(prop => (\r\n                        <PropField\r\n                            key={prop.key}\r\n                            prop={prop}\r\n                            node={node}\r\n                            hideLeft={prop.key === block.topLeft}\r\n                            hideRight={prop.key === block.topRight}\r\n                            bindSocket={bindSocket}\r\n                            bindControl={getBindControl(prop)}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as Rete from 'rete';\r\nimport TextControlHandle from '../../components/rete/controls/TextControlHandle';\r\nimport EventEmitter from 'events';\r\nimport {bindNodeInput} from '../../utils/bindNodeInput';\r\n\r\nexport default class BaseControl extends Rete.Control {\r\n    constructor(editor, key, name, config = {}) {\r\n        super(key);\r\n\r\n        this.name = name;\r\n        this.config = config;\r\n        this.editor = editor;\r\n        this.render = 'react';\r\n        this.component = config.controlType || TextControlHandle;\r\n        this.props = {\r\n            ...config.controlProps,\r\n            validation: config.validation || {},\r\n            control: this,\r\n            editor,\r\n            bindInput: bindNodeInput,\r\n        };\r\n\r\n        this.events = new EventEmitter();\r\n    }\r\n\r\n    validate(value) {\r\n        if(value === undefined && !this.config.optional) {\r\n            return false;\r\n        }\r\n        if(value !== null && value !== undefined) {\r\n            let validation = this.config.validation;\r\n            if(validation) {\r\n                if('custom' in validation && !validation.custom(value)) {\r\n                    return false;\r\n                }\r\n                if('minLength' in validation && value.length < validation.minLength) {\r\n                    return false;\r\n                }\r\n                if('maxLength' in validation && value.length > validation.maxLength) {\r\n                    return false;\r\n                }\r\n                if('min' in validation && value < validation.min) {\r\n                    return false;\r\n                }\r\n                if('max' in validation && value > validation.max) {\r\n                    return false;\r\n                }\r\n                if('step' in validation && value - (validation.min || 0) % validation.step !== 0) {\r\n                    return false;\r\n                }\r\n                if('pattern' in validation && !validation.pattern.test(value)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getDefaultValue() {\r\n        // return this.config.defaultValue;\r\n    }\r\n\r\n    getValue() {\r\n        let value = this.getData(this.key);\r\n        return value === undefined ? this.getDefaultValue() : value;\r\n    }\r\n\r\n    setValue(value) {\r\n        this.putData(this.key, value);\r\n        this.events.emit('update', value);\r\n    }\r\n}\r\n","import BaseControl from './BaseControl';\r\n\r\nexport default class PropControl extends BaseControl {\r\n    constructor(editor, prop, name) {\r\n        super(editor, prop.key, name, {\r\n            ...prop.type?.data || {},\r\n            ...prop.config || {},\r\n            prop,\r\n            type: prop.type,\r\n            optional: prop.optional,\r\n        });\r\n    }\r\n\r\n    getDefaultValue() {\r\n        // let value = super.getDefaultValue();\r\n        // return value !== undefined ? value : this.config.type?.getDefaultValue();\r\n\r\n        return this.config.type?.getDefaultValue();\r\n    }\r\n\r\n    // Called every EDITOR_CHANGE_EVENT when control is visible\r\n    notifyEditorChange() {\r\n        // this.config.prop.onUpdateControl?.(this, this.getNode(), this.editor);\r\n    }\r\n}","import Rete from 'rete';\r\n\r\nexport default class BaseComponent extends Rete.Component {\r\n\r\n    getEditorNode(node) {\r\n        return this.editor.nodes.find(n => n.id === node.id);\r\n    }\r\n\r\n    getControls(node) {\r\n        return this.getEditorNode(node).controls;\r\n    }\r\n}","import Rete from 'rete';\r\nimport {getType} from '../../block-types/types';\r\n\r\nexport default class TypeSocket extends Rete.Socket {\r\n    constructor(title, type) {\r\n        type = getType(type);\r\n        super(title, {...type.data, type});\r\n    }\r\n\r\n    findLabel() {\r\n        let type = this.findType();\r\n        // let typeString = type.toTypeString();\r\n        // return this.name === typeString ? this.name : `${this.name} (${typeString})`;\r\n        return type.toTypeString();\r\n    }\r\n\r\n    findType() {\r\n        return this.data.type;\r\n    }\r\n\r\n    compatibleWith(other) {\r\n        if(!('findType' in other)) {\r\n            return false;\r\n        }\r\n        let type = this.findType();\r\n        let otherType = other.findType();\r\n\r\n        return type.isSubtype(otherType) || otherType.isSubtype(type);\r\n    }\r\n}","import TypeSocket from './TypeSocket';\r\nimport {typeType} from '../../block-types/types';\r\n\r\nexport default class PropOutputSocket extends TypeSocket {\r\n    constructor(node, title, prop, typeCompiler) {\r\n        super(title, prop.type);\r\n\r\n        this.nodeId = node.id;\r\n        this.nodeName = node.name;\r\n        this.prop = prop;\r\n        this.typeCompiler = typeCompiler;\r\n\r\n        this._isTypeOfType = typeType.isSubtype(this.prop.type);\r\n    }\r\n\r\n    findType() {\r\n        if(this.typeCompiler.editor.silent) {\r\n            return super.findType();\r\n        }\r\n\r\n        try {\r\n            let type = this.typeCompiler.getOutput(this.nodeId, this.prop.key);\r\n            if(type) {\r\n                if(this._isTypeOfType) {\r\n                    if(typeType.isSubtype(type)) {\r\n                        console.warn('Type of Type of Type (Intentional?)');\r\n                    }\r\n                    type = typeType.of(type);\r\n                }\r\n                return type || super.findType();\r\n            }\r\n        }\r\n        catch(err) {\r\n            console.warn(`Error on socket [${this.nodeName}.${this.prop.key}]:`, err);///\r\n        }\r\n        return super.findType();\r\n    }\r\n\r\n    // compatibleWith(other) {\r\n    //     if(!('findType' in other)) {\r\n    //         return;\r\n    //     }\r\n    //     let reversed = !!this.data.reversed;\r\n    //     if(reversed === !other.data.reversed) {\r\n    //         return false;\r\n    //     }\r\n    //     let self = this;\r\n    //     if(!reversed) {\r\n    //         [self, other] = [other, self];\r\n    //     }\r\n    //     let selfType = self.findType();\r\n    //     let otherType = other.findType();\r\n    //\r\n    //     console.log(selfType, otherType);\r\n    //\r\n    //     return selfType && selfType.isSubtype(otherType);\r\n    // }\r\n}","import Rete from 'rete';\r\nimport PropControl from '../controls/PropControl';\r\nimport BaseComponent from './BaseComponent';\r\nimport TypeSocket from '../sockets/TypeSocket';\r\nimport PropOutputSocket from '../sockets/PropOutputSocket';\r\nimport {sentenceCase} from 'change-case';\r\nimport getPropLabel from '../../utils/getPropLabel';\r\n\r\nexport default class BlockComponent extends BaseComponent {\r\n\r\n    constructor(block) {\r\n        super(block.name);\r\n\r\n        this.block = block;\r\n        this.keywords = [\r\n            ...sentenceCase(block.name).toLowerCase().split(' ').filter(s => s),\r\n            ...block.title?.split(' ').filter(s => s) || [],\r\n            ...block.keywords || [],\r\n        ];\r\n    }\r\n\r\n    async builder(node) {\r\n\r\n        const addProp = (prop, isPropOutput) => {\r\n            let title = getPropLabel(prop);\r\n            let socket = isPropOutput ? new PropOutputSocket(node, title, prop, this.editor.compilers.type) : new TypeSocket(title, prop.type);\r\n            if(!!prop.type.data.reversed === isPropOutput) {\r\n                return addPropInput(prop, socket, isPropOutput);\r\n            }\r\n            else {\r\n                return addPropOutput(prop, socket, isPropOutput);\r\n            }\r\n        };\r\n\r\n        const addPropInput = (prop, socket, isOutput) => {\r\n            let title = getPropLabel(prop);\r\n            let input = new Rete.Input(prop.key, title, socket, prop.type.data.reversed || !!prop.multi);\r\n            if(shouldPropHaveControl(prop, socket, isOutput)) {\r\n                input.addControl(new PropControl(this.editor, prop, title));\r\n            }\r\n            node.addInput(input);\r\n            return input;\r\n        };\r\n\r\n        const addPropOutput = (prop, socket, isOutput) => {\r\n            let title = getPropLabel(prop);\r\n            let output = new Rete.Output(prop.key, title, socket, !prop.type.data.reversed || !!prop.multi);\r\n            node.addOutput(output);\r\n            if(shouldPropHaveControl(prop, socket, isOutput)) {\r\n                node.addControl(new PropControl(this.editor, prop, title));\r\n            }\r\n            return output;\r\n        };\r\n\r\n        const shouldPropHaveControl = (prop, socket, isOutput) => {\r\n            return prop.control || (!!socket.data.reversed === isOutput && socket.data.controlType && !prop.multi);\r\n        };\r\n\r\n        delete node.meta.title;\r\n        // if(this.block.title) {\r\n        //     node.meta.title = this.block.title;\r\n        // }\r\n        // else {\r\n        //     delete node.meta.title;\r\n        // }\r\n\r\n        for(let prop of this.block.inputs) {\r\n            addProp(prop, false);\r\n        }\r\n        for(let prop of this.block.outputs) {\r\n            addProp(prop, true);\r\n        }\r\n\r\n        for(let prop of this.block.controls) {\r\n            let title = getPropLabel(prop);\r\n            node.addControl(new PropControl(this.editor, prop, title));\r\n        }\r\n\r\n        // this.block.builder?.apply(this, arguments);\r\n    }\r\n\r\n    // async worker(node, inputs, outputs, ...args) {\r\n    //     await this.block.worker?.apply(this, arguments);\r\n    // }\r\n}","import Compiler from './Compiler';\r\n\r\nexport default class NodeCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'toEditorNode');\r\n    }\r\n\r\n    defaultCompile(prop, node) {\r\n        return node;\r\n    }\r\n\r\n    postCompile(result, node, key) {\r\n        if(!result) {\r\n            return;\r\n        }\r\n        let id;\r\n        if(typeof result === 'object') {\r\n            id = result.id;\r\n            if(!id) {\r\n                throw new Error(`Invalid node object with keys: {${Object.keys(result).join(', ')}}`);\r\n            }\r\n        }\r\n        else {\r\n            id = result;\r\n        }\r\n        // Convert node id to string in case of number/string mismatch\r\n        id = String(id);\r\n        return this.editor.nodes.find(n => String(n.id) === id);\r\n    }\r\n}","import Compiler from './Compiler';\r\nimport {getType} from '../block-types/types';\r\n\r\nexport default class TypeCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'inferType');\r\n    }\r\n\r\n    defaultCompile(prop, node) {\r\n        return getType(prop.type);\r\n    }\r\n\r\n    postCompile(type, node, key) {\r\n        if(type === undefined) {\r\n            return;\r\n        }\r\n        type = getType(type);\r\n        if(type.isAbstract()) {\r\n            console.warn(`[${node.name}.${key}]`, 'Abstract inferred type:', type.toTypeString());\r\n            return;\r\n        }\r\n        return type;\r\n    }\r\n}","import Compiler from './Compiler';\r\n\r\nexport default class ControlCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'toControl');\r\n    }\r\n\r\n    defaultCompile(prop, node) {\r\n    }\r\n\r\n    postCompile(result, node, key) {\r\n        return result;\r\n    }\r\n}","import Rete from 'rete';\r\nimport MotokoCompiler from '../compilers/MotokoCompiler';\r\nimport NodeCompiler from '../compilers/NodeCompiler';\r\nimport TypeCompiler from '../compilers/TypeCompiler';\r\nimport ControlCompiler from '../compilers/ControlCompiler';\r\n\r\nexport default class BlocksNodeEditor extends Rete.NodeEditor {\r\n    constructor(...args) {\r\n        super(...args);\r\n\r\n        this.projectName = '';\r\n        this.projectDescription = '';\r\n        this.compilers = {\r\n            control: new ControlCompiler(this),\r\n            node: new NodeCompiler(this),\r\n            type: new TypeCompiler(this),\r\n            motoko: new MotokoCompiler(this),\r\n        };\r\n    }\r\n\r\n    // noinspection JSCheckFunctionSignatures\r\n    toJSON() {\r\n        let json = {\r\n            name: this.projectName,\r\n            description: this.projectDescription,\r\n            version: this.id,\r\n            ...super.toJSON(),\r\n        };\r\n        delete json.id;\r\n        // noinspection JSValidateTypes\r\n        return json;\r\n    }\r\n\r\n    async fromJSON(json) {\r\n        // noinspection JSUnresolvedVariable\r\n        json = {id: json.version, ...json};\r\n\r\n        if(!this.beforeImport(json)) {\r\n            return false;\r\n        }\r\n        // TODO: refactor serialization\r\n        this.projectName = json.name || '';\r\n        this.projectDescription = json.description || '';\r\n\r\n        let hadError = false;\r\n        try {\r\n            const nodes = {};\r\n            await Promise.all(Object.entries(json.nodes).map(async ([id, jsonNode]) => {\r\n                try {\r\n                    const component = this.getComponent(jsonNode.name);\r\n                    const node = await component.build(Rete.Node.fromJSON(jsonNode));\r\n                    nodes[id] = node;\r\n                    this.addNode(node);\r\n                }\r\n                catch(e) {\r\n                    hadError = true;\r\n                    return this.trigger('error', e);\r\n                }\r\n            }));\r\n\r\n            Object.entries(json.nodes).forEach(([id, jsonNode]) => {\r\n                const node = nodes[id];\r\n\r\n                Object.entries(jsonNode.outputs).forEach(([key, jsonOutput]) => {\r\n\r\n                    jsonOutput.connections.forEach(jsonConnection => {\r\n                        const nodeId = jsonConnection.node;\r\n                        const data = jsonConnection.data;\r\n                        const targetOutput = node.outputs.get(key);\r\n                        const otherNode = nodes[nodeId];\r\n                        if(!otherNode) {\r\n                            hadError = true;\r\n                            return this.trigger('error', `Tried to connect to unknown node ${node.id}`);\r\n                        }\r\n                        const targetInput = otherNode.inputs.get(jsonConnection.input);\r\n\r\n                        if(!targetOutput || !targetInput) {\r\n                            hadError = true;\r\n                            return this.trigger('error', `IO not found for node ${node.id}`);\r\n                        }\r\n\r\n                        this.connect(targetOutput, targetInput, data);\r\n                    });\r\n                });\r\n\r\n            });\r\n        }\r\n        catch(e) {\r\n            this.trigger('warn', e);\r\n            hadError = true;\r\n        }\r\n        return this.afterImport() && !hadError;\r\n    }\r\n\r\n    async createNode(component, data = {}, position = null) {\r\n        let node = await component.createNode(data);\r\n        if(position) {\r\n            let {x, y} = position;\r\n            [node.position[0], node.position[1]] = [x, y];\r\n        }\r\n        this.addNode(node);\r\n        return node;\r\n    }\r\n\r\n    async createNodeAtCursor(component, data = {}) {\r\n        let {x, y} = this.view.area.mouse;\r\n        return this.createNode(component, data, {x: x - 80, y: y - 20});\r\n    }\r\n\r\n    connect(output, input, data) {\r\n        if(output.node && output.node === input.node) {\r\n            return;\r\n        }\r\n        super.connect(output, input, data);\r\n    }\r\n}\r\n","import Rete from 'rete';\r\n\r\nfunction sortConnections(io) {\r\n    let key = io instanceof Rete.Input ? 'output' : 'input';\r\n    io.connections.sort((a, b) => a[key].node.position[1] - b[key].node.position[1]);\r\n}\r\n\r\nfunction install(editor, config = {}) {\r\n    editor.on('connectioncreated', connection => {\r\n        sortConnections(connection.input);\r\n        sortConnections(connection.output);\r\n    });\r\n    editor.on('nodedragged', (node) => {\r\n        for(let [ioMap, key] of [[node.inputs, 'output'], [node.outputs, 'input']]) {\r\n            for(let io of ioMap.values()) {\r\n                for(let connection of io.connections) {\r\n                    sortConnections(connection[key]);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nconst VerticalSortPlugin = {\r\n    name: 'vertical-sort',\r\n    install,\r\n};\r\nexport default VerticalSortPlugin;","function install(editor, config = {}) {\r\n\r\n    // let currentIO = null;\r\n    //\r\n    // editor.on('connectionpick', (io) => {\r\n    //     currentIO = io;\r\n    // });\r\n    // editor.on('connectiondrop', (io) => {\r\n    //     currentIO = null;\r\n    // });\r\n\r\n    const onKeyDown = (event) => {\r\n        if(event.code === 'Escape') {\r\n            // TODO: implement drop connection without context menu\r\n\r\n            // if(currentIO) {\r\n            //     editor.trigger('connectiondrop', currentIO);\r\n            // }\r\n            // setTimeout(() => editor.trigger('hidecontextmenu'));\r\n        }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    editor.on('destroy', () => document.removeEventListener('keydown', onKeyDown));\r\n}\r\n\r\nconst ConnectionDropPlugin = {\r\n    name: 'connection-drop',\r\n    install,\r\n};\r\nexport default ConnectionDropPlugin;","function install(editor, config = {}) {\r\n\r\n    const {minDistance = 500, opacityFalloff = 200} = config;\r\n\r\n    // Fade out distant connections\r\n    editor.on(['renderconnection', 'updateconnection', 'zoom'], () => {\r\n        setTimeout(() => {\r\n            for(let pathElement of editor.view.container.querySelectorAll('.connection .main-path')) {\r\n                let bounds = pathElement.getBoundingClientRect();\r\n                let distance = bounds.width;\r\n                pathElement.style.opacity = 1 / (1 + Math.sqrt(Math.max(distance - minDistance, 0) / opacityFalloff));\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nconst ConnectionOpacityPlugin = {\r\n    name: 'connection-opacity',\r\n    install,\r\n};\r\nexport default ConnectionOpacityPlugin;","\r\nfunction install(editor, config = {}) {\r\n\r\n    // TODO: implement properly\r\n\r\n    // if(config.editorButton !== undefined) {\r\n    //     let drag = editor.view.area._drag;\r\n    //     drag.button = config.editorButton;\r\n    // }\r\n}\r\n\r\nconst DragButtonPlugin = {\r\n    name: 'drag-button',\r\n    install,\r\n};\r\nexport default DragButtonPlugin;","var _linearGradient;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGradient(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _linearGradient || (_linearGradient = /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"svg-block-gradient\",\n    width: 0,\n    height: 0,\n    x2: 1,\n    y2: 1\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: \"#00EFFB\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"50%\",\n    stopColor: \"#8649E1\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"#F900E3\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGradient);\nexport default __webpack_public_path__ + \"static/media/gradient.04de6742.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport classNames from 'classnames';\r\nimport {IconContext} from 'react-icons';\r\nimport {ReactComponent as Gradient} from '../../../assets/icons/gradient.svg';\r\n\r\nlet MenuContainer = styled.div`\r\n    \r\n`;\r\n\r\nlet StyledGradient = styled(Gradient)`\r\n  height: 0;\r\n  width: 0;\r\n`;\r\n\r\nexport default function TopMenu({className, children, ...others}) {\r\n    return (\r\n        <MenuContainer className={classNames('bg-light text-secondary d-flex py-2 justify-content-start align-items-center', className)} {...others}>\r\n            <StyledGradient/>\r\n            <IconContext.Provider value={{style: {verticalAlign: 'bottom', transform: 'translateY(-1px)'}}}>\r\n                {children}\r\n            </IconContext.Provider>\r\n        </MenuContainer>\r\n    );\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport styled from 'styled-components';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\n\r\nlet ItemContainer = styled.div`\r\n\r\n`;\r\n\r\nexport default function MenuItem({variant, tooltip, className, ...others}) {\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <ItemContainer\r\n            className={classNames('noselect h3 mx-3 px-3 pt-2 pb-2 mb-0 d-inline-block text-center', variant && `text-${variant}`, className)}\r\n            data-tip={tooltip}\r\n            // data-delay-show={200}\r\n            {...others}>\r\n        </ItemContainer>\r\n    );\r\n}","import React from 'react';\r\nimport MenuItem from './MenuItem';\r\nimport styled from 'styled-components';\r\n\r\nlet StyledMenuItem = styled(MenuItem)`\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n\r\n    :hover {\r\n        background: #F0F0F0;\r\n    }\r\n\r\n    :hover > svg {\r\n        fill: url(\"#svg-block-gradient\");\r\n    }\r\n`;\r\n\r\nconst StyledIcon = styled.svg`\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n`;\r\n\r\nexport default function MenuButton({children, ...others}) {\r\n    return (\r\n        <StyledMenuItem {...others}>\r\n            <StyledIcon aria-hidden=\"true\" focusable=\"false\"/>\r\n            {children}\r\n        </StyledMenuItem>\r\n    );\r\n}","import React, {useCallback} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport classNames from 'classnames';\r\n\r\nexport default function FileDropZone({options, onFile, onFileContent, className, children, ...others}) {\r\n\r\n    const onDrop = useCallback(files => {\r\n        if(files.length) {\r\n            const file = files[0];\r\n            onFile?.(file);\r\n            if(onFileContent) {\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    onFileContent(e.target.result);\r\n                };\r\n                reader.readAsText(file);\r\n            }\r\n        }\r\n    }, [onFile, onFileContent]);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\r\n        maxFiles: 1,\r\n        onDrop,\r\n        ...options,\r\n    });\r\n\r\n    return (\r\n        <div className={classNames(className, isDragActive && 'dragging')} {...{...others, ...getRootProps()}}>\r\n            <input {...getInputProps()}/>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React, {useContext} from 'react';\r\nimport EventsContext, {PROJECT_LOAD_EVENT} from '../../contexts/EventsContext';\r\nimport styled from 'styled-components';\r\nimport classNames from 'classnames';\r\nimport {getExampleProjects} from '../../examples/examples';\r\nimport FileDropZone from '../common/FileDropZone';\r\n\r\nconst MenuContainer = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst LoadProjectItemContainer = styled.div`\r\n    :hover {\r\n        background: #0001;\r\n    }\r\n`;\r\n\r\nconst StyledFileDropZone = styled(FileDropZone)`\r\n    padding: 2em;\r\n    border: 2px #0005 dashed;\r\n\r\n    &.dragging, &:hover {\r\n        background: #0002;\r\n    }\r\n`;\r\n\r\nexport default function LoadProjectMenu({onLoadFileContent, className, ...others}) {\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    const examples = getExampleProjects();\r\n\r\n    return (\r\n        <MenuContainer className={classNames('bg-light', className)} {...others}>\r\n            <StyledFileDropZone\r\n                className={classNames('clickable text-center text-muted rounded-3')}\r\n                onFileContent={onLoadFileContent}>\r\n                <h5>Import a .blocks file . . .</h5>\r\n            </StyledFileDropZone>\r\n            {examples.map((example, i) => (\r\n                <LoadProjectItemContainer\r\n                    key={i}\r\n                    className=\"clickable mt-2 px-3 py-2\"\r\n                    onClick={() => events.emit(PROJECT_LOAD_EVENT, example)}>\r\n                    <h4 className=\"fw-normal\">{example.name}</h4>\r\n                    <div className=\"text-muted\">{example.description || '(No description provided)'}</div>\r\n                </LoadProjectItemContainer>\r\n            ))}\r\n        </MenuContainer>\r\n    );\r\n}","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDownload(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20,15L20,19C20,19.549 19.549,20 19,20C19,20 5,20 5,20C4.451,20 4,19.549 4,19C4,19 4,15 4,15C4,14.448 3.552,14 3,14C2.448,14 2,14.448 2,15L2,19C2,20.646 3.354,22 5,22L19,22C20.646,22 22,20.646 22,19L22,15C22,14.448 21.552,14 21,14C20.448,14 20,14.448 20,15Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11,12.586L7.707,9.293C7.317,8.903 6.683,8.903 6.293,9.293C5.903,9.683 5.903,10.317 6.293,10.707L11.293,15.707C11.413,15.827 11.556,15.91 11.708,15.957L11.711,15.958C11.795,15.983 11.884,15.998 11.976,16L12,16L12.024,16C12.116,15.998 12.205,15.983 12.289,15.958L12.292,15.957C12.444,15.91 12.587,15.827 12.707,15.707L17.707,10.707C18.097,10.317 18.097,9.683 17.707,9.293C17.317,8.903 16.683,8.903 16.293,9.293L13,12.586L13,3C13,2.448 12.552,2 12,2C11.448,2 11,2.448 11,3L11,12.586Z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDownload);\nexport default __webpack_public_path__ + \"static/media/download.9a79f24e.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFilePlus(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21,8L21,7.988C20.998,7.807 20.947,7.637 20.861,7.492C20.819,7.42 20.767,7.353 20.707,7.293L14.707,1.293C14.647,1.233 14.58,1.181 14.508,1.139C14.362,1.053 14.193,1.002 14.012,1L14,1L6,1C4.354,1 3,2.354 3,4L3,20C3,21.646 4.354,23 6,23L18,23C19.646,23 21,21.646 21,20L21,8ZM13,3L6,3C5.451,3 5,3.451 5,4C5,4 5,20 5,20C5,20.549 5.451,21 6,21C6,21 18,21 18,21C18.549,21 19,20.549 19,20L19,9L14,9C13.448,9 13,8.552 13,8L13,3ZM11,14L9,14C8.448,14 8,14.448 8,15C8,15.552 8.448,16 9,16L11,16L11,18C11,18.552 11.448,19 12,19C12.552,19 13,18.552 13,18L13,16L15,16C15.552,16 16,15.552 16,15C16,14.448 15.552,14 15,14L13,14L13,12C13,11.448 12.552,11 12,11C11.448,11 11,11.448 11,12L11,14ZM15,7L17.586,7L15,4.414L15,7Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilePlus);\nexport default __webpack_public_path__ + \"static/media/file-plus.c3f75220.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFolder(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23,19L23,8C23,6.354 21.646,5 20,5L11.535,5C11.535,5 9.832,2.445 9.832,2.445C9.647,2.167 9.334,2 9,2L4,2C2.354,2 1,3.354 1,5L1,19C1,20.646 2.354,22 4,22L20,22C21.646,22 23,20.646 23,19ZM21,19C21,19.549 20.549,20 20,20C20,20 4,20 4,20C3.451,20 3,19.549 3,19L3,5C3,4.451 3.451,4 4,4C4,4 8.465,4 8.465,4C8.465,4 10.168,6.555 10.168,6.555C10.353,6.833 10.666,7 11,7L20,7C20.549,7 21,7.451 21,8C21,8 21,19 21,19Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolder);\nexport default __webpack_public_path__ + \"static/media/folder.fe3b16f3.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFolderWide(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 30 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Artboard1\",\n    transform: \"matrix(1.25,0,0,1,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 24,\n    height: 24,\n    style: {\n      fill: \"none\"\n    }\n  }), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(0.8,0,0,1,2.4,0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23,19L23,8C23,6.354 21.646,5 20,5L11.535,5C11.535,5 9.832,2.445 9.832,2.445C9.647,2.167 9.334,2 9,2L4,2C2.354,2 1,3.354 1,5C1,5 1,19 1,19C1,20.646 2.354,22 4,22L20,22C21.646,22 23,20.646 23,19ZM21,19C21,19.549 20.549,20 20,20C20,20 4,20 4,20C3.451,20 3,19.549 3,19L3,5C3,4.451 3.451,4 4,4C4,4 8.465,4 8.465,4C8.465,4 10.168,6.555 10.168,6.555C10.353,6.833 10.666,7 11,7L20,7C20.549,7 21,7.451 21,8L21,19Z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolderWide);\nexport default __webpack_public_path__ + \"static/media/folder-wide.231dfb87.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFolderOpen(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 30 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Artboard1\",\n    transform: \"matrix(1.25,0,0,1,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 24,\n    height: 24,\n    style: {\n      fill: \"none\"\n    }\n  }), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(0.8,0,0,1,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.8,21.747C5.825,21.769 5.851,21.789 5.878,21.809C6.059,21.941 6.27,22.003 6.479,22L6.527,21.998C6.572,21.995 6.617,21.99 6.661,21.981C6.772,21.993 6.885,22 7,22L23,22C23.32,22 23.621,21.847 23.809,21.588L29.597,13.621C29.818,13.317 29.85,12.914 29.679,12.579C29.509,12.244 29.164,12.033 28.788,12.033L25.939,12.033L26,8C26,6.354 24.646,5 23,5L14.535,5C14.535,5 12.832,2.445 12.832,2.445C12.647,2.167 12.334,2 12,2L7,2C5.354,2 4,3.354 4,5C4,5 4,19 4,19C4,20.22 4.745,21.28 5.8,21.747ZM8.428,20L12.763,14.033L26.826,14.033C26.826,14.033 22.49,20 22.49,20L8.428,20ZM23.939,12.033C23.961,10.57 24,7.993 24,7.987C23.993,7.444 23.544,7 23,7L14,7C13.666,7 13.353,6.833 13.168,6.555C13.168,6.555 11.465,4 11.465,4C11.465,4 7,4 7,4C6.451,4 6,4.451 6,5L6,19C6,19.238 6.085,19.457 6.225,19.629L11.445,12.445L11.445,12.445C11.627,12.196 11.922,12.033 12.254,12.033L23.939,12.033Z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolderOpen);\nexport default __webpack_public_path__ + \"static/media/folder-open.81301dea.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSave(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19,22C20.646,22 22,20.646 22,19L22,8C22,7.735 21.895,7.48 21.707,7.293L16.707,2.293C16.52,2.105 16.265,2 16,2L5,2C3.354,2 2,3.354 2,5L2,19C2,20.646 3.354,22 5,22L19,22ZM8,4L8,7L15,7C15.552,7 16,7.448 16,8C16,8.552 15.552,9 15,9L7,9C6.448,9 6,8.552 6,8L6,4L5,4C4.451,4 4,4.451 4,5C4,5 4,19 4,19C4,19.549 4.451,20 5,20L6,20L6,13C6,12.448 6.448,12 7,12L17,12C17.552,12 18,12.448 18,13L18,20L19,20C19.549,20 20,19.549 20,19C20,19 20,8.414 20,8.414C20,8.414 15.586,4 15.586,4L8,4ZM8,20L16,20L16,14C16,14 8,14 8,14L8,20Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSave);\nexport default __webpack_public_path__ + \"static/media/save.5b65bc79.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport {ReactComponent as Download} from '../../assets/icons/download.svg';\r\nimport {ReactComponent as FilePlus} from '../../assets/icons/file-plus.svg';\r\nimport {ReactComponent as Folder} from '../../assets/icons/folder.svg';\r\nimport {ReactComponent as FolderWide} from '../../assets/icons/folder-wide.svg';\r\nimport {ReactComponent as FolderOpen} from '../../assets/icons/folder-open.svg';\r\nimport {ReactComponent as Save} from '../../assets/icons/save.svg';\r\n// import {ReactComponent as Zoom} from '../../assets/icons/zoom.svg';\r\n\r\n// Convention here is `CONSTANT_CASE` for exported constants and `camelCase` otherwise.\r\n// This makes it easier to quickly know what values are globally accessible, since almost everything is a constant anyway.\r\n\r\nconst defaultIconSize = 24;\r\nconst defaultFill = 'rgb(108, 117, 125)';\r\n\r\nconst createIcon = (SvgComponent, widthRatio = 1) => ({fill, size, ...others}) => {\r\n    return (\r\n        <SvgComponent\r\n            fill={fill || defaultFill}\r\n            width={(size || defaultIconSize) * widthRatio}\r\n            height={size || defaultIconSize}\r\n            {...others}\r\n        />\r\n    );\r\n};\r\n\r\nexport const DownloadIcon = createIcon(Download);\r\nexport const FilePlusIcon = createIcon(FilePlus);\r\nexport const FolderIcon = createIcon(Folder);\r\nexport const FolderWideIcon = createIcon(FolderWide, 30 / 24); // TODO: we can probably automate this\r\nexport const FolderOpenIcon = createIcon(FolderOpen, 30 / 24);\r\nexport const SaveIcon = createIcon(Save);\r\n// export const ZoomIcon = createIcon(Zoom);///\r\n","import makeObservable from '../utils/makeObservable';\r\nimport useObservableState from './useObservableState';\r\n\r\n// TODO: eventually switch to global store such as Redux\r\nconst learningModeStore = makeObservable(false);\r\n\r\nexport default function useLearningModeState() {\r\n    return useObservableState(learningModeStore);\r\n}\r\n","// Lightweight observable value implementation\r\n// Derived from: https://stackoverflow.com/a/62002044\r\n\r\nclass ObservableValue {\r\n    constructor(value) {\r\n        this._value = value;\r\n        this._listeners = [];\r\n    }\r\n\r\n    get() {\r\n        return this._value;\r\n    }\r\n\r\n    set(newValue) {\r\n        if(this._value === newValue) {\r\n            return;\r\n        }\r\n        this._value = newValue;\r\n        this._listeners.forEach(fn => fn(this._value));\r\n    }\r\n\r\n    subscribe(listenerFn) {\r\n        this._listeners.push(listenerFn);\r\n        return () => this.unsubscribe(listenerFn);\r\n    }\r\n\r\n    unsubscribe(listenerFn) {\r\n        this._listeners = this._listeners.filter(fn => fn !== listenerFn);\r\n    }\r\n}\r\n\r\nexport default function makeObservable(target) {\r\n    return new ObservableValue(target);\r\n}","import {useEffect, useState} from 'react';\r\n\r\nexport default function useObservableState(observable) {\r\n    const [value, setValue] = useState(observable.get());\r\n\r\n    useEffect(() => observable.subscribe(setValue), [observable]);\r\n\r\n    return [\r\n        value,\r\n        (value) => observable.set(value),\r\n    ];\r\n}\r\n","import TopMenu from '../common/menus/TopMenu';\r\nimport MenuButton from '../common/menus/MenuButton';\r\nimport React, {useContext, useState} from 'react';\r\nimport MenuItem from '../common/menus/MenuItem';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport classNames from 'classnames';\r\nimport EventsContext, {\r\n    EDITOR_CHANGE_EVENT,\r\n    EDITOR_SAVE_EVENT,\r\n    PROJECT_CLEAR_EVENT,\r\n    PROJECT_EXPORT_EVENT,\r\n    PROJECT_LOAD_EVENT,\r\n} from '../../contexts/EventsContext';\r\nimport useListener from '../../hooks/useListener';\r\nimport LoadProjectMenu from './LoadProjectMenu';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {DownloadIcon, FilePlusIcon, FolderOpenIcon, FolderWideIcon, SaveIcon} from '../common/Icon';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport AreaPlugin from 'rete-area-plugin';\r\nimport {FaQuestionCircle} from 'react-icons/fa';\r\nimport {FiCrosshair} from 'react-icons/fi';\r\nimport useLearningModeState from '../../hooks/useLearningModeState';\r\n\r\nconst ProjectNameInput = styled.input`\r\n    border: 2px solid transparent !important;\r\n    border-bottom: solid 2px #0003 !important;\r\n    font-weight: bold;\r\n    vertical-align: top;\r\n    margin-top: .4em;\r\n    padding: .25em .25em .1em;\r\n    position: relative;\r\n    background-clip: padding-box;\r\n\r\n    &::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        background: linear-gradient(30deg, #00EFFB, #8649E1, #F900E3);\r\n        margin: -2px;\r\n        z-index: -1;\r\n        opacity: 0;\r\n    }\r\n\r\n    :focus {\r\n        outline: none;\r\n\r\n        &::before {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\n// TODO: define animated icons in their own files\r\nconst saveAnimation = keyframes`\r\n    30% {\r\n        transform: scale(.6);\r\n    }\r\n`;\r\nconst StyledSaveIcon = styled(SaveIcon)`\r\n    &.animating {\r\n        animation: ${saveAnimation} .7s ease-out;\r\n    }\r\n`;\r\n\r\nconst zoomAnimation = keyframes`\r\n    from {\r\n        transform: rotate(0);\r\n    }\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledZoomIcon = styled(FiCrosshair)` // TODO: stroke gradient like the others\r\n    &.animating {\r\n        animation: ${zoomAnimation} .7s ease-out;\r\n    }\r\n`;\r\n\r\nconst StyledLearningIcon = styled(FaQuestionCircle)` // TODO: proper design\r\n    transition: .2s transform ease-out;\r\n\r\n    &.enabled {\r\n        color: #333;\r\n        transform: scale(1.2) !important;\r\n    }\r\n`;\r\n\r\nexport default function EditorMenu({getEditor, onLoadFileContent}) {\r\n    const [name, setName] = useState('');\r\n    const [saveAnimating, setSaveAnimating] = useState(false);\r\n    const [zoomAnimating, setZoomAnimating] = useState(false);\r\n    const [loadMenuOpen, setLoadMenuOpen] = useState(false);\r\n\r\n    const [learningMode, setLearningMode] = useLearningModeState();\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, EDITOR_SAVE_EVENT, () => {\r\n        setSaveAnimating(true);\r\n    });\r\n\r\n    useListener(events, PROJECT_LOAD_EVENT, project => {\r\n        setName(project.name);\r\n        setLoadMenuOpen(false);\r\n    });\r\n\r\n    /// Temp, until projectName refactor\r\n    setTimeout(() => {\r\n        setName(getEditor().projectName);\r\n    });\r\n\r\n    // TODO refactor\r\n    const updateName = (name) => {\r\n        setName(name);\r\n        let editor = getEditor();\r\n        editor.projectName = name;\r\n        events.emit(EDITOR_CHANGE_EVENT, editor);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TopMenu>\r\n                {/*<Link to=\"/\">*/}\r\n                <MenuItem variant=\"dark\">\r\n                    <img src={`${process.env.PUBLIC_URL}/img/logo-gradient.png`} height=\"48px\" alt=\"Blocks Logo\"/>\r\n                </MenuItem>\r\n                {/*</Link>*/}\r\n                <div className=\"d-flex flex-row justify-content-center align-items-center mx-3\">\r\n                    <ProjectNameInput\r\n                        type=\"text\"\r\n                        placeholder=\"Unnamed Project\"\r\n                        className=\"bg-light text-secondary\"\r\n                        value={name || ''}\r\n                        onChange={e => updateName(e.target.value)}\r\n                        onKeyDown={e => e.key === 'Enter' && events.emit(EDITOR_SAVE_EVENT, getEditor())}\r\n                    />\r\n                    <MenuButton\r\n                        tooltip=\"Save Changes\"\r\n                        onMouseDown={() => events.emit(EDITOR_SAVE_EVENT, getEditor())}>\r\n                        <StyledSaveIcon\r\n                            className={classNames(saveAnimating && 'animating')}\r\n                            onAnimationEnd={() => setSaveAnimating(false)}\r\n                        />\r\n                    </MenuButton>\r\n                    <MenuButton\r\n                        tooltip=\"Export to File\"\r\n                        onMouseDown={() => events.emit(PROJECT_EXPORT_EVENT, getEditor().toJSON())}>\r\n                        {/*<FiDownload/>*/}\r\n                        <DownloadIcon/>\r\n                    </MenuButton>\r\n                    <MenuButton\r\n                        tooltip=\"New Project\"\r\n                        onMouseDown={() => events.emit(PROJECT_CLEAR_EVENT)}>\r\n                        <FilePlusIcon/>\r\n                    </MenuButton>\r\n                    <MenuButton\r\n                        tooltip=\"Load Project\"\r\n                        onMouseDown={() => setLoadMenuOpen(!loadMenuOpen)}>\r\n                        {loadMenuOpen ? <FolderOpenIcon/> : <FolderWideIcon/>}\r\n                    </MenuButton>\r\n                    <MenuButton\r\n                        tooltip=\"Reset Viewport\"\r\n                        onMouseDown={() => {\r\n                            AreaPlugin.zoomAt(getEditor());\r\n                            setZoomAnimating(true);\r\n                        }}>\r\n                        <StyledZoomIcon\r\n                            className={classNames(zoomAnimating && 'animating')}\r\n                            onAnimationEnd={() => setZoomAnimating(false)}\r\n                        />\r\n                    </MenuButton>\r\n                    <MenuButton\r\n                        tooltip=\"Learning Mode\"\r\n                        onMouseDown={() => setLearningMode(!learningMode)}>\r\n                        <StyledLearningIcon className={classNames(learningMode && 'enabled')}/>\r\n                    </MenuButton>\r\n                </div>\r\n            </TopMenu>\r\n            <Modal\r\n                show={loadMenuOpen}\r\n                onShow={() => ReactTooltip.hide()}\r\n                onHide={() => setLoadMenuOpen(false)}>\r\n                <Modal.Body>\r\n                    <LoadProjectMenu onLoadFileContent={onLoadFileContent}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import {getBlock} from './blocks';\r\n\r\nconst shortcutKeys = {\r\n    'c': 'Comment',\r\n    'd': 'CommentRegion',\r\n\r\n    // Arithmetic\r\n    '-': 'Subtract',\r\n    '=': 'Add',\r\n    '8': 'Multiply',\r\n    '/': 'Divide',\r\n\r\n    // Boolean logic\r\n    '7': 'And',\r\n    '\\\\': 'Or',\r\n    '1': 'Not',\r\n\r\n    // Control flow\r\n    'r': 'Return',\r\n\r\n    // Literal values\r\n    ',': 'LiteralTuple',\r\n    '.': 'LiteralIdentifier',\r\n    '\\'': 'LiteralText',///\r\n    'x': 'CodeValue',\r\n    'b': 'LiteralBool',\r\n    'n': 'LiteralNat',\r\n    'i': 'LiteralInt',\r\n    'f': 'LiteralFloat',\r\n    // 's': 'LiteralText',\r\n    'a': 'NewArray',\r\n    'm': 'NewTextHashMap',\r\n\r\n    // Optionals\r\n    'o': 'Optional',\r\n    'u': 'OptionalUnwrap',\r\n};\r\n\r\nexport const SHORTCUT_KEYS = new Map(Object.entries(shortcutKeys).map(([k, v]) => [k, getBlock(v)]));\r\n","import React, {useContext} from 'react';\r\nimport './Editor.scss';\r\nimport AreaPlugin from 'rete-area-plugin';\r\nimport ConnectionPlugin from 'rete-connection-plugin';\r\nimport ContextMenuPlugin from '../../plugins/rete-blocks-contextmenu-plugin';\r\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin';\r\nimport ReactRenderPlugin from 'rete-react-render-plugin';\r\nimport EventsContext, {\r\n    EDITOR_CHANGE_EVENT,\r\n    EDITOR_SAVE_EVENT,\r\n    ERROR_EVENT,\r\n    PROJECT_LOAD_EVENT,\r\n} from '../../contexts/EventsContext';\r\nimport NodeHandle from './nodes/NodeHandle';\r\nimport BlockComponent from '../../editor/components/BlockComponent';\r\nimport {BLOCK_MAP} from '../../editor/blocks';\r\nimport useListener from '../../hooks/useListener';\r\nimport BlocksNodeEditor from '../../editor/BlocksNodeEditor';\r\nimport VerticalSortPlugin from '../../plugins/rete-vertical-sort-plugin';\r\nimport ConnectionDropPlugin from '../../plugins/rete-connection-drop-plugin';\r\nimport ConnectionOpacityPlugin from '../../plugins/rete-connection-opacity-plugin';\r\nimport DragButtonPlugin from '../../plugins/rete-drag-button-plugin';\r\nimport classNames from 'classnames';\r\nimport styled from 'styled-components';\r\nimport EditorMenu from './EditorMenu';\r\nimport FileDropZone from '../common/FileDropZone';\r\nimport {SHORTCUT_KEYS} from '../../editor/shortcutKeys';\r\nimport ConnectionAwareListContext from '../../contexts/ConnectionAwareListContext';\r\n\r\nconst EDITOR_NAME = process.env.REACT_APP_EDITOR_NAME;\r\nconst EDITOR_VERSION = process.env.REACT_APP_EDITOR_VERSION;\r\n\r\nconst INPUT_TAGS = ['input', 'textarea'];\r\n\r\nfunction findCategory(socket) {\r\n    return socket.type?./*findType?.()*/data.category ?? socket.data.category ?? 'none';\r\n}\r\n\r\n// noinspection JSCheckFunctionSignatures\r\nfunction createEditor(element) {\r\n\r\n    let editor = new BlocksNodeEditor(EDITOR_NAME + '@' + EDITOR_VERSION, element);\r\n    editor.use(ReactRenderPlugin, {\r\n        component: NodeHandle,\r\n    });\r\n    // editor.use(HistoryPlugin); // TODO: set up undo/redo history\r\n    editor.use(ConnectionPlugin);\r\n    // editor.use(CommentPlugin);\r\n    // editor.use(SelectionPlugin, {\r\n    //     enabled: true,\r\n    // });\r\n    // noinspection JSCheckFunctionSignatures\r\n    editor.use(AutoArrangePlugin);\r\n    // noinspection JSCheckFunctionSignatures\r\n    editor.use(AreaPlugin, {\r\n        background: (() => {\r\n            let background = document.createElement('div');\r\n            background.classList.add('grid');\r\n            background.style.pointerEvents = 'none';\r\n            // noinspection JSUnresolvedVariable\r\n            if(!window.chrome) {\r\n                editor.on('zoom', ({zoom}) => {\r\n                    // Fix flickering grid on non-Chrome browsers\r\n                    background.classList.toggle('far', zoom <= 1);\r\n                    background.classList.toggle('d-none', zoom <= .5);\r\n                });\r\n            }\r\n            editor.on('destroy', () => background.remove());\r\n            return background;\r\n        })(),\r\n        snap: {size: 16, dynamic: true},\r\n    });\r\n    editor.use(ContextMenuPlugin);\r\n    editor.use(ConnectionDropPlugin);\r\n    editor.use(ConnectionOpacityPlugin);\r\n    editor.use(VerticalSortPlugin);\r\n    // noinspection JSCheckFunctionSignatures\r\n    editor.use(DragButtonPlugin, {editorButton: 2});\r\n\r\n    let mouseMoved = false;\r\n    editor.view.container.addEventListener('mousedown', (e) => {\r\n        mouseMoved = false;\r\n    });\r\n    editor.on('mousemove', (e) => {\r\n        mouseMoved = true;\r\n    });\r\n    editor.on('click', ({e}) => {\r\n        // Deselect nodes when clicking background\r\n        if(!mouseMoved) {\r\n            editor.selected.clear();\r\n            editor.nodes.forEach(node => node.update());\r\n        }\r\n    });\r\n\r\n    editor.on('zoom', ({source}) => source !== 'dblclick'); // Prevent double-click zoom\r\n    editor.on('nodeselect', node => !editor.selected.contains(node)); // Allow dragging multiple nodes\r\n    editor.on('renderconnection', ({el, connection}) => {\r\n        // TODO: update with socket type\r\n        // let inputCategory = findCategory(connection.input.socket);\r\n        // let outputCategory = findCategory(connection.output.socket);\r\n        // if(connection.input.socket.data.reversed) {\r\n        //     [inputCategory, outputCategory] = [outputCategory, inputCategory];\r\n        // }\r\n        // el.querySelector('.connection').classList.add(\r\n        //     `socket-input-category-${inputCategory}`,\r\n        //     `socket-output-category-${outputCategory}`,\r\n        // );\r\n        let category = findCategory((connection.input.socket.data.reversed ? connection.input : connection.output).socket);\r\n        el.querySelector('.connection').classList.add(\r\n            `socket-output-category-${category}`,\r\n        );\r\n    });\r\n\r\n    return editor;\r\n}\r\n\r\n\r\nconst EditorContainer = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n`;\r\n\r\nexport default function Editor({hideMenu, onSetup, onChange, onSave, className, ...others}) {\r\n\r\n    const events = useContext(EventsContext);\r\n    const connectionAwareList = useContext(ConnectionAwareListContext);\r\n\r\n    let editor = null;\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, (_editor) => {\r\n        if(_editor === editor) {\r\n            onChange?.(editor);\r\n        }\r\n    });\r\n    useListener(events, EDITOR_SAVE_EVENT, (_editor) => {\r\n        if(_editor === editor) {\r\n            onSave?.(editor.toJSON(), editor);\r\n        }\r\n    });\r\n\r\n    const bindEditor = (element) => {\r\n        if(editor) {\r\n            editor.silent = true;\r\n            editor.clear();\r\n            editor.components.clear();\r\n            editor.destroy();\r\n        }\r\n        if(!element) {\r\n            return;\r\n        }\r\n\r\n        editor = createEditor(element);\r\n\r\n        window.EDITOR = editor; // Browser debugging\r\n\r\n        let onKeyDown = (event) => {\r\n            // let key = String.fromCharCode(event.which).toLowerCase();\r\n            let key = event.key;\r\n\r\n            if(event.ctrlKey || event.metaKey) {\r\n                // if(key === 'q') {\r\n                //     editor.trigger('arrange');\r\n                // }\r\n                if(key === 's') {\r\n                    event.preventDefault();\r\n                    events.emit(EDITOR_SAVE_EVENT, editor);\r\n                    console.log('Saved successfully');\r\n                }\r\n            }\r\n            else if(!document.activeElement || !INPUT_TAGS.includes(document.activeElement.nodeName.toLowerCase())) {\r\n                if(key === 'Delete') {\r\n                    editor.selected.each(n => editor.removeNode(n));\r\n                }\r\n                else {\r\n                    let block = SHORTCUT_KEYS.get(key);\r\n                    if(block) {\r\n                        editor.createNodeAtCursor(editor.getComponent(block.name))\r\n                            .catch(err => events.emit('error', err));\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        document.addEventListener('keydown', onKeyDown);\r\n        editor.on('destroy', () => document.removeEventListener('keydown', onKeyDown));\r\n\r\n        for(let block of BLOCK_MAP.values()) {\r\n            let node = new BlockComponent(block);\r\n            editor.register(node);\r\n        }\r\n\r\n        let timeout;\r\n        editor.on(['nodecreated', 'noderemoved', 'nodedragged', 'connectioncreated', 'connectionremoved'], async () => {\r\n            if(!editor.silent) {\r\n                // Debounce change events\r\n                clearTimeout(timeout);\r\n                timeout = setTimeout(() => {\r\n                    events.emit(EDITOR_CHANGE_EVENT, editor);\r\n                });\r\n            }\r\n        });\r\n        editor.on('error', err => events.emit(ERROR_EVENT, err));\r\n\r\n        async function loadState(state) {\r\n            if(!state) {\r\n                return false;\r\n            }\r\n            let result = await editor.fromJSON(state);\r\n            if(result) {\r\n                editor.view.resize();\r\n                AreaPlugin.zoomAt(editor);\r\n                events.emit(EDITOR_CHANGE_EVENT, editor);\r\n                editor.nodes.forEach(node => node.update()); // Redraw nodes\r\n            }\r\n            return result;\r\n        }\r\n\r\n        (async () => {\r\n            await onSetup?.(loadState, editor);\r\n        })().catch(err => events.emit(ERROR_EVENT, err));\r\n\r\n        // TODO: dry with rete-blocks-contextmenu-plugin\r\n        const handleConnectionEnd = (startIO, endIO) => {\r\n            currentIO = null;\r\n            for(let listener of connectionAwareList) {\r\n                listener(false, startIO, endIO);\r\n            }\r\n        };\r\n        let currentIO = null;\r\n        let connectionMouseMoved = false;\r\n        editor.on('mousemove', m => {\r\n            connectionMouseMoved = true;\r\n        });\r\n        editor.on('connectionpick', io => {\r\n            connectionMouseMoved = false;\r\n            if(currentIO) {\r\n                handleConnectionEnd(currentIO, io);\r\n                return;\r\n            }\r\n            let prevConnections = [...io.connections];\r\n            setTimeout(() => {\r\n                if(io.connections.length < prevConnections.length) {\r\n                    // Connection is being removed\r\n                    let connection = prevConnections.find(c => !io.connections.includes(c));\r\n                    currentIO = (io === connection.input ? connection.output : connection.input);\r\n                }\r\n                else {\r\n                    currentIO = io;\r\n                }\r\n                for(let listener of connectionAwareList) {\r\n                    listener(true, currentIO);\r\n                }\r\n            });\r\n        });\r\n        editor.on('connectiondrop', io => {\r\n            if(!connectionMouseMoved) {\r\n                return;\r\n            }\r\n            let prevConnections = [...io.connections];\r\n            setTimeout(() => {\r\n                // Prevent activating if connections changed\r\n                if(io.connections.length !== prevConnections.length || io.connections.some((conn, i) =>\r\n                    (conn.input !== prevConnections[i].input) || (conn.output !== prevConnections[i].output))) {\r\n                    return;\r\n                }\r\n                handleConnectionEnd(io);\r\n            });\r\n        });\r\n\r\n        // const onMouseUp = event => {\r\n        //     if(currentIO) {\r\n        //         console.log(1234)\r\n        //         handleConnectionEnd(currentIO);\r\n        //     }\r\n        // };\r\n        // document.addEventListener('mouseup', onMouseUp);\r\n        // editor.on('destroy', () => document.removeEventListener('mouseup', onMouseUp));\r\n    };\r\n\r\n    const loadFileContent = content => {\r\n        try {\r\n            let project = JSON.parse(content);\r\n            events.emit(PROJECT_LOAD_EVENT, project);\r\n        }\r\n        catch(err) {\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FileDropZone options={{noClick: true}} onFileContent={loadFileContent}>\r\n            <EditorContainer\r\n                className={classNames('node-editor d-flex flex-grow-1 flex-column', className)}\r\n                {...others}>\r\n                {!hideMenu && (\r\n                    <EditorMenu getEditor={() => editor} onLoadFileContent={loadFileContent}/>\r\n                )}\r\n                <div ref={bindEditor}/>\r\n            </EditorContainer>\r\n        </FileDropZone>\r\n    );\r\n}","import Editor from '../../rete/Editor';\r\nimport React, {useContext} from 'react';\r\nimport useListener from '../../../hooks/useListener';\r\nimport EventsContext, {\r\n    PROJECT_CLEAR_EVENT,\r\n    PROJECT_EXPORT_EVENT,\r\n    PROJECT_LOAD_EVENT,\r\n} from '../../../contexts/EventsContext';\r\nimport FileSaver from 'file-saver';\r\nimport {pascalCase} from 'change-case';\r\nimport useRedraw from '../../../hooks/useRedraw';\r\nimport isEmbedded from '../../../utils/isEmbedded';\r\nimport {parse} from 'querystring';\r\n\r\nconst STORAGE_EDITOR_STATE = 'blocks.editorState';\r\n\r\nconst DEFAULT_STATE = require('../../../examples/files/DefaultProject.json');\r\n\r\nconst embedded = isEmbedded();\r\nconst storage = embedded ? {} : localStorage; // Use temporary storage for iframe\r\n\r\nif(embedded) {\r\n    console.log('Using embedded mode.');\r\n}\r\n\r\nlet nextEditorState;\r\n\r\nexport default function EditorPage() {\r\n    const redraw = useRedraw();\r\n\r\n    const {menu: menuParam} = parse(window.location.search.substring(1));\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, PROJECT_CLEAR_EVENT, () => {\r\n        // TODO: confirmation modal\r\n        // delete storage[STORAGE_EDITOR_STATE];\r\n        nextEditorState = DEFAULT_STATE;\r\n        redraw();\r\n    });\r\n\r\n    useListener(events, PROJECT_LOAD_EVENT, state => {\r\n        // storage[STORAGE_EDITOR_STATE] = JSON.stringify(state);\r\n        nextEditorState = state;///\r\n        redraw();\r\n    });\r\n\r\n    useListener(events, PROJECT_EXPORT_EVENT, state => {\r\n        let data = JSON.stringify(state);\r\n        FileSaver.saveAs(new Blob([data]), `${pascalCase(state.name || 'project')}.blocks`);\r\n    });\r\n\r\n    const onEditorSetup = async (loadState, editor) => {\r\n        let stateString = nextEditorState ? JSON.stringify(nextEditorState) : storage[STORAGE_EDITOR_STATE];\r\n        nextEditorState = null;\r\n\r\n        let state;\r\n        if(stateString) {\r\n            state = JSON.parse(stateString);\r\n        }\r\n        else if(!embedded) {\r\n            state = DEFAULT_STATE;\r\n        }\r\n\r\n        if(state && !await loadState(state)) {\r\n            console.warn('Load error');\r\n        }\r\n    };\r\n\r\n    const onEditorChange = (editor) => {\r\n        // if(embedded) {\r\n        //     // TODO: dry with onEditorSave()\r\n        //     let message = {\r\n        //         type: 'change',\r\n        //         state: JSON.stringify(editor.toJSON()),\r\n        //     };\r\n        //     console.log('Sending message:', message);\r\n        //     window.parent.postMessage(message, '*'); // TODO: restrict target origin\r\n        // }\r\n    };\r\n\r\n    const onEditorSave = (state, editor) => {\r\n        let stateString = JSON.stringify(state);\r\n        storage[STORAGE_EDITOR_STATE] = stateString;\r\n        if(embedded) {\r\n            let message = {\r\n                type: 'save',\r\n                state: stateString,\r\n            };\r\n            console.log('Sending message:', message);\r\n            let targetOrigin = '*'; // TODO: restrict target origin\r\n            window.parent.postMessage(message, targetOrigin);\r\n        }\r\n    };\r\n\r\n    useListener(window, 'message', ({source, data}) => {\r\n        if(embedded && source === window.parent) {\r\n            if(typeof data === 'string') {\r\n                console.log('Received message:', data);\r\n                data = JSON.parse(data);\r\n                if(data?.type === 'load') {\r\n                    nextEditorState = data.state ? JSON.parse(JSON.stringify(data.state)) : DEFAULT_STATE;\r\n                    redraw();\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Editor\r\n            hideMenu={menuParam === 'hidden'}\r\n            onSetup={onEditorSetup}\r\n            onChange={onEditorChange}\r\n            onSave={onEditorSave}\r\n        />\r\n    );\r\n}","// Derived from: https://stackoverflow.com/questions/326069/how-to-identify-if-a-webpage-is-being-loaded-inside-an-iframe-or-directly-into-t\r\n\r\nexport default function isEmbedded() {\r\n    try {\r\n        return window.self !== window.top;\r\n    }\r\n    catch(e) {\r\n        return true;\r\n    }\r\n};","import {useState} from 'react';\r\n\r\nexport default function useRedraw() {\r\n    const redraw = useState({})[1];\r\n    return () => redraw({});\r\n}\r\n","import styled from 'styled-components';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport React from 'react';\r\n\r\nconst ReactTooltipStyled = styled(ReactTooltip)`\r\n  padding: .5em 1em !important;\r\n`;\r\n\r\nexport default function GlobalTooltip() {\r\n    return (\r\n        <ReactTooltipStyled backgroundColor=\"#111\" place=\"bottom\" delayShow={250}/>\r\n    );\r\n};","export default function reportWebVitals(onPerfEntry) {\n    if(onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n}\n","import React, {useContext} from 'react';\r\nimport EditorPage from './pages/editor/EditorPage';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport EventsContext, {ERROR_EVENT} from '../contexts/EventsContext';\r\nimport useListener from '../hooks/useListener';\r\nimport GlobalTooltip from './GlobalTooltip';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\n\r\nexport default function App() {\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    useListener(events, ERROR_EVENT, err => {\r\n        toast(err, {\r\n            type: 'error',\r\n            // closeOnClick: true,\r\n        });\r\n    });\r\n\r\n    return (\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <GlobalTooltip/>\r\n                <ToastContainer/>\r\n                <EditorPage/>\r\n                {/*<Switch>*/}\r\n                {/*    <Route path=\"/editor\">*/}\r\n                {/*        <EditorPage/>*/}\r\n                {/*    </Route>*/}\r\n                {/*    <Route path=\"/\">*/}\r\n                {/*        <HomePage/>*/}\r\n                {/*    </Route>*/}\r\n                {/*</Switch>*/}\r\n            </BrowserRouter>\r\n        </React.StrictMode>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\nreportWebVitals((...args) => {\n    // console.log('WebVitals:', ...args);\n});\n","import React from 'react';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport styled from 'styled-components';\r\nimport {bindNodeInput} from '../../../../utils/bindNodeInput';\r\nimport useControlState from '../../../../hooks/useControlState';\r\n\r\nconst Container = styled.div`\r\n  cursor: pointer;\r\n  color: black;\r\n  background: ${({selected}) => selected ? '#fffa' : '#fff8'};\r\n`;\r\n\r\nconst StyledTextArea = styled(TextareaAutosize)`\r\n  font-weight: 500;\r\n  resize: horizontal;\r\n  background: #fff8;\r\n`;\r\n\r\nexport default function CommentNodeView({block, nodeHandle}) {\r\n    const {/*editor,*/ node/*, bindControl*/} = nodeHandle.props;\r\n    const {selected} = nodeHandle.state;\r\n\r\n    const [text, setText] = useControlState(node.controls.get('text'));\r\n    const [width, setWidth] = useControlState(node.controls.get('widthPixels'));\r\n\r\n    return (\r\n        <Container className=\"pt-2 ps-2 pe-4 rounded-3\" selected={selected}>\r\n            {/*<div className=\"\">Comment</div>*/}\r\n            <StyledTextArea\r\n                style={{width: width || 200}}\r\n                rows={1}\r\n                maxRows={100}\r\n                ref={bindNodeInput}\r\n                value={text || ''}\r\n                placeholder=\"Comment\"\r\n                onChange={e => setText(e.target.value)}\r\n                onMouseUp={e => setWidth(e.target.clientWidth)}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n","import {floatType, textType} from '../block-types/types';\nimport {commentCategory} from '../block-categories/categories';\nimport CommentNodeView from '../components/rete/nodes/views/CommentNodeView';\n\nconst block = {\n    info: 'A text comment',\n    category: commentCategory,\n    global: true,\n    component: CommentNodeView,\n    controls: [{\n        key: 'text',\n        type: textType,\n    }, {\n        key: 'widthPixels',\n        type: floatType,\n    }],\n};\nexport default block;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport useControlState from '../../../../hooks/useControlState';\r\nimport {bindNodeInput} from '../../../../utils/bindNodeInput';\r\n\r\nconst Container = styled.div`\r\n  cursor: pointer;\r\n    // background: ${({selected}) => selected ? '#fff8' : '#fff3'};\r\n  border: 2px solid ${({selected}) => selected ? '#fffa' : '#fff8'};\r\n`;\r\n\r\nconst ResizeArea = styled.div`\r\n  pointer-events: none;\r\n  //cursor: default;\r\n  background: #fff1;\r\n  resize: both;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport default function RegionNodeView({block, nodeHandle}) {\r\n    const {/*editor,*/ node/*, bindControl*/} = nodeHandle.props;\r\n    const {selected} = nodeHandle.state;\r\n\r\n    const [width, setWidth] = useControlState(node.controls.get('widthPixels'));\r\n    const [height, setHeight] = useControlState(node.controls.get('heightPixels'));\r\n\r\n    const bindContainer = (el) => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        // Render behind other nodes\r\n        el.parentElement.style.zIndex = '-1';\r\n    };\r\n\r\n    return (\r\n        <Container ref={bindContainer} className=\"p-2 rounded-3\" selected={selected}>\r\n            <ResizeArea\r\n                ref={bindNodeInput}\r\n                style={{width: width || 300, height: height || 100}}\r\n                onMouseUp={event => setWidth(event.target.clientWidth) & setHeight(event.target.clientHeight)}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n","import {floatType, textType} from '../block-types/types';\nimport {commentCategory} from '../block-categories/categories';\nimport CommentRegionNodeView from '../components/rete/nodes/views/RegionNodeView';\nimport {FaSquareFull} from 'react-icons/fa';\n\nconst block = {\n    title: 'Region',\n    info: 'A background region',\n    category: commentCategory,\n    icon: FaSquareFull,\n    global: true,\n    component: CommentRegionNodeView,\n    controls: [{\n        key: 'text',\n        type: textType,\n    }, {\n        key: 'widthPixels',\n        type: floatType,\n    }, {\n        key: 'heightPixels',\n        type: floatType,\n    }],\n};\nexport default block;\n"],"sourceRoot":""}