{"version":3,"sources":["components/rete/controls/NumberControlHandle.js","components/common/inputs/TypeSelect.js","block-types/types.js","components/rete/controls/TypeControlHandle.js","components/rete/controls/NodeControlHandle.js","components/rete/controls/CheckboxControlHandle.js","block-categories/categories.js","contexts/EventsContext.js","block-patterns/operator-patterns.js","../../src/engine/component.ts","../../src/node.ts","../../src/component.ts","../../src/connection.ts","../../src/control.ts","../../src/core/emitter.ts","../../src/io.ts","../../src/input.ts","../../src/core/validator.ts","../../src/core/context.ts","../../src/view/utils.ts","../../src/view/drag.ts","../../src/view/zoom.ts","../../src/view/area.ts","../../src/view/connection.ts","../../src/view/control.ts","../../src/view/socket.ts","../../src/view/node.ts","../../src/view/index.ts","../../src/selected.ts","../../src/core/events.ts","../../src/events.ts","../../src/editor.ts","../../src/output.ts","../../src/socket.ts","../../src/engine/recursion.ts","../../src/engine/state.ts","../../src/engine/events.ts","../../src/engine/index.ts","../../src/index.ts","hooks/useListener.js","hooks/useControlState.js","block-patterns/statement-patterns.js","hooks/useReactTooltip.js","editor/blocks.js","block-patterns/literal-patterns.js","block-patterns/member-patterns.js","utils/getBlockLabel.js","components/rete/controls/TextControlHandle.js","utils/getDefaultLabel.js","utils/getNodeLabel.js","config/configureMonaco.js","components/monaco/CodeEditor.js","components/rete/controls/CodeControlHandle.js","block-patterns/code-patterns.js","components/common/Loading.js","components/rete/controls/OutputControlHandle.js","block-patterns/compile-patterns.js","components/rete/controls/SelectControlHandle.js","block-patterns/control-patterns.js","examples/examples.js","blocks sync /.js$","blocks/Actor.js","blocks/ActorClass.js","blocks/Add.js","blocks/And.js","blocks/Async.js","blocks/Await.js","blocks/CodeType.js","blocks/CodeValue.js","blocks/CompareEqual.js","blocks/CompareGreater.js","blocks/CompareGreaterEqual.js","blocks/CompareLess.js","blocks/CompareLessEqual.js","blocks/CompareNotEqual.js","blocks/CompileMotoko.js","blocks/CompileType.js","blocks/Conditional.js","blocks/ConditionalValue.js","blocks/Divide.js","blocks/Function.js","blocks/FunctionCall.js","blocks/LiteralBool.js","blocks/LiteralFloat.js","blocks/LiteralInt.js","blocks/LiteralNat.js","blocks/LiteralText.js","blocks/LiteralType.js","blocks/LoopWhile.js","blocks/Multiply.js","blocks/Not.js","blocks/Null.js","blocks/Optional.js","blocks/OptionalUnwrap.js","blocks/Or.js","blocks/Parameter.js","blocks/Return.js","blocks/State.js","blocks/StateRead.js","blocks/StateUpdate.js","blocks/Subtract.js","blocks/TextConcat.js","blocks/TypeMember.js","blocks/TypeMemberReference.js","blocks/Variable.js","plugins/rete-blocks-contextmenu-plugin/components/ContextMenu.js","plugins/rete-blocks-contextmenu-plugin/contexts/MenuContext.js","plugins/rete-blocks-contextmenu-plugin/components/MenuIcon.js","plugins/rete-blocks-contextmenu-plugin/components/MenuAction.js","plugins/rete-blocks-contextmenu-plugin/components/menus/SelectionMenu.js","plugins/rete-blocks-contextmenu-plugin/components/MenuComponent.js","plugins/rete-blocks-contextmenu-plugin/components/MenuSearch.js","plugins/rete-blocks-contextmenu-plugin/components/menus/PlacementMenu.js","plugins/rete-blocks-contextmenu-plugin/hooks/useEditorComponents.js","plugins/rete-blocks-contextmenu-plugin/index.js","components/rete/sockets/SocketHandle.js","components/rete/nodes/parts/DynamicTitle.js","utils/getPropLabel.js","utils/bindNodeInput.js","components/rete/nodes/parts/ShortcutButton.js","components/rete/nodes/NodeHandle.js","editor/controls/BaseControl.js","editor/controls/PropControl.js","editor/components/BaseComponent.js","editor/sockets/TypeSocket.js","editor/components/BlockComponent.js","compilers/Compiler.js","compilers/MotokoCompiler.js","compilers/NodeCompiler.js","compilers/TypeCompiler.js","editor/BlocksNodeEditor.js","plugins/rete-vertical-sort-plugin/index.js","plugins/rete-connection-drop-plugin/index.js","plugins/rete-connection-opacity-plugin/index.js","plugins/rete-drag-button-plugin/index.js","components/common/menus/TopMenu.js","components/common/menus/MenuItem.js","components/common/menus/MenuButton.js","components/common/FileDropZone.js","components/rete/LoadProjectMenu.js","components/rete/EditorMenu.js","components/rete/Editor.js","components/pages/editor/EditorPage.js","hooks/useRedraw.js","components/pages/home/HomePage.js","reportWebVitals.js","components/GlobalTooltip.js","components/App.js","index.js"],"names":["NumberControlHandle","control","bindInput","validation","min","max","step","useControlState","value","setValue","type","style","width","ref","onChange","event","target","TypeSelect","constraintType","abstract","invalid","others","anyType","types","TYPE_MAP","values","filter","data","isSubtype","events","useContext","EventsContext","getType","err","undefined","emit","ERROR_EVENT","some","t","useReactTooltip","className","classNames","name","label","map","generics","i","baseType","getDefaultLabel","genericNames","splice","toJSON","Type","parent","meta","Error","this","buildType","Object","assign","isAbstract","defaultValue","other","length","every","equals","getSharedType","toTypeString","call","g","join","Map","createType","category","reversed","anyReversedType","typeType","controlType","config","validate","nodeType","editor","useState","nodes","setNodes","useListener","EDITOR_CHANGE_EVENT","blockName","block","blockFilter","Array","isArray","getBlock","n","includes","String","id","maxWidth","node","getNodeLabel","JSON","stringify","valueType","identifierType","TextControlHandle","pattern","effectType","toMotoko","memberType","singleOutput","actorType","paramType","boolType","checked","verticalAlign","textType","minLength","maxLength","floatType","intType","natType","tupleType","arbitraryGenerics","unitType","of","optionalType","asyncType","set","getGenericType","parentData","parentMeta","arguments","has","get","Category","root","CATEGORY_MAP","createCategory","getCategory","defaultCategory","stateCategory","color","icon","FaDatabase","functionCategory","FaCubes","paramCategory","FaLongArrowAltRight","typeCategory","FaTextHeight","compilerCategory","FaCode","expressionCategory","FaEject","operatorCategory","FaFilter","actorCategory","FaFont","effectCategory","FaStream","literalCategory","FaPlusCircle","decompositionCategory","FaNetworkWired","EDITOR_SAVE_EVENT","PROJECT_EXPORT_EVENT","PROJECT_LOAD_EVENT","PROJECT_CLEAR_EVENT","EventEmitter","setMaxListeners","on","console","error","window","EVENTS","React","createContext","unaryOperatorBlock","symbol","evaluate","topRight","title","inputs","key","outputs","input","binaryOperatorBlock","inputType","resultType","left","right","arithmeticOperatorBlock","args","numberComparisonOperatorBlock","Component","Node","list","item","output","io","reduceIO","obj","latestId","json","x","y","Math","builder","build","Connection","Control","constructor","TypeError","getNode","Emitter","names","params","e","r","IO","connections","indexOf","connection","Input","multiConns","c","Validator","isValidId","test","id1","id2","msg","isValidData","success","Boolean","Context","plugin","plugins","options","components","component","listenWindow","Drag","onTranslate","onStart","onDrag","down","bind","destroyMove","move","destroyUp","up","delta","pointerStart","zoom","el","getBoundingClientRect","Zoom","container","wheel","dblclick","end","destroyCancel","rect","ox","oy","touches","pointers","x1","y1","x2","y2","cx","cy","distance","p","previous","Area","k","document","emitter","clientX","clientY","transform","_zoom","translate","_startPosition","trigger","source","d","ConnectionView","points","outputNode","getSocketPosition","inputNode","getPoints","ControlView","SocketView","position","NodeView","bindSocket","bindControl","ios","s","socket","sockets","payload","accumulate","dx","dy","prev","EditorView","view","nodeView","viewInput","viewOutput","connView","area","removeChild","conn","height","Selected","contains","push","Events","warn","componentregister","destroy","EditorEvents","nodecreate","nodecreated","noderemove","noderemoved","connectioncreate","connectioncreated","connectionremove","connectionremoved","translatenode","nodetranslate","nodetranslated","nodedraged","nodedragged","selectnode","multiselectnode","nodeselect","nodeselected","rendernode","rendersocket","rendercontrol","renderconnection","updateconnection","keydown","keyup","translated","zoomed","click","mousemove","contextmenu","process","clear","NodeEditor","checking","beforeImport","Promise","jsonNode","outputJson","jsonConnection","nodeId","targetOutput","targetInput","Output","compatibleWith","Socket","compatible","Recursion","nodesData","inters","array2","inputNodes","l","inter","findSelf","extractInputNodes","nodesArr","State","EngineEvents","Engine","engine","message","state","ret","res","a","conns","prevNode","connData","extractInputData","inputData","outputData","lock","processWorker","nextNode","recursion","throwError","recurrentNode","startNode","processNode","forwardProcess","startId","copy","processStartNode","processDone","listener","useEffect","domTarget","addEventListener","removeEventListener","off","getValue","updateVisualValue","notifyEditorChange","defaultType","statementBlock","compileFn","beforeProp","inferType","after","props","result","topLeft","optional","endStatementBlock","statementProp","timeout","deps","clearTimeout","setTimeout","ReactTooltip","rebuild","allBlocks","blockNames","Set","blockContext","require","addProps","propList","prop","hasOwnProperty","keys","forEach","path","basename","default","entries","controls","log","add","BLOCK_MAP","shortcuts","literalBlock","stringifier","computeMemberName","compilers","motoko","getInput","memberBlock","memberProp","stringSelectProp","getBlockLabel","capitalCase","autoComplete","autoCorrect","placeholder","text","sentenceCase","simplified","computeTitle","configureMonaco","monaco","languages","register","setLanguageConfiguration","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","accessmodifiers","typeKeywords","operators","symbols","escapes","tokenizer","cases","include","token","bracket","next","comment","string","whitespace","CodeEditor","defaultLanguage","beforeMount","newValue","minimap","enabled","wordWrap","wrappingIndent","scrollBeyondLastLine","fontSize","CodeControlHandle","replaceRegex","parseInputs","expression","replaceAll","match","codeBlock","info","multi","Loading","promise","loading","children","status","setStatus","setResult","resolve","then","catch","OutputControlHandle","tooltipRef","query","findValue","valuePromise","setValuePromise","copied","setCopied","showTooltip","show","readOnly","Button","size","variant","onClick","compileBlock","compilerKey","displayFn","queryFor","inputKey","controlProps","SelectControlHandle","findLabel","option","charAt","toUpperCase","substring","examples","module","exports","getExampleProjects","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","global","getInputArgs","members","b","condition","trueCase","falseCase","falsePart","defaultReturnType","asyncKind","returnType","getTypeString","nodeKey","compiler","visibility","shared","body","modifiers","m","returnString","FaPlayCircle","functionNode","paramNames","withMeta","getOutput","loop","valueCase","nullCase","valuePart","nullPart","typeString","FaCaretLeft","initialValue","flexible","FaAngleRight","stateNode","FaAngleDoubleRight","typeNode","ContextMenu","styleProp","handleCloseMenu","useMemo","top","bindScreen","useCallback","stopPropagation","bindContainer","moveIntoWindow","offset","bottom","innerHeight","onresize","pointerEvents","onKeyDown","keyCode","onMouseDown","MenuContext","MenuIcon","MenuAction","selected","onAction","userSelect","button","SelectionMenu","each","removeNode","MenuComponent","endsWith","createElement","FaRegStickyNote","MenuSearch","focus","handleKeyDown","autoFocus","deepCopy","parse","createNode","PlacementMenu","searchText","setSearchText","index","setIndex","mouse","context","sortFn","hash","v","sort","compare","localeCompare","useEditorComponents","findType","outputType","findRelevantComponents","lower","toLowerCase","startsWith","handleCreateNode","addNode","find","connect","menuItems","ContextMenuPlugin","install","mouseEvent","offsetX","offsetY","menu","display","preventDefault","selectNode","appendChild","ReactDOM","render","Provider","remove","connectionMouseMoved","removingConnection","prevConnections","Rete","SocketHandle","innerRef","socketType","multiple","multipleConnections","paramCase","DynamicTitle","fallback","setTitle","getPropLabel","bindNodeInput","ShortcutButton","shortcut","newNode","_drag","background","borderColor","cursor","PropHandle","hideLeft","hideRight","showControl","leftSocket","rightSocket","controlField","NodeHandle","ButtonGroup","hidden","BaseControl","custom","getData","getDefaultValue","putData","PropControl","BaseComponent","getEditorNode","TypeSocket","otherType","BlockComponent","split","addProp","isOutput","addPropInput","addPropOutput","shouldPropHaveControl","addControl","addInput","addOutput","MissingInputError","Compiler","compileKey","_output","_compileConnection","_input","_control","postCompile","_prop","defaultCompile","cached","defineProperty","from","to","MotokoCompiler","NodeCompiler","TypeCompiler","BlocksNodeEditor","projectName","description","version","hadError","all","getComponent","fromJSON","otherNode","afterImport","sortConnections","VerticalSortPlugin","ioMap","ConnectionDropPlugin","ConnectionOpacityPlugin","minDistance","opacityFalloff","querySelectorAll","pathElement","opacity","sqrt","DragButtonPlugin","MenuContainer","styled","div","TopMenu","ItemContainer","MenuItem","tooltip","MenuItemStyled","MenuButton","FileDropZone","onFile","onFileContent","onDrop","files","file","reader","FileReader","onload","readAsText","useDropzone","maxFiles","getRootProps","getInputProps","isDragActive","LoadProjectItemContainer","FileDropZoneStyled","LoadProjectMenu","onLoadFileContent","example","ProjectNameInput","saveAnimation","keyframes","SaveIcon","FaSave","EditorMenu","getEditor","setName","saveAnimated","setSaveAnimated","loadMenuOpen","setLoadMenuOpen","project","updateName","onAnimationEnd","Modal","onHide","Body","findCategory","EditorContainer","Editor","onSetup","onSave","_editor","loadFileContent","content","noClick","element","EDITOR_NAME","use","ReactRenderPlugin","ConnectionPlugin","AutoArrangePlugin","AreaPlugin","classList","snap","dynamic","editorButton","mouseMoved","update","inputCategory","outputCategory","querySelector","createEditor","EDITOR","fromCharCode","which","ctrlKey","silent","loadState","resize","zoomAt","STORAGE_EDITOR_STATE","DEFAULT_STATE","EditorPage","redraw","useRedraw","localStorage","FileSaver","saveAs","Blob","pascalCase","onEditorSetup","stateString","HomePage","onPerfEntry","ReactTooltipStyled","GlobalTooltip","backgroundColor","place","delayShow","App","toast","StrictMode","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.3ad67370.chunk.js","sourcesContent":["import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\n\r\n\r\nexport default function NumberControlHandle({control, bindInput, validation: {min, max, step}}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    return (\r\n        <input\r\n            type=\"number\"\r\n            style={{width: '4em'}}\r\n            ref={bindInput}\r\n            min={min}\r\n            max={max}\r\n            step={step}\r\n            value={value || 0}\r\n            onChange={event => setValue(event.target.value)}\r\n        />\r\n    );\r\n}\r\n","import {anyType, getType, TYPE_MAP} from '../../../block-types/types';\r\nimport React, {useContext} from 'react';\r\nimport EventsContext, {ERROR_EVENT} from '../../../contexts/EventsContext';\r\nimport classNames from 'classnames';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\nimport getDefaultLabel from '../../../utils/getDefaultLabel';\r\n\r\nexport default function TypeSelect({value, constraintType, abstract, invalid, onChange, ...others}) {\r\n\r\n    constraintType = constraintType || anyType;\r\n\r\n    const types = [...TYPE_MAP.values()]\r\n        .filter(type => (abstract || !type.data.abstract) && constraintType.isSubtype(type));\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    if(value) {\r\n        try {\r\n            value = getType(value);\r\n        }\r\n        catch(err) {\r\n            onChange(value = undefined);///\r\n            // console.error(err);\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    }\r\n\r\n    invalid = invalid || !value || !types.some(t => t.isSubtype(value));\r\n\r\n    // if(invalid && types.length) {\r\n    //     let firstType = types[0];\r\n    //     if(firstType) {\r\n    //         onChange(value = firstType);\r\n    //     }\r\n    //     // value = constraintType;\r\n    // }\r\n\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <>\r\n            <select\r\n                className={classNames(invalid && 'invalid')}\r\n                value={value?.name}\r\n                onChange={event => onChange(getType(event.target.value))}\r\n                {...others}>\r\n                {invalid && <option label=\"(Type)\" value={value?.name}/>}\r\n                {types.map(type => (\r\n                    <option key={type.name} label={type.name} value={type.name}/>\r\n                ))}\r\n            </select>\r\n            <div className=\"ps-2\">\r\n                {value?.generics?.map((type, i) => (\r\n                    <TypeSelect\r\n                        key={i}\r\n                        value={type}\r\n                        constraintType={value.data.baseType.generics[i]}\r\n                        data-tip={getDefaultLabel(value.data.genericNames?.[i])}\r\n                        onChange={t => {\r\n                            let generics = [...value.generics];\r\n                            generics.splice(i, 1, t);\r\n                            onChange(getType({\r\n                                ...value.toJSON(),\r\n                                generics,\r\n                            }));\r\n                        }}/>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}","import TextControlHandle from '../components/rete/controls/TextControlHandle';\r\nimport CheckboxControlHandle from '../components/rete/controls/CheckboxControlHandle';\r\nimport NumberControlHandle from '../components/rete/controls/NumberControlHandle';\r\nimport TypeControlHandle from '../components/rete/controls/TypeControlHandle';\r\nimport NodeControlHandle from '../components/rete/controls/NodeControlHandle';\r\n\r\nclass Type {\r\n    constructor(name, parent, generics, data = {}, meta = {}) {\r\n        if(name instanceof Type) {\r\n            throw new Error(`Type cannot be named ${name}`);\r\n        }\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.generics = generics.map(type => getType(type));\r\n        this.data = data;\r\n        this.meta = meta;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            generics: this.generics.map(t => t.toJSON()),\r\n        };\r\n    }\r\n\r\n    of(...generics) {\r\n        return getType(this, generics);\r\n    }\r\n\r\n    withMeta(meta) {\r\n        let type = buildType(this.name, this, this.generics);\r\n        Object.assign(type.meta, meta);\r\n        return type;\r\n    }\r\n\r\n    isAbstract() {\r\n        return this.data.abstract || this.generics.some(type => type.isAbstract());\r\n    }\r\n\r\n    getDefaultValue() {\r\n        let value = this.data.defaultValue;\r\n        return typeof value === 'function' ? value(this) : value;\r\n    }\r\n\r\n    equals(other) {\r\n        return this.name === other.name && this.generics.length === other.generics.length && this.generics.every((t, i) => t.equals(other.generics[i]));\r\n    }\r\n\r\n    isSubtype(other) {\r\n        if(!other) {\r\n            return false;\r\n        }\r\n        if(this.name === other.name) {\r\n            return this.generics.length === other.generics.length && this.generics.every((t, i) => t.isSubtype(other.generics[i]));\r\n        }\r\n        return !!other.parent && this.isSubtype(other.parent);\r\n    }\r\n\r\n    getSharedType(other) {\r\n        if(!other) {\r\n            return;\r\n        }\r\n        if(this === other) {\r\n            return this;\r\n        }\r\n        if(this.isSubtype(other)) {\r\n            return this;\r\n        }\r\n        if(other.isSubtype(this)) {\r\n            return other;\r\n        }\r\n        if(this.parent) {\r\n            return this.parent.getSharedType(other);\r\n        }\r\n    }\r\n\r\n    toTypeString() {\r\n        return this.data.toTypeString?.call(this) ?? this.name + (this.generics.length ? '<' + this.generics.map(g => g.toTypeString()).join(', ') + '>' : '');\r\n    }\r\n\r\n    toString() {\r\n        return `Type(${this.toTypeString()})`;\r\n    }\r\n}\r\n\r\nexport const TYPE_MAP = new Map();\r\n\r\nexport const anyType = createType('Any', {\r\n    category: 'default',\r\n    reversed: false,\r\n});\r\nexport const anyReversedType = createType('AnyReversed', {\r\n    category: 'default',\r\n    // parent: anyType,\r\n    reversed: true,\r\n});\r\n\r\nexport const typeType = createType('Type', {\r\n    parent: anyType,\r\n    category: 'types',\r\n    controlType: TypeControlHandle,\r\n    defaultValue: type => type.generics[0],\r\n    generics: [anyType],\r\n});\r\nexport const nodeType = createType('Node', {\r\n    parent: anyType,\r\n    category: 'nodes',\r\n    controlType: NodeControlHandle,\r\n    toTypeString() {\r\n        return this.meta.block ? `Node{block=${JSON.stringify(this.meta.block)}}` : 'Node';\r\n    },\r\n});\r\n\r\n// High-level type categories\r\nexport const valueType = createType('Value', {\r\n    abstract: true,\r\n    parent: anyType,\r\n    category: 'values',\r\n});\r\nexport const identifierType = createType('Identifier', {\r\n    parent: anyType,\r\n    controlType: TextControlHandle,\r\n    // defaultValue: '',\r\n    validation: {\r\n        pattern: /^[a-zA-Z][a-zA-Z0-9_]*$/,\r\n    },\r\n});\r\nexport const effectType = createType('Effect', {\r\n    parent: anyReversedType,\r\n    category: 'effects',\r\n    generics: [valueType],\r\n    toMotoko([value]) {\r\n        return value;\r\n    },\r\n});\r\nexport const memberType = createType('Member', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'members',\r\n});\r\nexport const actorType = createType('Actor', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'actors',\r\n});\r\nexport const moduleType = createType('Module', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'modules',\r\n});\r\nexport const paramType = createType('Param', {\r\n    parent: anyReversedType,\r\n    category: 'parameters',\r\n});\r\n\r\n// Value types\r\nexport const boolType = createType('Bool', {\r\n    parent: valueType,\r\n    controlType: CheckboxControlHandle,\r\n    defaultValue: false,\r\n});\r\nexport const charType = createType('Char', {\r\n    parent: valueType,\r\n    controlType: TextControlHandle,\r\n    validation: {\r\n        minLength: 1,\r\n        maxLength: 1,\r\n    },\r\n});\r\nexport const textType = createType('Text', {\r\n    parent: valueType,\r\n    controlType: TextControlHandle,\r\n    defaultValue: '',\r\n});\r\nexport const floatType = createType('Float', {\r\n    parent: valueType,\r\n    controlType: NumberControlHandle,\r\n    defaultValue: 0,\r\n});\r\nexport const intType = createType('Int', {\r\n    parent: floatType,\r\n    category: 'integers',\r\n    controlType: NumberControlHandle,\r\n    validation: {\r\n        step: 1,\r\n    },\r\n});\r\nexport const natType = createType('Nat', {\r\n    parent: floatType,\r\n    category: 'naturals',\r\n    validation: {\r\n        step: 1,\r\n        min: 0,\r\n    },\r\n});\r\nexport const blobType = createType('Blob', {\r\n    parent: valueType,\r\n});\r\nexport const principalType = createType('Principal', {\r\n    parent: valueType,\r\n});\r\nexport const errorType = createType('Error', {\r\n    parent: valueType,\r\n});\r\nexport const tupleType = createType('Tuple', {\r\n    abstract: true,\r\n    arbitraryGenerics: true,\r\n    parent: valueType,\r\n    category: 'tuples',\r\n    // controlType: ,\r\n    toTypeString() {\r\n        return this === tupleType ? this.name : `(${this.generics.map(t => t.toTypeString()).join(', ')})`;\r\n    },\r\n});\r\n// export const unitType = createType('Unit', {\r\n//     parent: tupleType,\r\n// });\r\nexport const unitType = tupleType.of();\r\nexport const objectType = createType('Object', {\r\n    abstract: true,\r\n    arbitraryGenerics: true,\r\n    parent: valueType,\r\n    category: 'objects',\r\n    // controlType: ,\r\n    toTypeString() {\r\n        return `(${this.generics.map((t, i) => `${this.genericNames[i]}: ${t.toTypeString()}`).join(', ')})`;\r\n    },\r\n});\r\nexport const functionType = createType('Function', {\r\n    parent: valueType,\r\n    generics: [valueType, valueType],\r\n    genericNames: ['input', 'output'],\r\n    category: 'functions',\r\n    toTypeString() {\r\n        return `${this.generics[0].toTypeString()} -> ${this.generics[1].toTypeString()}`;\r\n    },\r\n});\r\nexport const optionalType = createType('Optional', {\r\n    parent: valueType,\r\n    generics: [valueType],\r\n    category: 'optionals',\r\n    toMotoko([value]) {\r\n        return `?${value}`;\r\n    },\r\n});\r\nexport const asyncType = createType('Async', {\r\n    parent: valueType,\r\n    generics: [valueType],\r\n    category: 'futures',\r\n    toMotoko([value]) {\r\n        return `async ${value}`;\r\n    },\r\n});\r\n// export const andType = createType('And', {\r\n//     parent: valueType,\r\n//     generics: [valueType, valueType],\r\n//     toMotoko([a, b]) {\r\n//         return `(${a} and ${b})`;\r\n//     },\r\n// });\r\n\r\n// // Fixed-size int values\r\n// export const int64Type = createType('Int64', {\r\n//     parent: intType,\r\n//     validation: getIntValidation(64),\r\n// });\r\n// export const int32Type = createType('Int32', {\r\n//     parent: int64Type,\r\n//     validation: getIntValidation(32),\r\n// });\r\n// export const int16Type = createType('Int16', {\r\n//     parent: int32Type,\r\n//     validation: getIntValidation(16),\r\n// });\r\n// export const int8Type = createType('Int8', {\r\n//     parent: int16Type,\r\n//     validation: getIntValidation(8),\r\n// });\r\n//\r\n// // Fixed-size nat values\r\n// export const nat64Type = createType('Nat64', {\r\n//     parent: natType,\r\n//     validation: getNatValidation(64),\r\n// });\r\n// export const nat32Type = createType('Nat32', {\r\n//     parent: nat64Type,\r\n//     validation: getNatValidation(32),\r\n// });\r\n// export const nat16Type = createType('Nat16', {\r\n//     parent: nat32Type,\r\n//     validation: getNatValidation(16),\r\n// });\r\n// export const nat8Type = createType('Nat8', {\r\n//     parent: nat16Type,\r\n//     validation: getNatValidation(8),\r\n// });\r\n\r\n// function getNatValidation(n) {\r\n//     return {\r\n//         ...natType.data.validation,\r\n//         max: 2 ** n - 1,\r\n//     };\r\n// }\r\n//\r\n// function getIntValidation(n) {\r\n//     let x = 2 ** (n - 1);\r\n//     return {\r\n//         ...intType.data.validation,\r\n//         min: -x,\r\n//         max: x - 1,\r\n//     };\r\n// }\r\n\r\n// Create a global type\r\nfunction createType(name, data) {\r\n    let {parent} = data;\r\n    let {generics = [], meta = {}, ...other} = data;\r\n    let type = buildType(name, parent, generics, other, meta);\r\n    type.data.baseType = type;///\r\n    TYPE_MAP.set(name, type);\r\n    return type;\r\n}\r\n\r\n// Get or create a generic version of the given type\r\nfunction getGenericType(parent, generics) {\r\n    if(typeof parent === 'string') {\r\n        parent = getType(parent);\r\n    }\r\n    if((!generics || !generics.length || generics === parent.generics) && !parent.data.arbitraryGenerics) {\r\n        return getType(parent);\r\n    }\r\n    let type = buildType(parent.name, parent, generics);\r\n    if(!parent.isSubtype(type)) {\r\n        throw new Error(`Generics not assignable to ${parent.toTypeString()} from ${type.toTypeString()}`);\r\n    }\r\n    return type;\r\n}\r\n\r\n// Instantiate a new type\r\nfunction buildType(name, parent, generics, data = {}, meta = {}) {\r\n    // Special cases for data inheritance\r\n    let {\r\n        abstract,\r\n        arbitraryGenerics,\r\n        ...parentData\r\n    } = parent ? parent.data : {};\r\n    let parentMeta = parent ? parent.meta : {};\r\n    return new Type(\r\n        name,\r\n        parent || null,\r\n        generics || (parent ? parent.generics : []),\r\n        {...parentData, ...data},\r\n        {...parentMeta, ...meta},\r\n    );\r\n}\r\n\r\n// Get or create a type\r\nexport function getType(name, generics) {\r\n    if(arguments.length > 1) {\r\n        return getGenericType(name, generics);\r\n    }\r\n    if(name instanceof Type) {\r\n        return name;\r\n    }\r\n    if(typeof name === 'object') {\r\n        return getGenericType(name.name, (name.generics || []).map(t => getType(t)));\r\n    }\r\n    if(!name) {\r\n        throw new Error(`Invalid type: ${name}`);\r\n    }\r\n    if(!TYPE_MAP.has(name)) {\r\n        throw new Error(`Unknown type: ${name}`);\r\n    }\r\n    return TYPE_MAP.get(name);\r\n}\r\n","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport TypeSelect from '../../common/inputs/TypeSelect';\r\n\r\n\r\nexport default function TypeControlHandle({control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let constraintType = control.config.type.generics[0];\r\n\r\n    let invalid = !control.validate(value);\r\n\r\n    return (\r\n        <div ref={bindInput}>\r\n            <TypeSelect\r\n                value={value}\r\n                constraintType={constraintType}\r\n                invalid={invalid}\r\n                onChange={setValue}>\r\n            </TypeSelect>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useContext, useState} from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../contexts/EventsContext';\r\nimport useListener from '../../../hooks/useListener';\r\nimport getNodeLabel from '../../../utils/getNodeLabel';\r\nimport classNames from 'classnames';\r\nimport {getBlock} from '../../../editor/blocks';\r\n\r\n\r\nexport default function NodeControlHandle({editor, control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let [nodes, setNodes] = useState(() => [...editor.nodes]);\r\n\r\n    let events = useContext(EventsContext);\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => setNodes([...editor.nodes]));\r\n\r\n    let blockName = control.config.type?.meta.block;///\r\n    let blockFilter = blockName && (Array.isArray(blockName) ? blockName : [blockName]).map(block => {\r\n        let name = typeof block === 'string' ? block : block.name;\r\n        getBlock(name); // Ensure block exists\r\n        return name;\r\n    });\r\n\r\n    if(blockFilter) {\r\n        nodes = nodes.filter(n => !blockFilter || blockFilter.includes(n.name));\r\n    }\r\n\r\n    let invalid = !value || !nodes.some(n => String(n.id) === String(value) && (!blockFilter || blockFilter.includes(n.name)));\r\n\r\n    // TODO: cleanly prevent number -> string id conversion\r\n    return (\r\n        <select\r\n            ref={bindInput}\r\n            className={classNames(invalid && 'invalid')}\r\n            style={{maxWidth: '100%'}}\r\n            value={value}\r\n            onChange={event => setValue(event.target.value || undefined)}>\r\n            <option key={-1} label={'(Select a Node)'} value={undefined}/>\r\n            {nodes.map(node => (\r\n                <option key={node.id} label={getNodeLabel(node, editor)} value={node.id}/>\r\n            ))}\r\n        </select>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\n\r\n\r\nexport default function CheckboxControlHandle({control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    return (\r\n        <label ref={bindInput}>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={!!value}\r\n                onChange={event => setValue(event.target.checked)}\r\n            />\r\n            <span className=\"input-title my-0\" style={{verticalAlign: 'top'}}>{control.name}</span>\r\n        </label>\r\n    );\r\n}\r\n","import {\r\n    FaCode,\r\n    FaCubes,\r\n    FaDatabase,\r\n    FaEject,\r\n    FaFilter,\r\n    FaFont,\r\n    FaLongArrowAltRight,\r\n    FaNetworkWired,\r\n    FaPlusCircle,\r\n    FaStream,\r\n    FaTextHeight,\r\n} from 'react-icons/fa';\r\n\r\nclass Category {\r\n    constructor(name, parent, data = {}) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.root = parent ? parent.root : this;\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nconst CATEGORY_MAP = new Map();\r\n\r\nfunction createCategory(data) {\r\n    let {name, parent, ...other} = data;\r\n    let category = new Category(name, parent, parent ? {...parent.data, ...other} : other);\r\n    CATEGORY_MAP.set(category.name, category);\r\n    return category;\r\n}\r\n\r\nexport function getCategory(name) {\r\n    if(name instanceof Category) {\r\n        return name;\r\n    }\r\n    if(!CATEGORY_MAP.has(name)) {\r\n        throw new Error(`Could not find category with name: ${name}`);\r\n    }\r\n    return CATEGORY_MAP.get(name);\r\n}\r\n\r\n\r\nexport const defaultCategory = createCategory('Default', {});\r\nexport const stateCategory = createCategory({\r\n    name: 'State',\r\n    color: '#3fd',\r\n    icon: FaDatabase,\r\n});\r\nexport const functionCategory = createCategory({\r\n    name: 'Function',\r\n    color: '#fd3',\r\n    icon: FaCubes,\r\n});\r\nexport const paramCategory = createCategory({\r\n    name: 'Param',\r\n    color: '#a8f',\r\n    icon: FaLongArrowAltRight,\r\n});\r\nexport const typeCategory = createCategory({\r\n    name: 'Type',\r\n    color: '#2af',\r\n    icon: FaTextHeight,\r\n});\r\nexport const compilerCategory = createCategory({\r\n    name: 'Compiler',\r\n    color: '#f5a',\r\n    icon: FaCode,\r\n});\r\nexport const expressionCategory = createCategory({\r\n    name: 'Expression',\r\n    color: '#aaa',\r\n    icon: FaEject,\r\n});\r\nexport const operatorCategory = createCategory({\r\n    name: 'Operator',\r\n    // color: '#57f',\r\n    icon: FaFilter,\r\n});\r\nexport const actorCategory = createCategory({\r\n    name: 'Actor',\r\n    color: '#fa8',\r\n    icon: FaFont,\r\n});\r\nexport const effectCategory = createCategory({\r\n    name: 'Effect',\r\n    // color: '#57f',\r\n    icon: FaStream,\r\n});\r\nexport const literalCategory = createCategory({\r\n    name: 'Literal',\r\n    // color: '#8fa',\r\n    icon: FaPlusCircle,\r\n});\r\nexport const decompositionCategory = createCategory({\r\n    name: 'Decomposition',\r\n    // color: '#8fa',\r\n    icon: FaNetworkWired,\r\n});\r\n","import React from 'react';\r\nimport EventEmitter from 'events';\r\n\r\nexport const EDITOR_CHANGE_EVENT = 'editor-change';\r\nexport const EDITOR_SAVE_EVENT = 'editor-save';\r\nexport const PROJECT_EXPORT_EVENT = 'project-export';\r\nexport const PROJECT_LOAD_EVENT = 'project-load';\r\nexport const PROJECT_CLEAR_EVENT = 'project-clear';\r\nexport const ERROR_EVENT = 'error';\r\n\r\n// TODO: fix HMR memory leak\r\n\r\nconst events = new EventEmitter();\r\nevents.setMaxListeners(1000);\r\nevents.on(ERROR_EVENT, console.error);\r\n\r\n// Browser debug\r\nwindow.EVENTS = events;\r\n\r\nexport default React.createContext(events);\r\n","import {boolType, floatType, getType} from '../block-types/types';\r\nimport {operatorCategory} from '../block-categories/categories';\r\n\r\nexport function unaryOperatorBlock(type, symbol, evaluate) {\r\n    type = getType(type);\r\n    return {\r\n        topRight: 'result',\r\n        title: `(${symbol} a)`,\r\n        category: operatorCategory,\r\n        inputs: [{\r\n            key: 'input',\r\n            title: 'a',\r\n            type,\r\n        }],\r\n        outputs: [{\r\n            key: 'result',\r\n            type,\r\n            toMotoko({input}) {\r\n                return `${symbol}(${input})`;\r\n            },\r\n            // inferType({input}) {\r\n            //     return input;\r\n            // },\r\n        }],\r\n    };\r\n}\r\n\r\nexport function binaryOperatorBlock(type, symbol, evaluate) {\r\n    let [inputType, resultType] = Array.isArray(type) ? type : [type, type];\r\n\r\n    inputType = getType(inputType);\r\n    resultType = getType(resultType);\r\n\r\n    return {\r\n        topRight: 'result',\r\n        title: `(a ${symbol} b)`,\r\n        category: operatorCategory,\r\n        inputs: [{\r\n            key: 'left',\r\n            title: 'a',\r\n            type: inputType,\r\n        }, {\r\n            key: 'right',\r\n            title: 'b',\r\n            type: inputType,\r\n        }],\r\n        outputs: [{\r\n            key: 'result',\r\n            type: resultType,\r\n            toMotoko({left, right}) {\r\n                return `(${left} ${symbol} ${right})`;\r\n            },\r\n            // inferType({left, right}) {\r\n            //     return left.getSharedType(right);\r\n            // },\r\n        }],\r\n    };\r\n}\r\n\r\nexport function arithmeticOperatorBlock(...args) {\r\n    return binaryOperatorBlock(floatType, ...args);\r\n}\r\n\r\nexport function numberComparisonOperatorBlock(...args) {\r\n    return binaryOperatorBlock([floatType, boolType], ...args);\r\n}","import { Engine } from './index';\r\nimport { NodeData, WorkerInputs, WorkerOutputs } from '../core/data';\r\n\r\nexport abstract class Component {\r\n\r\n    name: string;\r\n    data: unknown = {};\r\n    engine: Engine | null = null;\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    abstract worker(node: NodeData, inputs: WorkerInputs, outputs: WorkerOutputs, ...args: unknown[]): void;\r\n}","import { Connection } from './connection';\r\nimport { Control } from './control';\r\nimport { Input } from './input';\r\nimport { Output } from './output';\r\nimport { InputsData, NodeData, OutputsData } from './core/data';\r\n\r\nexport class Node {\r\n\r\n    name: string;\r\n    id: number;\r\n    position: [number, number] = [0.0, 0.0];\r\n    inputs = new Map<string, Input>();\r\n    outputs = new Map<string, Output>();\r\n    controls = new Map<string, Control>();\r\n    data: {[key: string]: unknown} = {};\r\n    meta: {[key: string]: unknown} = {};\r\n\r\n    static latestId = 0;\r\n    \r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.id = Node.incrementId();\r\n    }\r\n\r\n    _add<T extends any>(list: Map<string, T>, item: T, prop: string) {\r\n        if (list.has(item.key))\r\n            throw new Error(`Item with key '${item.key}' already been added to the node`);\r\n        if (item[prop] !== null)\r\n            throw new Error('Item has already been added to some node');\r\n        \r\n        item[prop] = this;\r\n        list.set(item.key, item);\r\n    }\r\n\r\n    addControl(control: Control) {\r\n        this._add(this.controls, control, 'parent');\r\n        return this;\r\n    }\r\n\r\n    removeControl(control: Control) {\r\n        control.parent = null;\r\n\r\n        this.controls.delete(control.key);\r\n    }\r\n\r\n    addInput(input: Input) {\r\n        this._add(this.inputs, input, 'node');\r\n        return this;\r\n    }\r\n\r\n    removeInput(input: Input) {\r\n        input.removeConnections();\r\n        input.node = null;\r\n\r\n        this.inputs.delete(input.key);\r\n    }\r\n\r\n    addOutput(output: Output) {\r\n        this._add(this.outputs, output, 'node');\r\n        return this;\r\n    }\r\n\r\n    removeOutput(output: Output) {\r\n        output.removeConnections();\r\n        output.node = null;\r\n\r\n        this.outputs.delete(output.key);\r\n    }\r\n\r\n    getConnections() {\r\n        const ios = [...this.inputs.values(), ...this.outputs.values()];\r\n        const connections = ios.reduce((arr, io) => {\r\n            return [...arr, ...io.connections];\r\n        }, [] as Connection[]);\r\n\r\n        return connections;\r\n    }\r\n\r\n    update() {}\r\n\r\n    static incrementId() {\r\n        if (!this.latestId)\r\n            this.latestId = 1\r\n        else\r\n            this.latestId++\r\n        return this.latestId\r\n    }\r\n\r\n    static resetId() {\r\n        this.latestId = 0;\r\n    }\r\n\r\n    toJSON(): NodeData {\r\n        const reduceIO = <T extends any>(list: Map<string, Input | Output>) => {\r\n            return Array.from(list).reduce<T>((obj, [key, io]) => {\r\n                obj[key] = io.toJSON();\r\n                return obj;\r\n            }, {} as any)\r\n        }\r\n\r\n        return {\r\n            'id': this.id,\r\n            'data': this.data,\r\n            'inputs': reduceIO<InputsData>(this.inputs),\r\n            'outputs': reduceIO<OutputsData>(this.outputs),\r\n            'position': this.position,\r\n            'name': this.name\r\n        }\r\n    }\r\n\r\n    static fromJSON(json: NodeData) {\r\n        const node = new Node(json.name);\r\n        const [x, y] = json.position;\r\n\r\n        node.id = json.id;\r\n        node.data = json.data;\r\n        node.position = [x, y];\r\n        node.name = json.name;\r\n        Node.latestId = Math.max(node.id, Node.latestId);\r\n\r\n        return node;\r\n    }\r\n}\r\n","import { Component as ComponentWorker } from './engine/component';\r\nimport { Node } from './node';\r\nimport { NodeEditor } from './editor';\r\n\r\nexport abstract class Component extends ComponentWorker {\r\n\r\n    editor: NodeEditor | null = null;\r\n    data: unknown = {};\r\n\r\n    constructor(name: string) {\r\n        super(name);\r\n    }\r\n\r\n    abstract async builder(node: Node): Promise<void>;\r\n\r\n    async build(node: Node) {\r\n        await this.builder(node);\r\n\r\n        return node;\r\n    }\r\n\r\n    async createNode(data = {}) {\r\n        const node = new Node(this.name);\r\n        \r\n        node.data = data;\r\n        await this.build(node);\r\n\r\n        return node;\r\n    }\r\n}","import { Input } from './input';\r\nimport { Output } from './output';\r\n\r\nexport class Connection {\r\n\r\n    output: Output;\r\n    input: Input;\r\n    data: unknown = {};\r\n\r\n    constructor(output: Output, input: Input) {\r\n        this.output = output;\r\n        this.input = input;\r\n        this.data = {};\r\n\r\n        this.input.addConnection(this);\r\n    }\r\n\r\n    remove() {\r\n        this.input.removeConnection(this);\r\n        this.output.removeConnection(this);\r\n    }\r\n}","import { Input } from './input';\r\nimport { Node } from './node';\r\n\r\nexport class Control {\r\n\r\n    key: string;\r\n    data: unknown = {};\r\n    parent: Node | Input | null = null;\r\n\r\n    constructor(key: string) {\r\n        if (this.constructor === Control)\r\n            throw new TypeError('Can not construct abstract class');\r\n        if (!key)\r\n            throw new Error('The key parameter is missing in super() of Control ');\r\n\r\n        this.key = key;\r\n    }\r\n\r\n    getNode() {\r\n        if (this.parent === null)\r\n            throw new Error('Control isn\\'t added to Node/Input');   \r\n        \r\n        if (this.parent instanceof Node)\r\n            return this.parent;\r\n            \r\n        if (!this.parent.node)\r\n            throw new Error('Control hasn\\'t be added to Input or Node');\r\n\r\n        return this.parent.node;\r\n    }\r\n\r\n    getData(key: string) {\r\n        return this.getNode().data[key];\r\n    }\r\n\r\n    putData(key: string, data: unknown) {\r\n        this.getNode().data[key] = data;\r\n    }  \r\n}","import { Events } from './events';\r\n\r\nexport class Emitter<EventTypes> {\r\n\r\n    events: {[key: string]: Function[]} = {};\r\n    silent = false;\r\n\r\n    constructor(events: Events | Emitter<EventTypes>) {\r\n        this.events = events instanceof Emitter ? events.events : events.handlers;\r\n    }\r\n\r\n    on<K extends keyof EventTypes>(names: K | K[], handler: (args: EventTypes[K]) => void | unknown): this {\r\n        const events = names instanceof Array ? names : (names as string).split(' ');\r\n\r\n        (events as string[]).forEach(name => {\r\n            if (!this.events[name])\r\n                throw new Error(`The event ${name} does not exist`);\r\n            this.events[name].push(handler);\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    trigger<K extends keyof EventTypes>(name: K, params: EventTypes[K] | {} = {}) {\r\n        if (!(name in this.events))\r\n            throw new Error(`The event ${name} cannot be triggered`);\r\n\r\n        return this.events[name as string].reduce((r: boolean, e: Function) => {\r\n            return (e(params) !== false) && r\r\n        }, true); // return false if at least one event is false        \r\n    }\r\n\r\n    bind(name: string) {\r\n        if (this.events[name])\r\n            throw new Error(`The event ${name} is already bound`);\r\n\r\n        this.events[name] = [];\r\n    }\r\n\r\n    exist(name: string) {\r\n        return Array.isArray(this.events[name]);\r\n    }\r\n}","import { Connection } from './connection';\r\nimport { Node } from './node';\r\nimport { Socket } from './socket';\r\n\r\nexport class IO {\r\n\r\n    node: Node | null = null;\r\n    multipleConnections: boolean;\r\n    connections: Connection[] = [];\r\n   \r\n    key: string;\r\n    name: string;\r\n    socket: Socket;\r\n\r\n    constructor(key: string, name: string, socket: Socket, multiConns: boolean) {\r\n\t    this.node = null;\r\n        this.multipleConnections = multiConns;\r\n        this.connections = [];\r\n\t   \r\n        this.key = key;\r\n        this.name = name;\r\n        this.socket = socket;\r\n    }\r\n    \r\n    removeConnection(connection: Connection) {\r\n        this.connections.splice(this.connections.indexOf(connection), 1);\r\n    }\r\n\r\n    removeConnections() {\r\n        this.connections.forEach(connection => this.removeConnection(connection));\r\n    }\r\n}","import { Connection } from './connection';\r\nimport { Control } from './control';\r\nimport { IO } from './io';\r\nimport { InputData } from './core/data';\r\nimport { Socket } from './socket';\r\n\r\nexport class Input extends IO {\r\n   \r\n    control: Control | null = null;\r\n\r\n    constructor(key: string, title: string, socket: Socket, multiConns: boolean = false) {\r\n        super(key, title, socket, multiConns);\r\n    }\r\n\r\n    hasConnection() {\r\n        return this.connections.length > 0;\r\n    }\r\n\r\n    addConnection(connection: Connection) {\r\n        if (!this.multipleConnections && this.hasConnection())\r\n            throw new Error('Multiple connections not allowed');\r\n        this.connections.push(connection);\r\n    }\r\n\r\n    addControl(control: Control) {\r\n        this.control = control;\r\n        control.parent = this;\r\n    }\r\n\r\n    showControl() {\r\n        return !this.hasConnection() && this.control !== null;\r\n    }\r\n\r\n    toJSON(): InputData {\r\n        return {\r\n            'connections': this.connections.map(c => {\r\n                if (!c.output.node) throw new Error('Node not added to Output');\r\n\r\n                return {\r\n                    node: c.output.node.id,\r\n                    output: c.output.key,\r\n                    data: c.data\r\n                };\r\n            })\r\n        };\r\n    }\r\n}","import { Data } from './data';\r\n\r\nexport class Validator {\r\n\r\n    static isValidData(data: Data) {\r\n        return typeof data.id === 'string' &&\r\n            this.isValidId(data.id) &&\r\n            data.nodes instanceof Object && !(data.nodes instanceof Array);\r\n    }\r\n\r\n    static isValidId(id: string) {\r\n        return /^[\\w-]{3,}@[0-9]+\\.[0-9]+\\.[0-9]+$/.test(id);\r\n    }\r\n\r\n    static validate(id: string, data: Data) {\r\n        const id1 = id.split('@');\r\n        const id2 = data.id.split('@');\r\n        let msg = [];\r\n\r\n        if (!this.isValidData(data))\r\n            msg.push('Data is not suitable'); \r\n        if (id !== data.id)\r\n            msg.push('IDs not equal');\r\n        if (id1[0] !== id2[0])\r\n            msg.push('Names don\\'t match');\r\n        if (id1[1] !== id2[1])\r\n            msg.push('Versions don\\'t match');\r\n\r\n        return { success: Boolean(!msg.length), msg: msg.join('. ') };\r\n    }\r\n}","import { Component } from '../engine/component';\r\nimport { Emitter } from './emitter'\r\nimport { Validator } from './validator'\r\nimport { EventsTypes as DefaultEvents, Events } from './events';\r\nimport { Plugin, PluginParams } from './plugin';\r\n\r\nexport class Context<EventsTypes> extends Emitter<EventsTypes & DefaultEvents> {\r\n\r\n    id: string;\r\n    plugins: Map<string, unknown>;\r\n    components: Map<string, Component>;\r\n\r\n    constructor(id: string, events: Events) {\r\n        super(events);\r\n\r\n        if (!Validator.isValidId(id))\r\n            throw new Error('ID should be valid to name@0.1.0 format');  \r\n        \r\n        this.id = id;\r\n        this.plugins = new Map();\r\n        this.components = new Map();\r\n    }\r\n\r\n    use<T extends Plugin, O extends PluginParams<T>>(plugin: T, options?: O) {\r\n        if (plugin.name && this.plugins.has(plugin.name)) throw new Error(`Plugin ${plugin.name} already in use`)\r\n\r\n        plugin.install(this, options || {});\r\n        this.plugins.set(plugin.name, options)\r\n    }\r\n\r\n    register(component: Component) {\r\n        if (this.components.has(component.name))\r\n            throw new Error(`Component ${component.name} already registered`);\r\n\r\n        this.components.set(component.name, component);\r\n        this.trigger('componentregister', component);\r\n    }\r\n\r\n    destroy() {\r\n        this.trigger('destroy');\r\n    }\r\n}","export function listenWindow<K extends keyof WindowEventMap>(event: K, handler: (e: WindowEventMap[K]) => void) {\r\n    window.addEventListener(event, handler);\r\n    \r\n    return () => {\r\n        window.removeEventListener<K>(event, handler);\r\n    }\r\n}","import { listenWindow } from './utils';\r\n\r\nexport class Drag {\r\n\r\n    pointerStart: [number, number] | null;\r\n    el: HTMLElement;\r\n    destroy: () => void;\r\n    button: number = 0;\r\n\r\n    constructor(\r\n        el: HTMLElement,\r\n        private onTranslate = (_x: number, _y: number, _e: PointerEvent) => {},\r\n        private onStart = (_e: PointerEvent) => {},\r\n        private onDrag = (_e: PointerEvent) => {}\r\n    ) {\r\n        this.pointerStart = null;\r\n        this.el = el;\r\n\r\n        this.el.style.touchAction = 'none';\r\n        this.el.addEventListener('pointerdown', this.down.bind(this));\r\n\r\n        const destroyMove = listenWindow('pointermove', this.move.bind(this));\r\n        const destroyUp = listenWindow('pointerup', this.up.bind(this));\r\n\r\n        this.destroy = () => { destroyMove(); destroyUp(); }\r\n    }\r\n\r\n    down(e: PointerEvent) {\r\n        if ((e.pointerType === 'mouse') && (e.button !== this.button)) return;\r\n        e.stopPropagation();\r\n        this.pointerStart = [e.pageX, e.pageY]\r\n\r\n        this.onStart(e);\r\n    }\r\n\r\n    move(e: PointerEvent) {\r\n        if (!this.pointerStart) return;\r\n        e.preventDefault();\r\n\r\n        let [x, y] = [e.pageX, e.pageY]\r\n\r\n        let delta = [x - this.pointerStart[0], y - this.pointerStart[1]];\r\n\r\n        let zoom = this.el.getBoundingClientRect().width / this.el.offsetWidth;\r\n\r\n        this.onTranslate(delta[0] / zoom, delta[1] / zoom, e);\r\n    }\r\n\r\n    up(e: PointerEvent) {\r\n        if (!this.pointerStart) return;\r\n        \r\n        this.pointerStart = null;\r\n        this.onDrag(e);\r\n    }\r\n}","import { listenWindow } from './utils';\r\n\r\nexport class Zoom {\r\n\r\n    el: HTMLElement;\r\n    intensity: number;\r\n    onzoom: Function;\r\n    previous: { cx: number; cy: number; distance: number } | null = null;\r\n\r\n    pointers: PointerEvent[] = [];\r\n    destroy: () => void;\r\n\r\n    constructor(container: HTMLElement, el: HTMLElement, intensity: number, onzoom: Function) {\r\n        this.el = el;\r\n        this.intensity = intensity;\r\n        this.onzoom = onzoom;\r\n\r\n        container.addEventListener('wheel', this.wheel.bind(this));\r\n        container.addEventListener('pointerdown', this.down.bind(this));\r\n        container.addEventListener('dblclick', this.dblclick.bind(this));\r\n\r\n        const destroyMove = listenWindow('pointermove', this.move.bind(this));\r\n        const destroyUp = listenWindow('pointerup', this.end.bind(this));\r\n        const destroyCancel = listenWindow('pointercancel', this.end.bind(this));\r\n\r\n        this.destroy = () => { destroyMove(); destroyUp(); destroyCancel(); }\r\n    }\r\n\r\n    get translating() { // is translating while zoom (works on multitouch)\r\n        return this.pointers.length >= 2;\r\n    }\r\n\r\n    wheel(e: WheelEvent) {\r\n        e.preventDefault();\r\n\r\n        const rect = this.el.getBoundingClientRect();\r\n        const isNegative = e.deltaY < 0;\r\n        const delta = isNegative ? this.intensity : - this.intensity;\r\n        const ox = (rect.left - e.clientX) * delta;\r\n        const oy = (rect.top - e.clientY) * delta;\r\n\r\n        this.onzoom(delta, ox, oy, 'wheel');\r\n    }\r\n\r\n    touches() {\r\n        let e = { touches: this.pointers }\r\n        let [x1, y1] = [e.touches[0].clientX, e.touches[0].clientY];\r\n        let [x2, y2] = [e.touches[1].clientX, e.touches[1].clientY];\r\n\r\n        let distance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n\r\n        return {\r\n            cx: (x1 + x2)/2,\r\n            cy: (y1 + y2)/2,\r\n            distance\r\n        };\r\n    }\r\n\r\n    down(e: PointerEvent) {\r\n        this.pointers.push(e);\r\n    }\r\n\r\n    move(e: PointerEvent) {\r\n        this.pointers = this.pointers.map(p => p.pointerId === e.pointerId ? e : p)\r\n        if (!this.translating) return;\r\n\r\n        let rect = this.el.getBoundingClientRect();\r\n\r\n        let { cx, cy, distance } = this.touches();\r\n\r\n        if (this.previous !== null) {\r\n            let delta = distance / this.previous.distance - 1;\r\n\r\n            const ox = (rect.left - cx) * delta;\r\n            const oy = (rect.top - cy) * delta;\r\n\r\n            this.onzoom(delta, ox - (this.previous.cx - cx), oy - (this.previous.cy - cy), 'touch');\r\n        }\r\n        this.previous = { cx, cy, distance };\r\n    }\r\n\r\n    end(e: PointerEvent) {\r\n        this.previous = null;\r\n        this.pointers = this.pointers.filter(p => p.pointerId !== e.pointerId)\r\n    }\r\n\r\n    dblclick(e: MouseEvent) {\r\n        e.preventDefault();\r\n\r\n        const rect = this.el.getBoundingClientRect();\r\n        const delta = 4 * this.intensity;\r\n\r\n        const ox = (rect.left - e.clientX) * delta;\r\n        const oy = (rect.top - e.clientY) * delta;\r\n\r\n        this.onzoom(delta, ox, oy, 'dblclick');\r\n    }\r\n}\r\n","import { Drag } from './drag';\r\nimport { Emitter } from '../core/emitter';\r\nimport { EventsTypes } from '../events';\r\nimport { Zoom } from './zoom';\r\n\r\nexport interface Transform { k: number; x: number; y: number }\r\nexport interface Mouse { x: number; y: number }\r\nexport type ZoomSource = 'wheel' | 'touch' | 'dblclick';\r\n\r\nexport class Area extends Emitter<EventsTypes> {\r\n\r\n    el: HTMLElement;\r\n    container: HTMLElement;\r\n    transform: Transform = { k: 1, x: 0, y: 0 };\r\n    mouse: Mouse = { x: 0, y: 0 }\r\n    \r\n    private _startPosition: Transform | null = null\r\n    private _zoom: Zoom;\r\n    private _drag: Drag;\r\n\r\n    constructor(container: HTMLElement, emitter: Emitter<EventsTypes>) {\r\n        super(emitter);\r\n        \r\n        const el = this.el = document.createElement('div');\r\n\r\n        this.container = container;\r\n        el.style.transformOrigin = '0 0';\r\n\r\n        this._zoom = new Zoom(container, el, 0.1, this.onZoom.bind(this));\r\n        this._drag = new Drag(container, this.onTranslate.bind(this), this.onStart.bind(this));\r\n\r\n        emitter.on('destroy', () => {\r\n            this._zoom.destroy();\r\n            this._drag.destroy();\r\n        });\r\n\r\n        this.container.addEventListener('pointermove', this.pointermove.bind(this));\r\n\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        const t = this.transform;\r\n\r\n        this.el.style.transform = `translate(${t.x}px, ${t.y}px) scale(${t.k})`;\r\n    }\r\n\r\n    pointermove(e: PointerEvent) {\r\n        const { clientX, clientY } = e;\r\n        const rect = this.el.getBoundingClientRect();\r\n        const x = clientX - rect.left;\r\n        const y = clientY - rect.top;\r\n        const k = this.transform.k;\r\n        \r\n        this.mouse = { x: x / k, y: y / k };\r\n        this.trigger('mousemove', { ...this.mouse }); // TODO rename on `pointermove`\r\n    }\r\n\r\n    onStart() {\r\n        this._startPosition = { ...this.transform };\r\n    }\r\n\r\n    onTranslate(dx: number, dy: number) {\r\n        if (this._zoom.translating) return; // lock translation while zoom on multitouch\r\n        if (this._startPosition) this.translate(this._startPosition.x + dx, this._startPosition.y + dy);\r\n    }\r\n\r\n    onZoom(delta: number, ox: number, oy: number, source: ZoomSource) {\r\n        this.zoom(this.transform.k * (1 + delta), ox, oy, source);\r\n\r\n        this.update();\r\n    }\r\n\r\n    translate(x: number, y: number) {\r\n        const params = { transform: this.transform, x, y };\r\n\r\n        if (!this.trigger('translate', params)) return;\r\n\r\n        this.transform.x = params.x;\r\n        this.transform.y = params.y;\r\n\r\n        this.update();\r\n        this.trigger('translated');\r\n    }\r\n\r\n    zoom(zoom: number, ox = 0, oy = 0, source: ZoomSource) {\r\n        const k = this.transform.k;\r\n        const params = { transform: this.transform, zoom, source };\r\n\r\n        if (!this.trigger('zoom', params)) return;\r\n        \r\n        const d = (k - params.zoom) / ((k - zoom) || 1);\r\n\r\n        this.transform.k = params.zoom || 1;\r\n        this.transform.x += ox * d;\r\n        this.transform.y += oy * d;\r\n\r\n        this.update();\r\n        this.trigger('zoomed', { source });\r\n    }\r\n\r\n    appendChild(el: HTMLElement) {\r\n        this.el.appendChild(el)\r\n    }\r\n\r\n    removeChild(el: HTMLElement) {\r\n        this.el.removeChild(el)\r\n    }\r\n}","import { Connection } from '../connection';\r\nimport { Emitter } from '../core/emitter';\r\nimport { EventsTypes } from '../events';\r\nimport { NodeView } from './node';\r\n\r\nexport class ConnectionView extends Emitter<EventsTypes> {\r\n\r\n    connection: Connection;\r\n    inputNode: NodeView;\r\n    outputNode: NodeView;\r\n    el: HTMLElement;\r\n\r\n    constructor(connection: Connection, inputNode: NodeView, outputNode: NodeView, emitter: Emitter<EventsTypes>) {\r\n        super(emitter);\r\n        this.connection = connection;\r\n        this.inputNode = inputNode;\r\n        this.outputNode = outputNode;\r\n\r\n        this.el = document.createElement('div');\r\n        this.el.style.position = 'absolute';\r\n        this.el.style.zIndex = '-1';\r\n\r\n        this.trigger('renderconnection', { \r\n            el: this.el, \r\n            connection: this.connection, \r\n            points: this.getPoints()\r\n        });\r\n    }\r\n\r\n    getPoints() {\r\n        const [x1, y1] = this.outputNode.getSocketPosition(this.connection.output);\r\n        const [x2, y2] = this.inputNode.getSocketPosition(this.connection.input);\r\n\r\n        return [x1, y1, x2, y2];\r\n    }\r\n\r\n    update() {\r\n        this.trigger('updateconnection', { \r\n            el: this.el, \r\n            connection: this.connection, \r\n            points: this.getPoints()\r\n        });\r\n    }\r\n}","import { Control } from '../control';\r\nimport { Emitter } from '../core/emitter';\r\nimport { EventsTypes } from '../events';\r\n\r\nexport class ControlView extends Emitter<EventsTypes> {\r\n\r\n    constructor(el: HTMLElement, control: Control, emitter: Emitter<EventsTypes>) {\r\n        super(emitter);\r\n        this.trigger('rendercontrol', { el, control });\r\n    }\r\n}","import { Emitter } from '../core/emitter';\r\nimport { EventsTypes } from '../events';\r\nimport { IO } from '../io';\r\nimport { Node } from '../node';\r\n\r\nexport class SocketView extends Emitter<EventsTypes> {\r\n\r\n    el: HTMLElement;\r\n    type: string;\r\n    io: IO;\r\n    node: Node;\r\n\r\n    constructor(el: HTMLElement, type: string, io: IO, node: Node, emitter: Emitter<EventsTypes>) {\r\n        super(emitter);\r\n        this.el = el;\r\n        this.type = type;\r\n        this.io = io;\r\n        this.node = node;\r\n\r\n        this.trigger('rendersocket', { el, [type]: this.io, socket: io.socket });\r\n    }\r\n\r\n    getPosition({ position }: { position: number[] }): [number, number] {\r\n        const el = this.el;\r\n\r\n        return [\r\n            position[0] + el.offsetLeft + el.offsetWidth / 2,\r\n            position[1] + el.offsetTop + el.offsetHeight / 2\r\n        ]\r\n    }\r\n}","import { Component } from '../engine/component';\r\nimport { Control } from '../control';\r\nimport { ControlView } from './control';\r\nimport { Drag } from './drag';\r\nimport { Emitter } from '../core/emitter';\r\nimport { EventsTypes } from '../events';\r\nimport { IO } from '../io';\r\nimport { Node } from '../node';\r\nimport { SocketView } from './socket';\r\n\r\nexport class NodeView extends Emitter<EventsTypes> {\r\n\r\n    node: Node;\r\n    component: Component;\r\n    sockets = new Map<IO, SocketView>();\r\n    controls = new Map<Control, ControlView>();\r\n\r\n    el: HTMLElement;\r\n    private _startPosition: number[] = [];\r\n    private _drag: Drag;\r\n\r\n    constructor(node: Node, component: Component, emitter: Emitter<EventsTypes>) {\r\n        super(emitter);\r\n\r\n        this.node = node;\r\n        this.component = component;\r\n        this.el = document.createElement('div');\r\n        this.el.style.position = 'absolute';\r\n\r\n        this.el.addEventListener('contextmenu', e => this.trigger('contextmenu', { e, node: this.node }));\r\n\r\n        this._drag = new Drag(this.el, this.onTranslate.bind(this), this.onSelect.bind(this), () => {\r\n            this.trigger('nodedraged', node);\r\n            this.trigger('nodedragged', node);\r\n        });\r\n\r\n        this.trigger('rendernode', {\r\n            el: this.el, \r\n            node, \r\n            component: component.data, \r\n            bindSocket: this.bindSocket.bind(this),\r\n            bindControl: this.bindControl.bind(this)\r\n        });\r\n\r\n        this.update();\r\n    }\r\n\r\n    clearSockets() {\r\n        const ios: IO[] = [ ...this.node.inputs.values(), ...this.node.outputs.values()];\r\n        \r\n        this.sockets.forEach(s => {\r\n            if (!ios.includes(s.io)) this.sockets.delete(s.io);\r\n        });\r\n    }\r\n\r\n    bindSocket(el: HTMLElement, type: string, io: IO) {\r\n        this.clearSockets();\r\n        this.sockets.set(io, new SocketView(el, type, io, this.node, this));\r\n    }\r\n\r\n    bindControl(el: HTMLElement, control: Control) {\r\n        this.controls.set(control, new ControlView(el, control, this));\r\n    }\r\n\r\n    getSocketPosition(io: IO) {\r\n        const socket = this.sockets.get(io);\r\n\r\n        if (!socket) throw new Error(`Socket not found for ${io.name} with key ${io.key}`);\r\n\r\n        return socket.getPosition(this.node);\r\n    }\r\n\r\n    onSelect(e: MouseEvent) {\r\n        const payload = { node: this.node, accumulate: e.ctrlKey, e };\r\n    \r\n        this.onStart();\r\n        this.trigger('multiselectnode', payload);\r\n        this.trigger('selectnode', payload);\r\n    }\r\n\r\n    onStart() {\r\n        this._startPosition = [...this.node.position];\r\n    }\r\n\r\n    onTranslate(dx: number, dy: number) {\r\n        this.trigger('translatenode', { node: this.node, dx, dy });\r\n    }\r\n\r\n    onDrag(dx: number, dy: number) {\r\n        const x = this._startPosition[0] + dx;\r\n        const y = this._startPosition[1] + dy;\r\n\r\n        this.translate(x, y);\r\n    }\r\n\r\n    translate(x: number, y: number) {\r\n        const node = this.node;\r\n        const params = { node, x, y };\r\n\r\n        if (!this.trigger('nodetranslate', params)) return;\r\n\r\n        const [px, py] = node.position;\r\n        const prev: [number, number] = [px, py];\r\n\r\n        node.position[0] = params.x;\r\n        node.position[1] = params.y;\r\n\r\n        this.update();\r\n        this.trigger('nodetranslated', { node, prev });\r\n    }\r\n\r\n    update() {\r\n        const [x, y] = this.node.position;\r\n\r\n        this.el.style.transform = `translate(${x}px, ${y}px)`;\r\n    }\r\n\r\n    remove() {\r\n        \r\n    }\r\n\r\n    destroy() {\r\n        this._drag.destroy();\r\n    }\r\n}\r\n","import { Area } from './area';\r\nimport { Component } from '../engine/component';\r\nimport { Connection } from '../connection';\r\nimport { ConnectionView } from './connection';\r\nimport { Emitter } from '../core/emitter';\r\nimport { EventsTypes } from '../events';\r\nimport { Node } from '../node';\r\nimport { NodeView } from './node';\r\nimport { listenWindow } from './utils';\r\n\r\nexport class EditorView extends Emitter<EventsTypes> {\r\n\r\n    container: HTMLElement;\r\n    components: Map<string, Component>;\r\n    nodes = new Map<Node, NodeView>();\r\n    connections = new Map<Connection, ConnectionView>();\r\n    area: Area;\r\n\r\n    constructor(container: HTMLElement, components: Map<string, Component>, emitter: Emitter<EventsTypes>) {\r\n        super(emitter);\r\n\r\n        this.container = container;\r\n        this.components = components;\r\n\r\n        this.container.style.overflow = 'hidden';\r\n\r\n        this.container.addEventListener('click', this.click.bind(this));\r\n        this.container.addEventListener('contextmenu', e => this.trigger('contextmenu', { e, view: this }));\r\n        emitter.on('destroy', listenWindow('resize', this.resize.bind(this)));\r\n        emitter.on('destroy', () => this.nodes.forEach(view => view.destroy()));\r\n  \r\n        this.on('nodetranslated', this.updateConnections.bind(this));\r\n            \r\n        this.area = new Area(container, this);\r\n        this.container.appendChild(this.area.el);\r\n    }\r\n\r\n    addNode(node: Node) {\r\n        const component = this.components.get(node.name);\r\n\r\n        if (!component) throw new Error(`Component ${node.name} not found`);\r\n        \r\n        const nodeView = new NodeView(node, component, this);\r\n\r\n        this.nodes.set(node, nodeView);\r\n        this.area.appendChild(nodeView.el);\r\n    }\r\n\r\n    removeNode(node: Node) {\r\n        const nodeView = this.nodes.get(node);\r\n\r\n        this.nodes.delete(node);\r\n        if (nodeView) {\r\n            this.area.removeChild(nodeView.el);\r\n            nodeView.destroy();\r\n        }\r\n    }\r\n\r\n    addConnection(connection: Connection) {\r\n        if (!connection.input.node || !connection.output.node)\r\n            throw new Error('Connection input or output not added to node');\r\n\r\n        const viewInput = this.nodes.get(connection.input.node);\r\n        const viewOutput = this.nodes.get(connection.output.node);\r\n\r\n        if (!viewInput || !viewOutput)\r\n            throw new Error('View node not found for input or output');\r\n\r\n        const connView = new ConnectionView(connection, viewInput, viewOutput, this);\r\n\r\n        this.connections.set(connection, connView);\r\n        this.area.appendChild(connView.el);\r\n    }\r\n\r\n    removeConnection(connection: Connection) {\r\n        const connView = this.connections.get(connection);\r\n\r\n        this.connections.delete(connection);\r\n        if (connView)\r\n            this.area.removeChild(connView.el);\r\n    }\r\n\r\n    updateConnections({ node }: { node: Node }) {\r\n        node.getConnections().forEach(conn => {\r\n            let connView = this.connections.get(conn);\r\n\r\n            if (!connView) throw new Error('Connection view not found');\r\n\r\n            connView.update();\r\n        });\r\n    }\r\n\r\n    resize() {\r\n        const { container } = this;\r\n\r\n        if (!container.parentElement)\r\n            throw new Error('Container doesn\\'t have parent element');\r\n\r\n        const width = container.parentElement.clientWidth;\r\n        const height = container.parentElement.clientHeight;\r\n\r\n        container.style.width = width + 'px';\r\n        container.style.height = height + 'px';\r\n    }\r\n\r\n    click(e: Event) {\r\n        const container = this.container;\r\n        \r\n        if (container !== e.target) return;\r\n        if (!this.trigger('click', { e, container })) return;\r\n    }\r\n}\r\n","import { Node } from './node';\r\n\r\nexport class Selected {\r\n\r\n    list: Node[] = [];\r\n\r\n    add(item: Node, accumulate = false) {\r\n        if (!accumulate)\r\n            this.list = [item]; \r\n        else if (!this.contains(item))\r\n            this.list.push(item);   \r\n    }\r\n\r\n    clear() {\r\n        this.list = [];\r\n    }\r\n\r\n    remove(item: Node) {\r\n        this.list.splice(this.list.indexOf(item), 1);\r\n    }\r\n\r\n    contains(item: Node) {\r\n        return this.list.indexOf(item) !== -1;\r\n    }\r\n\r\n    each(callback: (n: Node, index: number) => void) {\r\n        this.list.forEach(callback);\r\n    }\r\n}","import { Component } from '../engine/component';\r\n\r\nexport class Events {\r\n\r\n    handlers: {};\r\n\r\n    constructor(handlers: {}) {\r\n        this.handlers = {\r\n            warn: [console.warn],\r\n            error: [console.error],\r\n            componentregister: [],\r\n            destroy: [],\r\n            ...handlers\r\n        }\r\n    }\r\n}\r\n\r\nexport interface EventsTypes {\r\n    warn: string | Error;\r\n    error: string | Error;\r\n    componentregister: Component;\r\n    destroy: void;\r\n}","import { Component } from './component';\r\nimport { Connection } from './connection';\r\nimport { Control } from './control';\r\nimport { Data } from './core/data';\r\nimport { EditorView } from './view';\r\nimport { Input } from './input';\r\nimport { Node } from './node';\r\nimport { Output } from './output';\r\nimport { Socket } from './socket';\r\nimport { EventsTypes as DefaultEventsTypes, Events } from './core/events';\r\nimport { Mouse, Transform, ZoomSource } from './view/area';\r\n\r\nexport class EditorEvents extends Events {\r\n\r\n    constructor() {\r\n        super({\r\n            nodecreate: [],\r\n            nodecreated: [],\r\n            noderemove: [],\r\n            noderemoved: [],\r\n            connectioncreate: [],\r\n            connectioncreated: [],\r\n            connectionremove: [],\r\n            connectionremoved: [],\r\n            translatenode: [],\r\n            nodetranslate: [],\r\n            nodetranslated: [],\r\n            nodedraged: [],\r\n            nodedragged: [],\r\n            selectnode: [],\r\n            multiselectnode: [],\r\n            nodeselect: [],\r\n            nodeselected: [],\r\n            rendernode: [],\r\n            rendersocket: [],\r\n            rendercontrol: [],\r\n            renderconnection: [],\r\n            updateconnection: [],\r\n            keydown: [],\r\n            keyup: [],\r\n            translate: [],\r\n            translated: [],\r\n            zoom: [],\r\n            zoomed: [],\r\n            click: [],\r\n            mousemove: [],\r\n            contextmenu: [],\r\n            import: [],\r\n            export: [],\r\n            process: [],\r\n            clear: []\r\n        });\r\n    }    \r\n}\r\n\r\nexport interface EventsTypes extends DefaultEventsTypes {\r\n    componentregister: Component;\r\n    nodecreate: Node;\r\n    nodecreated: Node;\r\n    noderemove: Node;\r\n    noderemoved: Node;\r\n    connectioncreate: { input: Input; output: Output };\r\n    connectioncreated: Connection;\r\n    connectionremove: Connection;\r\n    connectionremoved: Connection;\r\n    translatenode: { node: Node; dx: number; dy: number };\r\n    nodetranslate: { node: Node; x: number; y: number };\r\n    nodetranslated: { node: Node; prev: [number, number] };\r\n    nodedraged: Node;\r\n    nodedragged: Node;\r\n    selectnode: {\r\n        node: Node;\r\n        accumulate: boolean;\r\n    };\r\n    multiselectnode: {\r\n        node: Node;\r\n        accumulate: boolean;\r\n        e: MouseEvent;\r\n    };\r\n    nodeselect: Node;\r\n    nodeselected: Node;\r\n    rendernode: {\r\n        el: HTMLElement;\r\n        node: Node;\r\n        component: object;\r\n        bindSocket: Function;\r\n        bindControl: Function;\r\n    };\r\n    rendersocket: {\r\n        el: HTMLElement;\r\n        input?: Input;\r\n        output?: Output;\r\n        socket: Socket;\r\n    };\r\n    rendercontrol: {\r\n        el: HTMLElement;\r\n        control: Control;\r\n    };\r\n    renderconnection: {\r\n        el: HTMLElement;\r\n        connection: Connection;\r\n        points: number[];\r\n    };\r\n    updateconnection: {\r\n        el: HTMLElement;\r\n        connection: Connection;\r\n        points: number[];\r\n    };\r\n    keydown: KeyboardEvent;\r\n    keyup: KeyboardEvent;\r\n    translate: {\r\n        transform: Transform;\r\n        x: number;\r\n        y: number;\r\n    };\r\n    translated: void;\r\n    zoom: {\r\n        transform: Transform;\r\n        zoom: number;\r\n        source: ZoomSource;\r\n    };\r\n    zoomed: {\r\n        source: ZoomSource;\r\n    };\r\n    click: {\r\n        e: Event;\r\n        container: HTMLElement;\r\n    };\r\n    mousemove: Mouse;\r\n    contextmenu: {\r\n        e: MouseEvent;\r\n        view?: EditorView;\r\n        node?: Node;\r\n    };\r\n    import: Data;\r\n    export: Data;\r\n    process: void;\r\n    clear: void;\r\n}\r\n","import { Component } from './component';\r\nimport { Connection } from './connection';\r\nimport { Context } from './core/context';\r\nimport { Data } from './core/data';\r\nimport { EditorView } from './view/index';\r\nimport { Input } from './input';\r\nimport { Node } from './node';\r\nimport { Output } from './output';\r\nimport { Selected } from './selected';\r\nimport { Validator } from './core/validator';\r\nimport { listenWindow } from './view/utils';\r\nimport { EditorEvents, EventsTypes } from './events';\r\n\r\nexport class NodeEditor extends Context<EventsTypes> {\r\n\r\n    nodes: Node[] = [];\r\n    selected = new Selected();\r\n    view: EditorView;\r\n\r\n    constructor(id: string, container: HTMLElement) {\r\n        super(id, new EditorEvents());\r\n        \r\n        this.view = new EditorView(container, this.components, this);\r\n\r\n        this.on('destroy', listenWindow('keydown', e => this.trigger('keydown', e)));\r\n        this.on('destroy', listenWindow('keyup', e => this.trigger('keyup', e)));\r\n\r\n        this.on('selectnode', ({ node, accumulate }) => this.selectNode(node, accumulate));\r\n        this.on('nodeselected', () => this.selected.each(n => {\r\n            const nodeView = this.view.nodes.get(n);\r\n\r\n            nodeView && nodeView.onStart()\r\n        }));\r\n        this.on('translatenode', ({ dx, dy }) => this.selected.each(n => {\r\n            const nodeView = this.view.nodes.get(n);\r\n\r\n            nodeView && nodeView.onDrag(dx, dy)\r\n        }));\r\n    }\r\n\r\n    addNode(node: Node) {\r\n        if (!this.trigger('nodecreate', node)) return;\r\n\r\n        this.nodes.push(node);\r\n        this.view.addNode(node);\r\n        \r\n        this.trigger('nodecreated', node);\r\n    }\r\n\r\n    removeNode(node: Node) {\r\n        if (!this.trigger('noderemove', node)) return;\r\n\r\n        node.getConnections().forEach(c => this.removeConnection(c));\r\n\r\n        this.nodes.splice(this.nodes.indexOf(node), 1);\r\n        this.view.removeNode(node);\r\n\r\n        this.trigger('noderemoved', node);\r\n    }\r\n\r\n    connect(output: Output, input: Input, data: unknown = {}) {\r\n        if (!this.trigger('connectioncreate', { output, input })) return;\r\n\r\n        try {\r\n            const connection = output.connectTo(input);\r\n\r\n            connection.data = data;\r\n            this.view.addConnection(connection);\r\n\r\n            this.trigger('connectioncreated', connection);\r\n        } catch (e) {\r\n            this.trigger('warn', e)\r\n        }\r\n    }\r\n\r\n    removeConnection(connection: Connection) {\r\n        if (!this.trigger('connectionremove', connection)) return;\r\n            \r\n        this.view.removeConnection(connection);\r\n        connection.remove();\r\n\r\n        this.trigger('connectionremoved', connection);\r\n    }\r\n\r\n    selectNode(node: Node, accumulate: boolean = false) {\r\n        if (this.nodes.indexOf(node) === -1) \r\n            throw new Error('Node not exist in list');\r\n        \r\n        if (!this.trigger('nodeselect', node)) return;\r\n\r\n        this.selected.add(node, accumulate);\r\n        \r\n        this.trigger('nodeselected', node);\r\n    }\r\n\r\n    getComponent(name: string) {\r\n        const component = this.components.get(name);\r\n\r\n        if (!component)\r\n            throw `Component ${name} not found`;\r\n        \r\n        return component as Component;\r\n    }\r\n\r\n    register(component: Component) {\r\n        super.register(component)\r\n        component.editor = this;\r\n    }\r\n\r\n    clear() {\r\n        [...this.nodes].forEach(node => this.removeNode(node));\r\n        this.trigger('clear');\r\n    }\r\n\r\n    toJSON() {\r\n        const data: Data = { id: this.id, nodes: {} };\r\n        \r\n        this.nodes.forEach(node => data.nodes[node.id] = node.toJSON());\r\n        this.trigger('export', data);\r\n        return data;\r\n    }\r\n\r\n    beforeImport(json: Data) {\r\n        const checking = Validator.validate(this.id, json);\r\n        \r\n        if (!checking.success) {\r\n            this.trigger('warn', checking.msg);\r\n            return false;\r\n        }\r\n        \r\n        this.silent = true;\r\n        this.clear();\r\n        this.trigger('import', json);\r\n        return true;\r\n    }\r\n\r\n    afterImport() {\r\n        this.silent = false;\r\n        return true;\r\n    }\r\n\r\n    async fromJSON(json: Data) {\r\n        if (!this.beforeImport(json)) return false;\r\n        const nodes: {[key: string]: Node} = {};\r\n\r\n        try {\r\n            await Promise.all(Object.keys(json.nodes).map(async id => {\r\n                const node = json.nodes[id];\r\n                const component = this.getComponent(node.name);\r\n\r\n                nodes[id] = await component.build(Node.fromJSON(node));\r\n                this.addNode(nodes[id]);\r\n            }));\r\n        \r\n            Object.keys(json.nodes).forEach(id => {\r\n                const jsonNode = json.nodes[id];\r\n                const node = nodes[id];\r\n                \r\n                Object.keys(jsonNode.outputs).forEach(key => {\r\n                    const outputJson = jsonNode.outputs[key];\r\n\r\n                    outputJson.connections.forEach(jsonConnection => {\r\n                        const nodeId = jsonConnection.node;\r\n                        const data = jsonConnection.data;\r\n                        const targetOutput = node.outputs.get(key);\r\n                        const targetInput = nodes[nodeId].inputs.get(jsonConnection.input);\r\n\r\n                        if (!targetOutput || !targetInput) {\r\n                            return this.trigger('error', `IO not found for node ${node.id}`);\r\n                        }\r\n\r\n                        this.connect(targetOutput, targetInput, data);\r\n                    });\r\n                });\r\n\r\n            });\r\n        } catch (e) {\r\n            this.trigger('warn', e);\r\n            return !this.afterImport();\r\n        }\r\n\r\n        return this.afterImport();\r\n    }\r\n}\r\n","import { Connection } from './connection';\r\nimport { IO } from './io';\r\nimport { Input } from './input';\r\nimport { OutputData } from './core/data';\r\nimport { Socket } from './socket';\r\n\r\nexport class Output extends IO {\r\n  \r\n    constructor(key: string, title: string, socket: Socket, multiConns: boolean = true) {\r\n        super(key, title, socket, multiConns);\r\n    }\r\n    \r\n    hasConnection() {\r\n        return this.connections.length > 0;\r\n    }\r\n\r\n    connectTo(input: Input) {\r\n        if (!this.socket.compatibleWith(input.socket))\r\n            throw new Error('Sockets not compatible');\r\n        if (!input.multipleConnections && input.hasConnection())\r\n            throw new Error('Input already has one connection');\r\n        if (!this.multipleConnections && this.hasConnection())\r\n            throw new Error('Output already has one connection');\r\n\r\n        const connection = new Connection(this, input);\r\n\r\n        this.connections.push(connection);\r\n        return connection;\r\n    }\r\n\r\n    connectedTo(input: Input) {\r\n        return this.connections.some((item) => {\r\n            return item.input === input;\r\n        });\r\n    }\r\n\r\n    toJSON(): OutputData {\r\n        return {\r\n            'connections': this.connections.map(c => {\r\n                if (!c.input.node) throw new Error('Node not added to Input');\r\n\r\n                return {\r\n                    node: c.input.node.id,\r\n                    input: c.input.key,\r\n                    data: c.data\r\n                }\r\n            })\r\n        };\r\n    }\r\n}","export class Socket {\r\n\r\n    name: string;\r\n    data: unknown;\r\n    compatible: Socket[] = [];\r\n\r\n    constructor(name: string, data = {}) {\r\n        this.name = name;\r\n        this.data = data;\r\n        this.compatible = [];\r\n    }\r\n\r\n    combineWith(socket: Socket) {\r\n        this.compatible.push(socket);\r\n    }\r\n\r\n    compatibleWith(socket: Socket) {\r\n        return this === socket || this.compatible.includes(socket);\r\n    }\r\n}","import { InputConnectionData, NodeData, NodesData } from '../core/data';\r\n\r\nfunction intersect<T>(array1: T[], array2: T[]) {\r\n    return array1.filter(value => -1 !== array2.indexOf(value));\r\n}\r\n\r\nexport class Recursion {\r\n\r\n    nodes: NodesData;\r\n\r\n    constructor(nodes: NodesData) {\r\n        this.nodes = nodes;\r\n    }\r\n    \r\n    extractInputNodes(node: NodeData): NodeData[] {\r\n        return Object.keys(node.inputs).reduce((acc: NodeData[], key: string) => {\r\n            const { connections } = node.inputs[key];\r\n            const nodesData = (connections || []).reduce((b: NodeData[], c: InputConnectionData) => {\r\n                return [...b, this.nodes[c.node]];\r\n            }, []);\r\n\r\n            return [...acc, ...nodesData]\r\n        }, []);\r\n    }\r\n\r\n    findSelf(list: NodeData[], inputNodes: NodeData[]): NodeData | null {\r\n        const inters = intersect<NodeData>(list, inputNodes);\r\n\r\n        if (inters.length)\r\n            return inters[0];\r\n        \r\n        for (let node of inputNodes) {\r\n            let l = [node, ...list];\r\n            let inter = this.findSelf(l, this.extractInputNodes(node));\r\n\r\n            if (inter)\r\n                return inter;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    detect(): NodeData | null {\r\n        const nodesArr = Object.keys(this.nodes).map(id => this.nodes[id]);\r\n\r\n        for (let node of nodesArr) {\r\n            let inters = this.findSelf([node], this.extractInputNodes(node));\r\n\r\n            if (inters)\r\n                return inters;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}","export const State = { AVAILABLE: 0, PROCESSED: 1, ABORT: 2 }","import { Events } from '../core/events';\r\n\r\nexport class EngineEvents extends Events {\r\n\r\n    constructor() {\r\n        super({});\r\n    }    \r\n}\r\nexport interface EventsTypes {\r\n}","import { Component } from './component';\r\nimport { Context } from '../core/context';\r\nimport { Recursion } from './recursion';\r\nimport { State } from './state';\r\nimport { Validator } from '../core/validator';\r\nimport { Data, NodeData, WorkerOutputs } from '../core/data';\r\nimport { EngineEvents, EventsTypes } from './events';\r\nexport { Component, Recursion };\r\n\r\ninterface EngineNode extends NodeData {\r\n    busy: boolean;\r\n    unlockPool: (() => void)[];\r\n    outputData: WorkerOutputs;\r\n}\r\n\r\nexport class Engine extends Context<EventsTypes> {\r\n\r\n    args: unknown[] = [];\r\n    data: Data | null = null;\r\n    state = State.AVAILABLE;\r\n    onAbort = () => { };\r\n\r\n    constructor(id: string) {\r\n        super(id, new EngineEvents());\r\n    }\r\n\r\n    public clone() {\r\n        const engine = new Engine(this.id);\r\n\r\n        this.components.forEach(c => engine.register(c));\r\n\r\n        return engine;\r\n    }\r\n\r\n    async throwError (message: string, data: unknown = null) {\r\n        await this.abort();\r\n        this.trigger('error', { message, data });\r\n        this.processDone();\r\n\r\n        return 'error';\r\n    }\r\n\r\n    private processStart() {\r\n        if (this.state === State.AVAILABLE) {  \r\n            this.state = State.PROCESSED;\r\n            return true;\r\n        }\r\n\r\n        if (this.state === State.ABORT) {\r\n            return false;\r\n        }\r\n\r\n        console.warn(`The process is busy and has not been restarted.\r\n                Use abort() to force it to complete`);\r\n        return false;\r\n    }\r\n\r\n    private processDone() {\r\n        const success = this.state !== State.ABORT;\r\n\r\n        this.state = State.AVAILABLE;\r\n        \r\n        if (!success) {\r\n            this.onAbort();\r\n            this.onAbort = () => { }\r\n        }    \r\n\r\n        return success;\r\n    }\r\n\r\n    public async abort() {\r\n        return new Promise(ret => {\r\n            if (this.state === State.PROCESSED) {\r\n                this.state = State.ABORT;\r\n                this.onAbort = ret;\r\n            }\r\n            else if (this.state === State.ABORT) {\r\n                this.onAbort();\r\n                this.onAbort = ret;\r\n            }\r\n            else\r\n                ret();\r\n        });\r\n    }\r\n\r\n    private async lock(node: EngineNode) {\r\n        return new Promise(res => {\r\n            node.unlockPool = node.unlockPool || [];\r\n            if (node.busy && !node.outputData)\r\n                node.unlockPool.push(res);\r\n            else \r\n                res();\r\n            \r\n            node.busy = true;\r\n        });    \r\n    }\r\n\r\n    unlock(node: EngineNode) {\r\n        node.unlockPool.forEach(a => a());\r\n        node.unlockPool = [];\r\n        node.busy = false;\r\n    }\r\n\r\n    private async extractInputData(node: NodeData) {\r\n        const obj: {[id: string]: any} = {};\r\n\r\n        for (let key of Object.keys(node.inputs)) {\r\n            const input = node.inputs[key];\r\n            const conns = input.connections;\r\n            const connData = await Promise.all(conns.map(async (c) => {\r\n                const prevNode = (this.data as Data).nodes[c.node];\r\n\r\n                const outputs = await this.processNode(prevNode as EngineNode);\r\n\r\n                if (!outputs) \r\n                    this.abort();\r\n                else\r\n                    return outputs[c.output];\r\n            }));\r\n\r\n            obj[key] = connData;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    private async processWorker(node: NodeData) {\r\n        const inputData = await this.extractInputData(node);\r\n        const component = this.components.get(node.name) as Component;\r\n        const outputData = {};\r\n\r\n        try {\r\n            await component.worker(node, inputData, outputData, ...this.args);\r\n        } catch (e) {\r\n            this.abort();\r\n            this.trigger('warn', e);\r\n        }\r\n\r\n        return outputData;\r\n    }\r\n\r\n    private async processNode(node: EngineNode) {\r\n        if (this.state === State.ABORT || !node)\r\n            return null;\r\n        \r\n        await this.lock(node);\r\n\r\n        if (!node.outputData) {\r\n            node.outputData = await this.processWorker(node);\r\n        }\r\n\r\n        this.unlock(node);\r\n        return node.outputData;\r\n    }\r\n\r\n    private async forwardProcess(node: NodeData) {\r\n        if (this.state === State.ABORT)\r\n            return null;\r\n\r\n        return await Promise.all(Object.keys(node.outputs).map(async (key) => {\r\n            const output = node.outputs[key];\r\n            \r\n            return await Promise.all(output.connections.map(async (c) => {\r\n                const nextNode = (this.data as Data).nodes[c.node];\r\n\r\n                await this.processNode(nextNode as EngineNode);\r\n                await this.forwardProcess(nextNode);\r\n            }));\r\n        }));\r\n    }\r\n\r\n    copy(data: Data) {\r\n        data = Object.assign({}, data);\r\n        data.nodes = Object.assign({}, data.nodes);\r\n        \r\n        Object.keys(data.nodes).forEach(key => {\r\n            data.nodes[key] = Object.assign({}, data.nodes[key])\r\n        });\r\n        return data;\r\n    }\r\n\r\n    async validate(data: Data) {\r\n        const checking = Validator.validate(this.id, data);\r\n        const recursion = new Recursion(data.nodes);\r\n\r\n        if (!checking.success)\r\n            return await this.throwError(checking.msg);  \r\n        \r\n        const recurrentNode = recursion.detect();\r\n\r\n        if (recurrentNode)\r\n            return await this.throwError('Recursion detected', recurrentNode);      \r\n         \r\n        return true;\r\n    }\r\n\r\n    private async processStartNode(id: string | number | null) {\r\n        if (!id) return;\r\n\r\n        let startNode = (this.data as Data).nodes[id];\r\n\r\n        if (!startNode)\r\n            return await this.throwError('Node with such id not found');   \r\n        \r\n        await this.processNode(startNode as EngineNode);\r\n        await this.forwardProcess(startNode);\r\n    }\r\n\r\n    private async processUnreachable() {\r\n        const data = this.data as Data;\r\n\r\n        for (let i in data.nodes) { // process nodes that have not been reached\r\n            const node = data.nodes[i] as EngineNode;\r\n\r\n            if (typeof node.outputData === 'undefined') {\r\n                await this.processNode(node);\r\n                await this.forwardProcess(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    async process<T extends unknown[]>(data: Data, startId: number | string | null = null, ...args: T) {\r\n        if (!this.processStart()) return;\r\n        if (!this.validate(data)) return;    \r\n        \r\n        this.data = this.copy(data);\r\n        this.args = args;\r\n        \r\n        await this.processStartNode(startId);\r\n        await this.processUnreachable();\r\n        \r\n        return this.processDone()?'success':'aborted';\r\n    }\r\n}","import { Component } from './component';\r\nimport { Connection } from './connection';\r\nimport { Control } from './control';\r\nimport { Emitter } from './core/emitter';\r\nimport { IO } from './io';\r\nimport { Input } from './input';\r\nimport { Node } from './node';\r\nimport { NodeEditor } from './editor';\r\nimport { Output } from './output';\r\nimport { Socket } from './socket';\r\nimport { Engine, Recursion } from './engine/index';\r\n\r\nexport { Engine, Recursion } from './engine/index';\r\nexport { Component } from './component';\r\nexport { Control } from './control';\r\nexport { Connection } from './connection';\r\nexport { Emitter } from './core/emitter';\r\nexport { Input } from './input';\r\nexport { IO } from './io';\r\nexport { Node } from './node';\r\nexport { NodeEditor } from './editor';\r\nexport { Output } from './output';\r\nexport { Socket } from './socket';\r\n\r\nexport default {\r\n    Engine,\r\n    Recursion,\r\n    Component,\r\n    Control,\r\n    Connection,\r\n    Emitter,\r\n    Input,\r\n    IO,\r\n    Node,\r\n    NodeEditor,\r\n    Output,\r\n    Socket\r\n}","import {useEffect} from 'react';\r\n\r\nexport default function useListener(target, event, listener, options) {\r\n    useEffect(() => {\r\n        if(!target) {\r\n            return;\r\n        }\r\n        let domTarget = 'addEventListener' in target;\r\n        if(domTarget) {\r\n            target.addEventListener(event, listener, options);\r\n        }\r\n        else {\r\n            target.on(event, listener, options);\r\n        }\r\n        return () => {\r\n            if(domTarget) {\r\n                target.removeEventListener(event, listener);\r\n            }\r\n            else {\r\n                target.off(event, listener);\r\n            }\r\n        };\r\n    });\r\n    return listener;\r\n}","import {useContext, useState} from 'react';\r\nimport useListener from './useListener';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../contexts/EventsContext';\r\n\r\nexport default function useControlState(control) {\r\n    let value = control.getValue();\r\n    let [, updateVisualValue] = useState(value); // updateVisualValue(..): redraw component if value changed\r\n\r\n    let events = useContext(EventsContext);\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => {\r\n        updateVisualValue(control.getValue());\r\n        control.notifyEditorChange?.();\r\n    });\r\n\r\n    useListener(control.events, 'update', () => events.emit(EDITOR_CHANGE_EVENT, control, value));\r\n\r\n    return [\r\n        value,\r\n        value => control.setValue(value),\r\n    ];\r\n}\r\n","import {effectType, unitType} from '../block-types/types';\r\nimport {effectCategory} from '../block-categories/categories';\r\n\r\nlet defaultType = effectType.of(unitType);\r\n\r\nexport function statementBlock(block, compileFn) {\r\n    let beforeProp = {\r\n        key: 'before',\r\n        type: effectType,\r\n        inferType({after}) {\r\n            return after || defaultType;\r\n        },\r\n        toMotoko(props, ...args) {\r\n            let result = compileFn(props, ...args);\r\n            if(result === undefined) {\r\n                return;\r\n            }\r\n            let {after} = props;\r\n            return `${result}${after ? ' ' + after : ''}`;\r\n        },\r\n    };\r\n    // for(let [key, fn] of Object.entries(compileObject)) {\r\n    //     beforeProp[key] = typeof fn === 'function' ? function(props, ...args) {\r\n    //         let result = fn(props, ...args);\r\n    //         if(result === undefined) {\r\n    //             return;\r\n    //         }\r\n    //         let {after} = props;\r\n    //         return `${result}${after ? ' ' + after : ''}`;\r\n    //     } : fn;\r\n    // }\r\n\r\n    return {\r\n        category: effectCategory,\r\n        topLeft: 'before',\r\n        topRight: 'after',\r\n        ...block,\r\n        inputs: [\r\n            ...block.inputs || [], {\r\n                key: 'after',\r\n                type: effectType,\r\n                optional: true,\r\n                // multi: true,\r\n            },\r\n        ],\r\n        outputs: [\r\n            ...block.outputs || [],\r\n            beforeProp,\r\n        ],\r\n    };\r\n}\r\n\r\nexport function endStatementBlock(block, statementProp) {\r\n    return {\r\n        category: effectCategory,\r\n        topLeft: 'statement',\r\n        ...block,\r\n        outputs: [...block.outputs || [], {\r\n            key: 'statement',\r\n            type: effectType,\r\n            ...statementProp,\r\n        }],\r\n    };\r\n}\r\n","import {useEffect} from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nlet timeout;\r\n\r\n// Rebuild react-tooltip\r\nexport default function useReactTooltip(deps = []) {\r\n    useEffect(() => {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => ReactTooltip.rebuild());\r\n    }, deps); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n    return ReactTooltip;\r\n}\r\n","import {basename} from 'path';\r\nimport {getType} from '../block-types/types';\r\nimport {defaultCategory, getCategory} from '../block-categories/categories';\r\n\r\nconst allBlocks = [];\r\nconst blockNames = new Set();\r\n\r\n// noinspection JSUnresolvedFunction\r\nconst blockContext = require.context('../blocks', true, /\\.js$/);\r\nblockContext.keys().forEach(path => {\r\n    let name = basename(path, '.js');\r\n    let block = blockContext(path).default;\r\n    block = {...block}; // HMR fix\r\n    if(block) {\r\n        block.name = name;\r\n        if(blockNames.has(name)) {\r\n            console.error(`Duplicate block name: ${name}`);\r\n            return;\r\n        }\r\n        block.category = block.category ? getCategory(block.category) : defaultCategory;\r\n        block.props = block.props || {};\r\n        for(let [key, prop] of Object.entries(block.props)) {\r\n            if(prop.key && prop.key !== key) {\r\n                throw new Error(`Prop key mismatch: ${key} != ${prop.key}`);\r\n            }\r\n            prop.key = key;\r\n        }\r\n\r\n        // `outputs` prioritized over `inputs`\r\n        addProps(block, block.outputs, 'output');\r\n        addProps(block, block.inputs, 'input');\r\n        addProps(block, block.controls, 'control');\r\n\r\n        // Rearrange block inputs/outputs/controls\r\n        block.inputs = [];\r\n        block.outputs = [];\r\n        block.controls = [];\r\n\r\n        for(let [key, prop] of Object.entries(block.props)) {\r\n            prop.key = key;\r\n            // `output` prioritized over `input`\r\n            if(prop.output) {\r\n                if(!block.outputs.includes(prop)) {\r\n                    block.outputs.push(prop);\r\n                }\r\n            }\r\n            else if(prop.input) {\r\n                if(!block.inputs.includes(prop)) {\r\n                    block.inputs.push(prop);\r\n                }\r\n            }\r\n            else if(prop.control) {\r\n                if(!block.controls.includes(prop)) {\r\n                    block.controls.push(prop);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Type deserialization\r\n        for(let prop of Object.values(block.props)) {\r\n            if(!prop.type && (prop.input || prop.output) && prop.control) {\r\n                console.log(prop);///\r\n                throw new Error(`Type not found for ${block.name} : ${prop.key}`);\r\n            }\r\n            if(prop.type) {\r\n                prop.type = getType(prop.type);\r\n            }\r\n        }\r\n\r\n        blockNames.add(block.name);\r\n        allBlocks.push(block);\r\n    }\r\n});\r\n\r\nfunction addProps(block, propList, type) {\r\n    if(propList) {\r\n        for(let prop of propList) {\r\n            if(prop.key && block.props[prop.key] === prop) {\r\n                continue;\r\n            }\r\n            if(block.props.hasOwnProperty(prop.key)) {\r\n                throw new Error(`Duplicate prop in ${block.name}: ${prop.key}`);\r\n            }\r\n            prop[type] = prop[type] || true;\r\n            block.props[prop.key] = prop;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const BLOCK_MAP = new Map(allBlocks.map(block => [block.name, block]));\r\n\r\nwindow.BLOCK_MAP = BLOCK_MAP; // Browser debugging\r\n\r\n// Post-initialization\r\nfor(let block of BLOCK_MAP.values()) {\r\n    if(block.shortcuts) {\r\n        block.shortcuts.forEach(s => {\r\n            if(!s.block) {\r\n                throw new Error(`Shortcut in ${block.name} requires a \\`block\\` attribute`);\r\n            }\r\n            s.block = getBlock(s.block);\r\n        });\r\n    }\r\n    else {\r\n        block.shortcuts = [];\r\n    }\r\n}\r\n\r\nexport function getBlock(name) {\r\n    if(!name) {\r\n        throw new Error(`Block cannot be ${name}`);\r\n    }\r\n    if(typeof name === 'string') {\r\n        if(!BLOCK_MAP.has(name)) {\r\n            throw new Error(`Block does not exist: ${name}`);\r\n        }\r\n        return BLOCK_MAP.get(name);\r\n    }\r\n    return name;\r\n}","import {literalCategory} from '../block-categories/categories';\r\n\r\nexport function literalBlock(block, type, stringifier) {\r\n    return {\r\n        category: literalCategory,\r\n        topRight: 'value',\r\n        ...block,\r\n        outputs: [...block.outputs || [], {\r\n            key: 'value',\r\n            type,\r\n            control: true,\r\n            toMotoko({value}) {\r\n                if(value === undefined) {\r\n                    return;\r\n                }\r\n                return String(stringifier ? stringifier(value) : value);\r\n            },\r\n        }],\r\n    };\r\n}","import {identifierType, memberType} from '../block-types/types';\r\nimport {stringSelectProp} from './control-patterns';\r\n\r\n\r\nexport function computeMemberName(node, editor) {\r\n    return editor.compilers.motoko.getInput(node, 'name');\r\n\r\n    // let name = editor.compilers.motoko.getInput(node, 'name');\r\n    // if(!name) {\r\n    //     return;\r\n    // }\r\n    // if(!parentNode) {\r\n    //     return name;\r\n    // }\r\n    // let actorName = editor.compilers.motoko.getInput(parentNode, 'name');\r\n    // return actorName?`${actorName}.${name}`:name;\r\n}\r\n\r\nexport function memberBlock(block, memberProp) {\r\n    return {\r\n        topLeft: 'member',\r\n        ...block,\r\n        inputs: [\r\n            {\r\n                key: 'name',\r\n                type: identifierType,\r\n            },\r\n            ...block.inputs || [],\r\n        ],\r\n        outputs: [\r\n            {\r\n                key: 'member',\r\n                type: memberType,\r\n                ...memberProp,\r\n            },\r\n            ...block.outputs || [],\r\n        ],\r\n        controls: [\r\n            stringSelectProp({\r\n                key: 'visibility',\r\n                // optional: true,\r\n            }, ['public', 'private', 'system']),\r\n            ...block.controls || [],\r\n        ],\r\n    };\r\n}","import {capitalCase} from 'change-case';\r\n\r\nexport default function getBlockLabel(block) {\r\n    if(!block) {\r\n        return '';\r\n    }\r\n    return block.title || capitalCase(block.name);\r\n}","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport classNames from 'classnames';\r\n\r\n\r\nexport default function TextControlHandle({control, bindInput, validation: {minLength, maxLength}}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let invalid = !control.validate(value);\r\n\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className={classNames('w-100', invalid && 'invalid')}\r\n            autoComplete=\"blocks-app\"\r\n            autoCorrect=\"off\"\r\n            ref={bindInput}\r\n            value={value || ''}\r\n            placeholder={control.name}\r\n            minLength={minLength}\r\n            maxLength={maxLength}\r\n            onChange={event => setValue(event.target.value || (control.config.optional && minLength > 0 ? undefined : ''))}\r\n        />\r\n    );\r\n}\r\n","import {sentenceCase} from 'change-case';\r\n\r\nexport default function getDefaultLabel(text) {\r\n    if(!text) {\r\n        return '';\r\n    }\r\n    return sentenceCase(text);\r\n}","import {getBlock} from '../editor/blocks';\r\nimport getBlockLabel from './getBlockLabel';\r\n\r\nexport default function getNodeLabel(node, editor, simplified) {\r\n    let block = getBlock(node.name);\r\n    if(!simplified && block && block.computeTitle) {\r\n        return block.computeTitle(node, editor);\r\n    }\r\n    return getBlockLabel(block);\r\n}","// Derived from: https://github.com/dfinity/motoko-playground/blob/main/src/config/monacoConfig.js\r\n\r\nexport const configureMonaco = (monaco) => {\r\n    monaco.languages.register({ id: \"motoko\" });\r\n    monaco.languages.setLanguageConfiguration(\"motoko\", {\r\n        comments: {\r\n            lineComment: \"//\",\r\n            blockComment: [\"/*\", \"*/\"],\r\n        },\r\n        brackets: [\r\n            [\"{\", \"}\"],\r\n            [\"[\", \"]\"],\r\n            [\"(\", \")\"],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: \"{\", close: \"}\" },\r\n            { open: \"[\", close: \"]\" },\r\n            { open: \"(\", close: \")\" },\r\n            { open: '\"', close: '\"' },\r\n            { open: \"<\", close: \">\" },\r\n        ],\r\n    });\r\n    monaco.languages.setMonarchTokensProvider(\"motoko\", {\r\n        defaultToken: \"\",\r\n        tokenPostfix: \".mo\",\r\n        // prettier-ignore\r\n        keywords: [\r\n            'actor','and','async','assert','await','break','case','catch','class',\r\n            'continue','debug','else','false','for','func','if','in','import',\r\n            'module','not','null','object','or','label','let','loop','private',\r\n            'public','return','shared','try','throw','debug_show','query','switch',\r\n            'true','type','var','while','stable','flexible','system',\r\n        ],\r\n        accessmodifiers: [\"public\", \"private\", \"shared\"],\r\n        // prettier-ignore\r\n        typeKeywords: [\r\n            'Any','None','Null','Bool','Int','Int8','Int16','Int32','Int64','Nat',\r\n            'Nat8','Nat16','Nat32','Nat64','Word8','Word16','Word32','Word64','Float',\r\n            'Char','Text','Blob','Error','Principal',\r\n        ],\r\n        // prettier-ignore\r\n        operators: [\r\n            '=','<','>',':','<:','?','+','-','*','/','%','**','&','|','^','<<','>>',\r\n            '#','==','!=','>=','<=',':=','+=','-=','*=','/=','%=','**=','&=','|=',\r\n            '^=','<<=','>>=','#=','->',\r\n        ],\r\n        symbols: /[=(){}[\\].,:;@#_&\\-<>`?!+*\\\\/]/,\r\n        // C# style strings\r\n        escapes:\r\n            /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                [\r\n                    /[a-zA-Z_$][\\w$]*/,\r\n                    {\r\n                        cases: {\r\n                            \"@typeKeywords\": \"keyword.type\",\r\n                            \"@keywords\": \"keyword\",\r\n                            \"@default\": \"identifier\",\r\n                        },\r\n                    },\r\n                ],\r\n                // whitespace\r\n                { include: \"@whitespace\" },\r\n\r\n                // delimiters and operators\r\n                [/[{}()[\\]]/, \"@brackets\"],\r\n                [/[<>](?!@symbols)/, \"@brackets\"],\r\n                [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }],\r\n                // numbers\r\n                [/\\d*\\.\\d+([eE][-+]?\\d+)?/, \"number.float\"],\r\n                [/0[xX][0-9a-fA-F_]+/, \"number.hex\"],\r\n                [/[0-9_]+/, \"number\"],\r\n\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, \"delimiter\"],\r\n\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], // non-teminated string\r\n                [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\r\n\r\n                // characters\r\n                [/'[^\\\\']'/, \"string\"],\r\n                [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\r\n                [/'/, \"string.invalid\"],\r\n            ],\r\n\r\n            comment: [\r\n                [/[^/*]+/, \"comment\"],\r\n                [/\\/\\*/, \"comment\", \"@push\"], // nested comment\r\n                [\"\\\\*/\", \"comment\", \"@pop\"],\r\n                [/[/*]/, \"comment\"],\r\n            ],\r\n\r\n            string: [\r\n                [/[^\\\\\"]+/, \"string\"],\r\n                [/@escapes/, \"string.escape\"],\r\n                [/\\\\./, \"string.escape.invalid\"],\r\n                [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }],\r\n            ],\r\n\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, \"white\"],\r\n                [/\\/\\*/, \"comment\", \"@comment\"],\r\n                [/\\/\\/.*$/, \"comment\"],\r\n            ],\r\n        },\r\n    });\r\n};","import MonacoEditor from \"@monaco-editor/react\";\r\nimport {configureMonaco} from '../../config/configureMonaco';\r\n\r\nexport default function CodeEditor({value, onChange}) {\r\n\r\n    // const monaco = useMonaco();\r\n\r\n    const onEditorChange = (newValue) => {\r\n        onChange?.(newValue);\r\n    };\r\n\r\n    return (\r\n        <MonacoEditor\r\n            defaultLanguage=\"motoko\"\r\n            beforeMount={configureMonaco}\r\n            value={value}\r\n            // path={fileName}\r\n            onChange={onEditorChange}\r\n            options={{\r\n                minimap: {enabled: false},\r\n                wordWrap: 'on',\r\n                wrappingIndent: 'indent',\r\n                scrollBeyondLastLine: false,\r\n                fontSize: 16,\r\n            }}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport CodeEditor from '../../monaco/CodeEditor';\r\n\r\n\r\nexport default function CodeControlHandle({control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    // let invalid = !control.validate(value);\r\n\r\n    // TODO: syntax highlighting\r\n\r\n    return (\r\n        // <input\r\n        //     type=\"textarea\"\r\n        //     className={classNames('w-100', invalid && 'invalid')}\r\n        //     autoComplete=\"blocks-app\"\r\n        //     autoCorrect=\"off\"\r\n        //     ref={bindInput}\r\n        //     value={value || ''}\r\n        //     placeholder={control.name}\r\n        //     onChange={event => setValue(event.target.value || '')}\r\n        // />\r\n        <CodeEditor value={value} onChange={setValue}/>\r\n    );\r\n}\r\n","import {anyType, typeType} from '../block-types/types';\r\nimport {expressionCategory} from '../block-categories/categories';\r\nimport CodeControlHandle from '../components/rete/controls/CodeControlHandle';\r\n\r\nlet replaceRegex = /{([0-9]+)}/g;\r\n\r\n\r\nfunction parseInputs(inputs, expression) {\r\n    return (expression || '').replaceAll(replaceRegex, (match, i) => {\r\n        i = +i;\r\n        return i >= 0 && i < inputs.length ? inputs[i] : match;\r\n    });\r\n}\r\n\r\nexport function codeBlock(name, type, block = {}) {\r\n    return {\r\n        title: `{${name}}`,\r\n        info: `Compile an arbitrary ${name} expression`,\r\n        category: expressionCategory,\r\n        icon: expressionCategory.data.icon,\r\n        topLeft: 'inputs',\r\n        topRight: 'result',\r\n        ...block,\r\n        inputs: [{\r\n            key: 'inputs',\r\n            type: anyType,\r\n            multi: true,\r\n        }, {\r\n            key: 'type',\r\n            type: typeType.of(type),\r\n        }, ...block.inputs || []],\r\n        outputs: [{\r\n            key: 'result',\r\n            type,\r\n            inferType({type}) {\r\n                // return parseInputs(inputs, typeCode);\r\n                return type;\r\n            },\r\n            toMotoko({inputs, expression}) {\r\n                return parseInputs(inputs, expression);\r\n            },\r\n        }, ...block.outputs || []],\r\n        controls: [{\r\n            key: 'expression',\r\n            controlType: CodeControlHandle,\r\n        }, ...block.controls || []],\r\n    };\r\n}\r\n","import {useContext, useEffect, useState} from 'react';\r\nimport EventsContext, {ERROR_EVENT} from '../../contexts/EventsContext';\r\n\r\nexport default function Loading({promise, loading, error, children}) {\r\n    let [status, setStatus] = useState('loading');\r\n    let [result, setResult] = useState();\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    useEffect(() => {\r\n        Promise.resolve(promise)\r\n            .then(result => {\r\n                setStatus('success');\r\n                setResult(result);\r\n            })\r\n            .catch(err => {\r\n                setStatus('error');\r\n                setResult(err);\r\n                if(!error) {\r\n                    events.emit(ERROR_EVENT, err);\r\n                }\r\n            });\r\n    }, [promise, error, events]);\r\n\r\n    if(status === 'loading') {\r\n        return loading?.() ?? null;\r\n    }\r\n    if(status === 'error') {\r\n        return error?.(result) ?? null;\r\n    }\r\n    return children?.(result) ?? null;\r\n}","import React, {useContext, useState} from 'react';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../contexts/EventsContext';\r\nimport useListener from '../../../hooks/useListener';\r\nimport Loading from '../../common/Loading';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard/lib/Component';\r\nimport {FaCopy} from 'react-icons/fa';\r\nimport {Button} from 'react-bootstrap';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n\r\nexport default function OutputControlHandle({control, bindInput, query}) {\r\n\r\n    const findValue = async () => {\r\n        try {\r\n            return await query(control, control.getNode(), control.editor);\r\n        }\r\n        catch(err) {\r\n            console.warn(err);\r\n            return `<${err}>`;\r\n        }\r\n    };\r\n\r\n    const [valuePromise, setValuePromise] = useState(findValue);\r\n    const [copied, setCopied] = useState();\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => {\r\n        setValuePromise(findValue());\r\n    });\r\n\r\n    let tooltipRef;\r\n    const showTooltip = () => {\r\n        setCopied(true);\r\n        ReactTooltip.show(tooltipRef);\r\n        setTimeout(() => /*ReactTooltip.hide(tooltipRef)&*/setCopied(false), 1000);\r\n    };\r\n\r\n    useReactTooltip();\r\n\r\n    // TODO: \"Copy to Clipboard\" tooltip\r\n\r\n    return (\r\n        <Loading promise={valuePromise}>\r\n            {value => (value ?? null) && (\r\n                <div className=\"d-flex\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"w-100 small\"\r\n                        readOnly\r\n                        ref={bindInput}\r\n                        value={value || ''}\r\n                    />\r\n                    <CopyToClipboard text={value} /* onCopy={() => setCopied(true)} */ >\r\n                        <Button\r\n                            ref={bindInput}\r\n                            size=\"sm\"\r\n                            variant=\"outline-light\"\r\n                            data-tip={copied ? undefined : 'Copy to Clipboard'}\r\n                            onClick={showTooltip}>\r\n                            <span ref={ref => tooltipRef = ref} data-tip=\"Copied!\"/>\r\n                            <FaCopy/>\r\n                        </Button>\r\n                    </CopyToClipboard>\r\n                </div>\r\n            )}\r\n        </Loading>\r\n    );\r\n}\r\n","import {anyReversedType, anyType} from '../block-types/types';\r\nimport OutputControlHandle from '../components/rete/controls/OutputControlHandle';\r\nimport {compilerCategory} from '../block-categories/categories';\r\n\r\nexport function compileBlock(title, compilerKey, displayFn) {\r\n    function queryFor(inputKey) {\r\n        return function(control, node, editor) {\r\n            let value = editor.compilers[compilerKey].getInput(node, inputKey);\r\n            return displayFn ? displayFn(value) : value;\r\n        };\r\n    }\r\n\r\n    return {\r\n        title,\r\n        category: compilerCategory,\r\n        icon: compilerCategory.data.icon,\r\n        topLeft: 'input',\r\n        topRight: 'reversed',\r\n        inputs: [{\r\n            key: 'input',\r\n            title: 'Input',\r\n            type: anyType,\r\n        }, {\r\n            key: 'reversed',\r\n            title: 'Input',\r\n            type: anyReversedType,\r\n        }],\r\n        controls: [{\r\n            key: 'reversedDisplay',\r\n            title: 'Display',\r\n            config: {\r\n                controlType: OutputControlHandle,\r\n                controlProps: {\r\n                    query: queryFor('reversed'),\r\n                },\r\n            },\r\n        }, {\r\n            key: 'display',\r\n            config: {\r\n                controlType: OutputControlHandle,\r\n                controlProps: {\r\n                    query: queryFor('input'),\r\n                },\r\n            },\r\n        }],\r\n    };\r\n}\r\n","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport classNames from 'classnames';\r\n\r\n\r\nexport default function SelectControlHandle({control, bindInput, options, findLabel}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    if(value === undefined && !options.includes(value)) {\r\n        value = options[0];\r\n        setValue(value);\r\n    }\r\n\r\n    let invalid = !control.validate(value) || !options.includes(value);\r\n\r\n    return (\r\n        <select\r\n            className={classNames(invalid && 'invalid')}\r\n            ref={bindInput}\r\n            value={value}\r\n            onChange={event => setValue(event.target.value || undefined)}>\r\n            {options.map((option, i) => (\r\n                <option key={i} label={findLabel?.(option, i) ?? option} value={option}/>\r\n            ))}\r\n        </select>\r\n    );\r\n}\r\n","import SelectControlHandle from '../components/rete/controls/SelectControlHandle';\r\n\r\nexport function stringSelectProp(prop, options) {\r\n    return {\r\n        ...prop,\r\n        config: {\r\n            ...prop.config || {},\r\n            controlType: SelectControlHandle,\r\n            controlProps: {\r\n                options: prop.optional ? [undefined, ...options] : options,\r\n                findLabel: (option) => option ? option.charAt(0).toUpperCase() + option.substring(1) : '--',\r\n            },\r\n        },\r\n    };\r\n}","const examples = [\r\n    require('./files/Echo.blocks.json'),\r\n    require('./files/Counter.blocks.json'),\r\n];\r\n\r\nmodule.exports = {\r\n    getExampleProjects() {\r\n        return examples;\r\n    },\r\n};","var map = {\n\t\"./Actor.js\": 103,\n\t\"./ActorClass.js\": 104,\n\t\"./Add.js\": 105,\n\t\"./And.js\": 106,\n\t\"./Async.js\": 107,\n\t\"./Await.js\": 108,\n\t\"./CodeType.js\": 109,\n\t\"./CodeValue.js\": 110,\n\t\"./CompareEqual.js\": 111,\n\t\"./CompareGreater.js\": 112,\n\t\"./CompareGreaterEqual.js\": 113,\n\t\"./CompareLess.js\": 114,\n\t\"./CompareLessEqual.js\": 115,\n\t\"./CompareNotEqual.js\": 116,\n\t\"./CompileMotoko.js\": 117,\n\t\"./CompileType.js\": 120,\n\t\"./Conditional.js\": 121,\n\t\"./ConditionalValue.js\": 122,\n\t\"./Divide.js\": 123,\n\t\"./Function.js\": 124,\n\t\"./FunctionCall.js\": 125,\n\t\"./LiteralBool.js\": 126,\n\t\"./LiteralFloat.js\": 127,\n\t\"./LiteralInt.js\": 128,\n\t\"./LiteralNat.js\": 129,\n\t\"./LiteralText.js\": 130,\n\t\"./LiteralType.js\": 131,\n\t\"./LoopWhile.js\": 132,\n\t\"./Multiply.js\": 133,\n\t\"./Not.js\": 134,\n\t\"./Null.js\": 135,\n\t\"./Optional.js\": 136,\n\t\"./OptionalUnwrap.js\": 137,\n\t\"./Or.js\": 138,\n\t\"./Parameter.js\": 139,\n\t\"./Return.js\": 140,\n\t\"./State.js\": 141,\n\t\"./StateRead.js\": 142,\n\t\"./StateUpdate.js\": 143,\n\t\"./Subtract.js\": 144,\n\t\"./TextConcat.js\": 145,\n\t\"./TypeMember.js\": 146,\n\t\"./TypeMemberReference.js\": 147,\n\t\"./Variable.js\": 148\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 102;","import {actorType, identifierType, memberType} from '../block-types/types';\nimport {actorCategory} from '../block-categories/categories';\n\nconst block = {\n    info: 'An actor which can be deployed as a smart contract',\n    category: actorCategory,\n    topLeft: 'actor',\n    topRight: 'members',\n    global: true,\n    computeTitle(node, editor) {\n        let {name} = editor.compilers.motoko.getInputArgs(node);\n        return name;\n    },\n    inputs: [{\n        key: 'name',\n        type: identifierType,\n        optional: true,\n    }, {\n        key: 'members',\n        type: memberType,\n        multi: true,\n    }],\n    outputs: [{\n        key: 'actor',\n        type: actorType,\n        toMotoko({name, members}) {\n            return `actor${name ? ' ' + name : ''} { ${members.join(' ')} };`;\n        },\n    }],\n};\nexport default block;","import {actorType, identifierType, memberType, paramType} from '../block-types/types';\nimport {actorCategory} from '../block-categories/categories';\n\n// TODO: subclasses\nlet thisName = 'this';\n\nconst block = {\n    info: 'An object-oriented class of actors',\n    category: actorCategory,\n    topLeft: 'actor',\n    topRight: 'members',\n    global: true,\n    computeTitle(node, editor) {\n        let {name, params} = editor.compilers.motoko.getInputArgs(node);\n        if(!name) {\n            return;\n        }\n        return `${name}(${params.join(', ')})`;\n    },\n    inputs: [{\n        key: 'name',\n        type: identifierType,\n        optional: true,\n    }, {\n        key: 'members',\n        type: memberType,\n        multi: true,\n    }, {\n        key: 'params',\n        type: paramType,\n        multi: true,\n    }],\n    outputs: [{\n        key: 'actor',\n        type: actorType,\n        toMotoko({name, params, members}) {\n            return `actor class${name ? ' ' + name : ''}(${params.join(', ')}) = ${thisName} { ${members.join(' ')} };`;\n        },\n        // }, {\n        //     key: 'this',\n        //     type: valueType,\n        //     toMotoko({}) {\n        //         return thisName;\n        //     },\n    }],\n};\nexport default block;","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('+', (a, b) => a + b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(boolType, 'and', (a, b) => a && b);\r\nexport default block;","import {asyncType, valueType} from '../block-types/types';\nimport {operatorCategory} from '../block-categories/categories';\n\nconst block = {\n    title: '(async a)',\n    info: 'Retrieve a value asynchronously',\n    category: operatorCategory,\n    topRight: 'result',\n    inputs: [{\n        key: 'input',\n        type: valueType,\n    }],\n    outputs: [{\n        key: 'result',\n        type: asyncType,\n        inferType({input}) {\n            return asyncType.of(input);\n        },\n        toMotoko({input}) {\n            return `(async ${input})`;\n        },\n    }],\n};\nexport default block;\n","import {asyncType, valueType} from '../block-types/types';\nimport {operatorCategory} from '../block-categories/categories';\n\nconst block = {\n    title: '(await a)',\n    info: 'Wait for an asynchronous value',\n    category: operatorCategory,\n    topRight: 'result',\n    inputs: [{\n        key: 'input',\n        type: asyncType,\n    }],\n    outputs: [{\n        key: 'result',\n        type: valueType,\n        inferType({input}) {\n            return input.generics[0];\n        },\n        toMotoko({input}) {\n            return `(await ${input})`;\n        },\n    }],\n};\nexport default block;\n","import {codeBlock} from '../block-patterns/code-patterns';\r\nimport {typeType} from '../block-types/types';\r\n\r\nconst block = codeBlock('type', typeType);\r\nexport default block;","import {codeBlock} from '../block-patterns/code-patterns';\r\nimport {valueType} from '../block-types/types';\r\n\r\nconst block = codeBlock('value', valueType);\r\nexport default block;","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType, valueType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock([valueType, boolType], '==', (a, b) => a === b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('>', (a, b) => a > b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('>=', (a, b) => a >= b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('<', (a, b) => a < b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('<=', (a, b) => a <= b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType, valueType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock([valueType, boolType], '!=', (a, b) => a !== b);\r\nexport default block;\r\n","import {compileBlock} from '../block-patterns/compile-patterns';\n\nconst block = compileBlock('Motoko', 'motoko');\nexport default block;\n","import {compileBlock} from '../block-patterns/compile-patterns';\n\nconst block = compileBlock('Type', 'type', type => type?.toTypeString());\nexport default block;\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {boolType, effectType} from '../block-types/types';\r\n\r\nconst block = statementBlock({\r\n    title: 'if() then {} else {}',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'trueCase',\r\n        title: 'True',\r\n        type: effectType,\r\n        optional: true,\r\n    }, {\r\n        key: 'falseCase',\r\n        title: 'False',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n}, ({condition, trueCase, falseCase}) => {\r\n    if(String(condition) === 'true') {\r\n        return trueCase;\r\n    }\r\n    if(String(condition) === 'false') {\r\n        return falseCase;\r\n    }\r\n\r\n    let falsePart = falseCase ? ` else { ${falseCase} }` : '';\r\n    return `if (${condition}) { ${trueCase || ''} }${falsePart};`;\r\n});\r\nexport default block;","import {boolType, valueType} from '../block-types/types';\r\nimport {decompositionCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    title: 'Map Bool',\r\n    category: decompositionCategory,\r\n    topRight: 'result',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'true',\r\n        type: valueType,\r\n    }, {\r\n        key: 'false',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: valueType,\r\n        toMotoko({condition, trueCase, falseCase}) {\r\n            if(condition === true) {\r\n                return trueCase;\r\n            }\r\n            else if(condition === false) {\r\n                return falseCase;\r\n            }\r\n            return `(if (${condition}) {${trueCase}} else { ${falseCase} })`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('/', (a, b) => a / b);\r\nexport default block;","import {asyncType, boolType, effectType, paramType, unitType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock} from '../block-patterns/member-patterns';\r\nimport {functionCategory} from '../block-categories/categories';\r\nimport {stringSelectProp} from '../block-patterns/control-patterns';\r\n\r\nconst defaultReturnType = effectType.of(unitType);\r\n\r\nconst block = memberBlock({\r\n    info: 'Evaluate based on given input parameters',\r\n    category: functionCategory,\r\n    topRight: 'body',\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        // return name;/////\r\n        let {params, asyncKind} = editor.compilers.motoko.getInputArgs(node);\r\n        let returnType = editor.compilers.type.getInput(node, 'body');\r\n        if(!returnType) {\r\n            return;\r\n        }\r\n        returnType = returnType.generics[0]; // Unwrap Effect<>\r\n        if(asyncKind) {\r\n            returnType = asyncType.of(returnType);\r\n        }\r\n        return name && params && `${name}(${params.join(', ')})${returnType ? ' : ' + editor.compilers.motoko.getTypeString(returnType) : ''}`;\r\n    },\r\n    shortcuts: [{\r\n        block: 'Return',\r\n    }, {\r\n        block: 'FunctionCall',\r\n        nodeKey: 'functionNode',\r\n    }],\r\n    inputs: [{\r\n        key: 'params',\r\n        type: paramType,\r\n        multi: true,\r\n    }/*, {\r\n        key: 'returnType',\r\n        type: typeType.of(valueType),\r\n    }*/, {\r\n        key: 'body',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n    // outputs: [{\r\n    //     key: 'reference',\r\n    //     type: valueType,\r\n    //     toMotoko({name}) {\r\n    //         return name;\r\n    //     },\r\n    // }],\r\n    controls: [{\r\n        key: 'shared',\r\n        type: boolType,\r\n    }, stringSelectProp({\r\n        key: 'asyncKind',\r\n        optional: true,\r\n    }, ['async', 'query'])],\r\n}, {\r\n    toMotoko({visibility, shared, asyncKind, name, params, body}, node, compiler) {\r\n        // TODO: dry with State modifiers\r\n        let modifiers = [visibility !== 'system' && visibility, shared && 'shared', asyncKind === 'query' && asyncKind].filter(m => m).join(' '); //TODO: combine into single control\r\n\r\n        let returnType = body ? compiler.inferType(node, 'body') : defaultReturnType;\r\n        if(!returnType) {\r\n            return;\r\n        }\r\n        returnType = returnType.generics[0]; // Unwrap `Effect<>`\r\n        if(asyncKind) {\r\n            returnType = asyncType.of(returnType);\r\n        }\r\n        let returnString = compiler.getTypeString(returnType);\r\n        if(!returnString) {\r\n            return;///\r\n        }\r\n        return `${modifiers && modifiers + ' '}func${name ? ' ' + name : ''}(${params.join(', ')})${returnString !== '()' ? ': ' + returnString : ''} { ${body || ''} };`;\r\n    },\r\n});\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {nodeType, valueType} from '../block-types/types';\r\nimport {FaPlayCircle} from 'react-icons/fa';\r\nimport {functionCategory} from '../block-categories/categories';\r\n\r\nconst block = statementBlock({\r\n    info: 'Invoke a function in this project',\r\n    title: 'Call Function',\r\n    category: functionCategory,\r\n    icon: FaPlayCircle,\r\n    computeTitle(node, editor) {\r\n        let functionNode = editor.compilers.node.getInput(node, 'functionNode');\r\n        if(!functionNode) {\r\n            return;\r\n        }\r\n        let name = editor.compilers.motoko.getInput(functionNode, 'name');\r\n        let paramNames = editor.compilers.node.getInput(functionNode, 'params')\r\n            .map(n => editor.compilers.motoko.getInput(n, 'name'));\r\n        return name && `${name}(${paramNames.join(', ')})`;\r\n    },\r\n    inputs: [{\r\n        key: 'args',\r\n        type: valueType,\r\n        multi: true, // TODO: separate arg sockets\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: 'Value',\r\n        toMotoko({functionNode, args}, node, compiler) {\r\n            let name = compiler.getInput(functionNode, 'name');\r\n            if(!name) {\r\n                return;\r\n            }\r\n            return `${name}(${args.join(', ')})`;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'functionNode',\r\n        type: nodeType.withMeta({block: 'Function'}),\r\n    }],\r\n}, ({functionNode, args}, node, compiler) => {\r\n    let name = compiler.getOutput(functionNode, 'name');\r\n    if(!name) {\r\n        return;\r\n    }\r\n    return `ignore ${name}(${args.join(', ')});`;\r\n});\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Boolean',\r\n}, boolType);\r\nexport default block;","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {floatType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Float',\r\n}, floatType);\r\nexport default block;","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {intType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Integer',\r\n}, intType);\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {natType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Natural Number',\r\n}, natType);\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {textType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Text',\r\n}, textType, JSON.stringify);\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {typeType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Type',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(valueType),\r\n        control: true,\r\n        inferType({value}) {\r\n            return value;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {boolType, effectType} from '../block-types/types';\r\n\r\nconst block = statementBlock({\r\n    title: 'while() {}',\r\n    info: 'Repeat while the condition is true',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'loop',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n}, ({condition, loop}) => {\r\n    return `while (${condition}) { ${loop ?? ''} };`;\r\n});\r\nexport default block;","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {floatType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(floatType, '*', (a, b) => a * b);\r\nexport default block;","import {unaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = unaryOperatorBlock(boolType, 'not', (a) => !a);\r\nexport default block;\r\n","import {optionalType, valueType} from '../block-types/types';\r\nimport {literalCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    category: literalCategory,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: optionalType.of(valueType),// TODO: Option<*> or null type\r\n        // inferType() {\r\n        //     return ;\r\n        // },\r\n        toMotoko() {\r\n            return `null`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {optionalType, valueType} from '../block-types/types';\nimport {operatorCategory} from '../block-categories/categories';\n\nconst block = {\n    title: '(?a)',\n    info: 'Create an optional version of the input value',\n    category: operatorCategory,\n    topRight: 'result',\n    inputs: [{\n        key: 'input',\n        type: valueType,\n    }],\n    outputs: [{\n        key: 'result',\n        type: optionalType,\n        inferType({input}) {\n            return optionalType.of(input);\n        },\n        toMotoko({input}) {\n            return `(?${input})`;\n        },\n    }],\n};\nexport default block;\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {effectType, optionalType, valueType} from '../block-types/types';\r\nimport {decompositionCategory} from '../block-categories/categories';\r\n\r\nconst block = statementBlock({\r\n    title: 'Unwrap Optional',\r\n    info: 'Run different logic depending on whether an Optional value is null',\r\n    category: decompositionCategory,\r\n    inputs: [{\r\n        key: 'input',\r\n        type: optionalType,\r\n    }, {\r\n        key: 'valueCase',\r\n        title: 'Value',\r\n        type: effectType,\r\n        optional: true,\r\n    }, {\r\n        key: 'nullCase',\r\n        title: 'Null',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType({input}) {\r\n            return input;\r\n        },\r\n        toMotoko({input}, node) {\r\n            return `value__${node.id}`;\r\n        },\r\n    }],\r\n}, ({input, valueCase, nullCase}, node) => {\r\n    if(String(input) === 'null') {\r\n        return nullCase;\r\n    }\r\n\r\n    let valuePart = valueCase ? `case (?value__${node.id}) {${valueCase}};` : '';\r\n    let nullPart = nullCase ? `case null {${nullCase}};` : '';\r\n\r\n    return `switch (${input}) { ${valuePart}${nullPart && ' ' + nullPart} };`;\r\n});\r\nexport default block;","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(boolType, 'or', (a, b) => a || b);\r\nexport default block;\r\n","import {identifierType, paramType, typeType, valueType} from '../block-types/types';\r\nimport {paramCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    info: 'An input parameter to a class or function',\r\n    topLeft: 'param',\r\n    topRight: 'value',\r\n    category: paramCategory,\r\n    computeTitle(node, editor) {\r\n        let name = editor.compilers.motoko.getInput(node, 'name');\r\n        let type = editor.compilers.type.getInput(node, 'type');\r\n        return name && `${name} : ${type ? editor.compilers.motoko.getTypeString(type) : 'Any'}`;\r\n    },\r\n    inputs: [{\r\n        key: 'name',\r\n        type: identifierType,\r\n    }, {\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'param',\r\n        type: paramType,\r\n        toMotoko({name, type}, node, compiler) {\r\n            // console.log(type)//\r\n            let typeString = compiler.getTypeString(type) || 'Any';\r\n            return `${name} : ${typeString}`;\r\n        },\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n        toMotoko({name}) {\r\n            return name;\r\n        },\r\n        inferType({type}) {\r\n            return type;\r\n        },\r\n    }],\r\n};\r\nexport default block;","import {effectType, unitType, valueType} from '../block-types/types';\r\nimport {endStatementBlock} from '../block-patterns/statement-patterns';\r\nimport {functionCategory} from '../block-categories/categories';\r\nimport {FaCaretLeft} from 'react-icons/fa';\r\n\r\nconst block = endStatementBlock({\r\n    info: 'End a function\\'s execution path',\r\n    category: functionCategory,\r\n    icon: FaCaretLeft,\r\n    inputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        optional: true,\r\n    }],\r\n    // controls: [{\r\n    //     key: 'functionNode',\r\n    //     config: {\r\n    //         controlType: NodeControlHandle,\r\n    //         controlProps: {\r\n    //             component: 'Function',\r\n    //         },\r\n    //     },\r\n    // }],\r\n}, {\r\n    inferType({value}) {\r\n        return effectType.of(value || unitType);\r\n    },\r\n    toMotoko({value}) {\r\n        return `return${value ? ' ' + value : ''};`;\r\n    },\r\n});\r\nexport default block;","import {boolType, unitType, valueType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock} from '../block-patterns/member-patterns';\r\nimport {stateCategory} from '../block-categories/categories';\r\n\r\nconst block = memberBlock({\r\n    info: 'A persistent smart contract variable',\r\n    topRight: 'value',\r\n    category: stateCategory,\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        // let name = editor.compilers.motoko.getInput(node, 'name');\r\n        let type = editor.compilers.type.getInput(node, 'initialValue') || unitType;\r\n        return name && `${name}: ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    shortcuts: [{\r\n        block: 'StateRead',\r\n        nodeKey: 'stateNode',\r\n    }, {\r\n        block: 'StateUpdate',\r\n        nodeKey: 'stateNode',\r\n    }],\r\n    inputs: [{\r\n        //     key: 'type',\r\n        //     type: 'Type',\r\n        // }, {\r\n        key: 'initialValue',\r\n        type: valueType,\r\n        optional: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        toMotoko({name}) {\r\n            return name;\r\n        },\r\n        inferType({initialValue}) {\r\n            console.log(initialValue.toTypeString())///////\r\n            return initialValue;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'flexible',\r\n        type: boolType,\r\n        // }, {\r\n        //     key: 'readonly',\r\n        //     type: 'Bool',\r\n    }],\r\n}, {\r\n    toMotoko({visibility, flexible, name, initialValue}) {\r\n        let readonly = false;/// TODO: infer and/or adjust shortcuts\r\n        let modifiers = [visibility !== 'system' && visibility, !flexible && 'stable'].filter(m => m).join(' '); //TODO: combine into single control\r\n\r\n        return `${modifiers && modifiers + ' '}${readonly ? 'let' : 'var'} ${name}${initialValue ? ' = ' + initialValue : ''};`;\r\n    },\r\n});\r\nexport default block;\r\n","import {nodeType, valueType} from '../block-types/types';\r\nimport {stateCategory} from '../block-categories/categories';\r\nimport {FaAngleRight} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Read State',\r\n    category: stateCategory,\r\n    icon: FaAngleRight,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType(args, node, compiler) {\r\n            let stateNode = compiler.editor.compilers.node.getInput(node, 'stateNode');\r\n            if(!stateNode) {\r\n                return;\r\n            }\r\n            return compiler.getInput(stateNode, 'initialValue');\r\n        },\r\n        toMotoko(args, node, compiler) {\r\n            let stateNode = compiler.editor.compilers.node.getInput(node, 'stateNode');\r\n            if(!stateNode) {\r\n                return;\r\n            }\r\n            return compiler.getInput(stateNode, 'name');\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'stateNode',\r\n        type: nodeType.withMeta({block: 'State'}),\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {stateCategory} from '../block-categories/categories';\r\nimport {FaAngleDoubleRight} from 'react-icons/fa';\r\nimport {nodeType} from '../block-types/types';\r\n\r\nconst block = statementBlock({\r\n    title: 'Write State',\r\n    category: stateCategory,\r\n    icon: FaAngleDoubleRight,\r\n    inputs: [{\r\n        key: 'value',\r\n        type: 'Value',\r\n        // optional: true,\r\n    }],\r\n    // outputs: [{\r\n    //     key: 'newValue',\r\n    //     type: 'Value',\r\n    //     toMotoko({node: stateNode, value}, node, compiler) {\r\n    //         let name = compiler.getOutput(stateNode, 'name');\r\n    //         if(!name) {\r\n    //             return;\r\n    //         }\r\n    //         return `(${name} := ${value || '()'})`;\r\n    //     },\r\n    // }],\r\n    controls: [{\r\n        key: 'stateNode',\r\n        type: nodeType.withMeta({block: 'State'}),\r\n    }],\r\n}, ({stateNode, value}, node, compiler) => {\r\n    let name = compiler.getInput(stateNode, 'name');\r\n    if(!name) {\r\n        return;\r\n    }\r\n    return `${name} := ${value};`;\r\n});\r\nexport default block;\r\n","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('-', (a, b) => a - b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {textType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(textType, '#', (a, b) => a || b);\r\nexport default block;\r\n","import {typeType, valueType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock} from '../block-patterns/member-patterns';\r\nimport {typeCategory} from '../block-categories/categories';\r\n\r\nconst block = memberBlock({\r\n    title: 'Named Type',\r\n    info: 'An actor-level type definition',\r\n    category: typeCategory,\r\n    topRight: 'type',\r\n    shortcuts: [{\r\n        block: 'TypeMemberReference',\r\n        nodeKey: 'typeNode',\r\n    }],\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        let type = editor.compilers.type.getInput(node, 'type');\r\n        let typeString = editor.compilers.motoko.getTypeString(type);\r\n        return `${name || '(?)'} = ${typeString}`;\r\n    },\r\n    outputs: [{\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n        control: true,\r\n        inferType({type}) {\r\n            if(!type.isAbstract()) {\r\n                return typeType.of(type);\r\n            }\r\n            // if(!type) {\r\n            //     return;\r\n            // }\r\n            // let valueType = type.generics[0];\r\n            // console.log(valueType)\r\n            // // if(!valueType.isAbstract()) {\r\n            // return valueType;\r\n            // // }\r\n        },\r\n    }],\r\n}, {\r\n    toMotoko({visibility, name, type}) {\r\n        let modifiers = [visibility !== 'system' && visibility].filter(m => m).join(' ');\r\n\r\n        return `${modifiers && modifiers + ' '}type ${name} = ${type};`;\r\n    },\r\n});\r\nexport default block;\r\n","import {nodeType, typeType, valueType} from '../block-types/types';\r\nimport {typeCategory} from '../block-categories/categories';\r\nimport {FaAngleRight} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Type Reference',\r\n    category: typeCategory,\r\n    icon: FaAngleRight,\r\n    topRight: 'type',\r\n    computeTitle(node, editor) {\r\n        let typeNode = editor.compilers.node.getInput(node, 'typeNode');\r\n        if(!typeNode) {\r\n            return;\r\n        }\r\n        return editor.compilers.motoko.getInput(typeNode, 'name');\r\n    },\r\n    outputs: [{\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n        inferType({typeNode}, node, editor) {\r\n            return editor.compilers.types.getInput(typeNode, 'type');\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'typeNode',\r\n        type: nodeType.withMeta({block: 'TypeMember'}),\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {identifierType, valueType} from '../block-types/types';\r\nimport {paramCategory} from '../block-categories/categories';\r\n\r\nconst block = statementBlock({\r\n    title: 'Local Variable',\r\n    info: 'Store and retrieve data from within a function',\r\n    category: paramCategory,\r\n    inputs: [{\r\n        key: 'name',\r\n        type: identifierType,\r\n        optional: true,\r\n    }, {\r\n        key: 'initialValue',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType({initialValue}) {\r\n            return initialValue;\r\n        },\r\n        toMotoko({name}, node) {\r\n            return name || `var__${node.id}`;\r\n        },\r\n    }],\r\n}, ({name, initialValue}, node) => {\r\n    return `var ${name || `var__${node.id}`} = ${initialValue};`;\r\n});\r\nexport default block;","import React, {useMemo, useCallback} from 'react';\r\n\r\nexport default function ContextMenu({x, y, children, style: styleProp, handleCloseMenu, ...others}) {\r\n\r\n    const style = useMemo(() => ({\r\n        position: 'absolute',\r\n        left: x,\r\n        top: y,\r\n        ...styleProp,\r\n    }), [x, y, styleProp]);\r\n\r\n    const bindScreen = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        const listener = event => event.stopPropagation();\r\n        el.addEventListener('pointermove', listener);\r\n        el.addEventListener('mousemove', listener);\r\n        el.addEventListener('wheel', listener);\r\n    }, []);\r\n\r\n    const bindContainer = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        const moveIntoWindow = () => {\r\n            let offset = el.getBoundingClientRect().bottom - window.innerHeight;\r\n            if(offset > 0) {\r\n                el.style.top = `${y - offset}px`;\r\n            }\r\n        };\r\n        moveIntoWindow();\r\n        el.onresize = moveIntoWindow;\r\n    }, [y]);\r\n\r\n    return (\r\n        <div\r\n            className=\"context-menu-screen\"\r\n            style={{position: 'absolute', top: 0, left: 0, bottom: 0, right: 0, pointerEvents: 'all'}}\r\n            ref={bindScreen}\r\n            onKeyDown={e => e.keyCode === 27 /* escape */ && handleCloseMenu()}\r\n            onMouseDown={() => handleCloseMenu()}\r\n            {...others}>\r\n            <div className=\"context-menu-container\" style={style} ref={bindContainer}>\r\n                <div className=\"context-menu\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const MenuContext = React.createContext(null);\r\n","export default function MenuIcon({children, color}) {\r\n    return (\r\n        <span className=\"context-menu-icon\" style={{color}}>{children}</span>\r\n    );\r\n}","import classNames from 'classnames';\r\nimport MenuIcon from './MenuIcon';\r\n\r\nexport default function MenuAction({icon, color, selected, onAction, children, style, ...others}) {\r\n    return (\r\n        <div\r\n            className={classNames('context-menu-action', selected && 'selected')}\r\n            style={{color, userSelect: 'none', ...style}}\r\n            onMouseDown={event => event.button === 0 && onAction(event)} {...others}>\r\n            {icon && <MenuIcon>{icon}</MenuIcon>}\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React, {useContext} from 'react';\r\nimport MenuAction from '../MenuAction';\r\nimport {MenuContext} from '../../contexts/MenuContext';\r\n\r\n\r\nexport default function SelectionMenu() {\r\n\r\n    const {editor} = useContext(MenuContext);\r\n\r\n    return (\r\n        <>\r\n            <MenuAction onAction={() => editor.selected.each(node => editor.removeNode(node))}>Delete</MenuAction>\r\n            {/*<MenuOption>Clone</MenuOption>*/}\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport MenuAction from './MenuAction';\r\nimport {FaRegStickyNote} from 'react-icons/fa';\r\nimport getBlockLabel from '../../../utils/getBlockLabel';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\n\r\n\r\nexport default function MenuComponent({component, ...others}) {\r\n    const block = component.block;\r\n    const category = block?.category;\r\n\r\n    useReactTooltip();\r\n    if(block?.info) {\r\n        others = {\r\n            'data-tip': block.info.endsWith('.') ? block.info : `${block.info}.`,\r\n            'data-place': 'right',\r\n            ...others,\r\n        };\r\n    }\r\n\r\n    return (\r\n        <MenuAction\r\n            icon={React.createElement(block?.icon || category?.data.icon || FaRegStickyNote)}\r\n            color={category?.data.color}\r\n            {...others}>\r\n            {getBlockLabel(block) || component.name}\r\n        </MenuAction>\r\n    );\r\n}","import {useCallback} from 'react';\r\n\r\nexport default function MenuSearch({value, onChange, onAction, onKeyDown, children, ...others}) {\r\n\r\n    const bindInput = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        el.focus();\r\n        // el.select();\r\n    }, [{}/* Force redraw in order to refocus */]); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n\r\n    const handleKeyDown = (onKeyDown || onAction) && (event => {\r\n        if(onKeyDown) {\r\n            onKeyDown(event);\r\n        }\r\n        if(onAction && event.key === 'Enter') {\r\n            onAction();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                className=\"context-menu-search\"\r\n                autoFocus\r\n                ref={bindInput}\r\n                autoComplete=\"blocks-search\"\r\n                value={value || ''}\r\n                onClick={event => event.stopPropagation()}\r\n                onChange={onChange && (event => onChange(event.target.value))}\r\n                onKeyDown={handleKeyDown}\r\n                {...others}/>\r\n            <div className=\"context-menu-search-area\">\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, {useCallback, useContext, useState} from 'react';\r\nimport MenuComponent from '../MenuComponent';\r\nimport {MenuContext} from '../../contexts/MenuContext';\r\nimport MenuSearch from '../MenuSearch';\r\nimport useEditorComponents from '../../hooks/useEditorComponents';\r\n\r\nfunction deepCopy(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nexport async function createNode(component, {data, meta, position: {x, y} = {}}) {\r\n    const node = await component.createNode(data ? deepCopy(data) : {});\r\n    if(meta) {\r\n        node.meta = Object.assign(deepCopy(meta), node.meta);\r\n    }\r\n    [node.position[0], node.position[1]] = [x, y];\r\n    return node;\r\n}\r\n\r\nfunction findRelevantComponents(input, output, components) {\r\n    if(!input && !output) {\r\n        return components;\r\n    }\r\n    let [inputType, outputType] = [input?.socket.findType?.(), output?.socket.findType?.()];\r\n    // if(!inputType && !outputType) {\r\n    //     return [];\r\n    // }\r\n    if(inputType?.data.reversed || outputType?.data.reversed) {\r\n        [inputType, outputType] = [outputType, inputType];\r\n    }\r\n    return components.filter(c =>\r\n        (!inputType || c.block.outputs.some((prop) => inputType.isSubtype(prop.type) || prop.type.isSubtype(inputType))) &&\r\n        (!outputType || c.block.inputs.some((prop) => outputType.isSubtype(prop.type) || prop.type.isSubtype(outputType))));\r\n}\r\n\r\nexport default function PlacementMenu() {\r\n    let [searchText, setSearchText] = useState('');\r\n    let [index, setIndex] = useState(0);\r\n\r\n    let {editor, mouse, context} = useContext(MenuContext);\r\n\r\n    let components = useEditorComponents(editor, c => [c.block?.category.root.name, c.data.title || c.name]);\r\n    if(context) {\r\n        components = findRelevantComponents(context.input, context.output, components);\r\n    }\r\n    else {\r\n        components = components.filter(c => c.block.global);\r\n    }\r\n    index = Math.min(components.length - 1, index);\r\n\r\n    if(searchText) {\r\n        let lower = searchText.toLowerCase();\r\n        components = components.filter(c => c.keywords?.some(k => k.toLowerCase().startsWith(lower)) || c.name.toLowerCase().startsWith(lower));\r\n    }\r\n\r\n    // Arrow keys pressed\r\n    function handleSearchKeyDown(event) {\r\n        if(event.keyCode === 38 /* Up Arrow */) {\r\n            setIndex(Math.max(0, index - 1));\r\n        }\r\n        if(event.keyCode === 40 /* Down Arrow */) {\r\n            setIndex(index + 1);\r\n        }\r\n    }\r\n\r\n    // Enter key pressed\r\n    async function handleSearchAction() {\r\n        if(components.length) {\r\n            await handleCreateNode(components[index]);\r\n        }\r\n    }\r\n\r\n    // Create node from component\r\n    const handleCreateNode = useCallback(async (component) => {\r\n        setSearchText('');\r\n        editor.trigger('hidecontextmenu');\r\n\r\n        const node = await createNode(component, {position: mouse});\r\n        editor.addNode(node);\r\n\r\n        if(context) {\r\n            let {input, output} = context;\r\n            if(input) {\r\n                const output = [...node.outputs.values()].find(output => input.socket.compatibleWith(output.socket));\r\n                if(output) {\r\n                    editor.connect(output, input);\r\n                }\r\n            }\r\n            if(output) {\r\n                const input = [...node.inputs.values()].find(input => input.socket.compatibleWith(output.socket));\r\n                if(input) {\r\n                    editor.connect(output, input);\r\n                }\r\n            }\r\n        }\r\n    }, [editor, mouse, context]);\r\n\r\n    // TODO: create literal blocks when typing numbers, strings, etc.\r\n    let menuItems = components.map((component, i) => (\r\n        <MenuComponent\r\n            key={component.name}\r\n            component={component}\r\n            selected={index === i}\r\n            onAction={() => handleCreateNode(component)}\r\n        />\r\n    ));\r\n    return context ? (\r\n        <MenuSearch\r\n            value={searchText}\r\n            onChange={setSearchText}\r\n            onKeyDown={handleSearchKeyDown}\r\n            onAction={handleSearchAction}>\r\n            {menuItems}\r\n        </MenuSearch>\r\n    ) : menuItems;\r\n}","import {useMemo} from 'react';\r\n\r\nexport default function useEditorComponents(editor, sortFn) {\r\n    const hash = [...editor.components].map(c => c.name).join('##');\r\n\r\n    return useMemo(() => {\r\n        return [...editor.components.values()]\r\n            .map(v => [sortFn(v), v])\r\n            .sort(([a], [b]) => {\r\n                if(Array.isArray(a)) {\r\n                    for(let i = 0; i < a.length; i++) {\r\n                        let compare = a[i].localeCompare(b[i]);\r\n                        if(compare !== 0) {\r\n                            return compare;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return a.localeCompare(b);\r\n                }\r\n            })\r\n            .map(([, v]) => v);\r\n    }, [hash]); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ContextMenu from './components/ContextMenu';\r\nimport {MenuContext} from './contexts/MenuContext';\r\nimport SelectionMenu from './components/menus/SelectionMenu';\r\nimport PlacementMenu from './components/menus/PlacementMenu';\r\nimport Rete from 'rete';\r\n\r\n// Adapted from https://github.com/michael-braun/rete-react-contextmenu-plugin\r\n\r\nfunction install(editor, config = {}) {\r\n    editor.bind('hidecontextmenu');\r\n    editor.bind('showcontextmenu');\r\n\r\n    let [offsetX, offsetY] = config.offset ? [config.offset.x, config.offset.y] : [-10, -10];\r\n\r\n    let menu = null;\r\n\r\n    editor.on('hidecontextmenu', () => {\r\n        if(menu) {\r\n            menu.style.display = 'none';\r\n        }\r\n    });\r\n\r\n    editor.on(['click', 'contextmenu'], () => {\r\n        editor.trigger('hidecontextmenu');\r\n    });\r\n\r\n    editor.on('contextmenu', ({e, node, context}) => {\r\n        e.preventDefault?.();\r\n        // if(e.button === 2) {\r\n        //     return;///\r\n        // }\r\n        e.stopPropagation?.();\r\n\r\n        if(!editor.trigger('showcontextmenu', {e, node, context})) {\r\n            return;\r\n        }\r\n\r\n        // Select node under cursor\r\n        if(node) {\r\n            if(!editor.selected.contains(node)) {\r\n                editor.selectNode(node);\r\n            }\r\n        }\r\n        else {\r\n            // editor.selected.clear();\r\n        }\r\n\r\n        const [x, y] = [e.clientX, e.clientY];\r\n\r\n        if(!menu) {\r\n            menu = document.createElement('div');\r\n            editor.view.container.appendChild(menu);\r\n        }\r\n        menu.style.display = 'block';\r\n        ReactDOM.render((\r\n            <ContextMenu\r\n                x={x + offsetX}\r\n                y={y + offsetY}\r\n                handleCloseMenu={() => editor.trigger('hidecontextmenu')}>\r\n                {/*<AppTooltip/>*/}\r\n                <MenuContext.Provider value={{editor, mouse, node, context}}>\r\n                    {node ? (\r\n                        <SelectionMenu/>\r\n                    ) : (\r\n                        <PlacementMenu/>\r\n                    )}\r\n                </MenuContext.Provider>\r\n            </ContextMenu>\r\n        ), menu);\r\n    });\r\n\r\n    editor.on('destroy', () => {\r\n        editor.trigger('hidecontextmenu');\r\n        if(menu) {\r\n            menu.remove();\r\n            menu = null;\r\n        }\r\n    });\r\n\r\n    let mouse;\r\n    let mouseEvent;\r\n    let connectionMouseMoved = false;\r\n    let removingConnection = false;\r\n\r\n    editor.view.container.addEventListener('pointermove', e => mouseEvent = e);\r\n\r\n    // // Open context menu on left click\r\n    // editor.on('click', e => {\r\n    //     editor.trigger('contextmenu', {e});\r\n    // });\r\n\r\n    editor.on('mousemove', m => {\r\n        mouse = m;\r\n        connectionMouseMoved = true;\r\n    });\r\n\r\n    editor.on('connectionpick', io => {\r\n        connectionMouseMoved = false;\r\n        let prevConnections = [...io.connections];\r\n        setTimeout(() => {\r\n            if(io.connections.length < prevConnections.length) {\r\n                // Connection is being removed\r\n                removingConnection = true;\r\n            }\r\n        });\r\n    });\r\n\r\n    editor.on('connectiondrop', io => {\r\n        if(!connectionMouseMoved) {\r\n            return;\r\n        }\r\n        if(removingConnection) {\r\n            removingConnection = false;\r\n            return;\r\n        }\r\n        let prevConnections = [...io.connections];\r\n        setTimeout(() => {\r\n            // Prevent activating if connections changed\r\n            if(io.connections.length !== prevConnections.length || io.connections.some((conn, i) =>\r\n                (conn.input !== prevConnections[i].input) || (conn.output !== prevConnections[i].output))) {\r\n                return;\r\n            }\r\n            editor.trigger('contextmenu', {\r\n                e: mouseEvent,\r\n                context: {\r\n                    input: io instanceof Rete.Input ? io : null,\r\n                    output: io instanceof Rete.Output ? io : null,\r\n                },\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nconst ContextMenuPlugin = {\r\n    name: 'blocks-contextmenu',\r\n    install,\r\n};\r\nexport default ContextMenuPlugin;\r\n","import React from 'react';\r\nimport {paramCase} from 'change-case';\r\nimport classNames from 'classnames';\r\nimport Rete from 'rete';\r\n\r\n// Adapted from https://github.com/retejs/react-render-plugin/blob/master/src/Socket.jsx\r\n\r\nexport function SocketHandle(props) {\r\n    const {type, socket, innerRef, io} = props;\r\n\r\n    let socketType = socket.findType();\r\n    let reversed = !!socketType.data.reversed;\r\n\r\n    let multiple = io.multipleConnections && (io instanceof Rete.Input) === !reversed;\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'socket',\r\n                type,\r\n                paramCase(socket.name),\r\n                multiple && 'multiple',\r\n                reversed && 'reversed',\r\n                !multiple && io.connections.length && 'occupied',\r\n                'category-' + socketType.data.category,\r\n            )}\r\n            title={socket.name}\r\n            ref={el => el && innerRef(el, type, io)}\r\n        />\r\n    );\r\n}","import {useContext, useState} from 'react';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../../contexts/EventsContext';\r\nimport useListener from '../../../../hooks/useListener';\r\nimport useReactTooltip from '../../../../hooks/useReactTooltip';\r\n\r\nexport default function DynamicTitle({editor, node, block, fallback}) {\r\n\r\n    const computeTitle = () => {\r\n        try {\r\n            return block.computeTitle(node, editor);\r\n        }\r\n        catch(err) {\r\n            console.error(`Unable to compute title for node: ${node.name}`);\r\n            console.error(err);\r\n            return '<Error>';\r\n        }\r\n    };\r\n\r\n    const [title, setTitle] = useState(computeTitle);\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => setTitle(computeTitle()));\r\n\r\n    const result = title || fallback || null;\r\n\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <span data-tip={result}>{result}</span>\r\n    );\r\n}","import getDefaultLabel from './getDefaultLabel';\r\n\r\nexport default function getPropLabel(prop) {\r\n    if(!prop) {\r\n        return '';\r\n    }\r\n    return prop.title || getDefaultLabel(prop.key);\r\n}","// Enable selecting input fields without dragging node\r\nexport const bindNodeInput = ref => ref && ref.addEventListener('pointerdown', event => event.stopPropagation());\r\n","import React, {useContext} from 'react';\r\nimport {bindNodeInput} from '../../../../utils/bindNodeInput';\r\nimport getBlockLabel from '../../../../utils/getBlockLabel';\r\nimport {Button} from 'react-bootstrap';\r\nimport EventsContext, {ERROR_EVENT} from '../../../../contexts/EventsContext';\r\nimport useReactTooltip from '../../../../hooks/useReactTooltip';\r\n\r\nexport default function ShortcutButton({editor, node, shortcut}) {\r\n    let {block} = shortcut;\r\n    let {category} = block;\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    let onClick = async event => {\r\n        try {\r\n            let component = editor.components.get(block.name);\r\n            if(!component) {\r\n                events.emit(ERROR_EVENT, `Component not found: ${block.name}`);\r\n                return;\r\n            }\r\n            let data = {};\r\n            if(node && shortcut.nodeKey) {\r\n                data[shortcut.nodeKey] = node.id;\r\n            }\r\n            let newNode = await component.createNode(data);\r\n            let {x, y} = editor.view.area.mouse;\r\n            [newNode.position[0], newNode.position[1]] = [x - 80, y - 20];\r\n            editor.addNode(newNode);\r\n\r\n            // Start dragging node\r\n            let nodeView = editor.view.nodes.get(newNode);\r\n            nodeView._drag.down(event);\r\n        }\r\n        catch(err) {\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    };\r\n\r\n    useReactTooltip([block]);\r\n\r\n    return (\r\n        <Button\r\n            ref={bindNodeInput}\r\n            className=\"node-shortcut-button px-1 pt-0 pb-1\"\r\n            data-tip={getBlockLabel(block)}\r\n            data-delay-show={100}\r\n            style={{\r\n                background: 'none',\r\n                color: category.data.color,\r\n                borderColor: category.data.color,\r\n                cursor: 'grab',\r\n                // fontSize: '1em',\r\n            }}\r\n            onMouseDown={onClick}>\r\n            {block.icon\r\n                ? React.createElement(block.icon)\r\n                : getBlockLabel(block)}\r\n        </Button>\r\n    );\r\n}","import React from 'react';\r\nimport {Control, Node} from 'rete-react-render-plugin';\r\nimport {SocketHandle} from '../sockets/SocketHandle';\r\nimport {getBlock} from '../../../editor/blocks';\r\nimport classNames from 'classnames';\r\nimport {paramCase} from 'change-case';\r\nimport DynamicTitle from './parts/DynamicTitle';\r\nimport getNodeLabel from '../../../utils/getNodeLabel';\r\nimport getPropLabel from '../../../utils/getPropLabel';\r\nimport {ButtonGroup} from 'react-bootstrap';\r\nimport ShortcutButton from './parts/ShortcutButton';\r\n\r\nfunction PropHandle({prop, node, hideLeft, hideRight, bindSocket, bindControl}) {\r\n    let input = node.inputs.get(prop.key);\r\n    let output = node.outputs.get(prop.key);\r\n    let control = node.controls.get(prop.key) || (input?.showControl() && input.control);\r\n\r\n    let leftSocket = input && !hideLeft && (\r\n        <SocketHandle\r\n            type=\"input\"\r\n            socket={input.socket}\r\n            io={input}\r\n            innerRef={bindSocket}\r\n        />\r\n    );\r\n    let rightSocket = output && !hideRight && (\r\n        <SocketHandle\r\n            type=\"output\"\r\n            socket={output.socket}\r\n            io={output}\r\n            innerRef={bindSocket}\r\n        />\r\n    );\r\n    let controlField = control && (\r\n        <Control\r\n            className={input ? 'input-control' : 'control'}\r\n            control={control}\r\n            innerRef={bindControl}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className={classNames('prop', 'key-' + paramCase(prop.key))}>\r\n            <div className=\"input\">\r\n                {leftSocket}\r\n                {controlField || (leftSocket && (\r\n                    <div className=\"input-title\">{getPropLabel(prop)}</div>\r\n                ))}\r\n            </div>\r\n            <div className=\"output\">\r\n                {!input && (rightSocket && (\r\n                    <div className=\"output-title\">{getPropLabel(prop)}</div>\r\n                ))}\r\n                {rightSocket}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class NodeHandle extends Node {\r\n    render() {\r\n        const {editor, node, bindSocket, bindControl} = this.props;\r\n        const {selected} = this.state;\r\n\r\n        let block = getBlock(node.name);\r\n\r\n        // Properties for the top left/right corners\r\n        let topLeft = block.topLeft && node.inputs.get(block.topLeft);\r\n        let topRight = block.topRight && node.outputs.get(block.topRight);\r\n\r\n        let title = getNodeLabel(node, editor, true);\r\n        if(block.computeTitle) {\r\n            title = <DynamicTitle editor={editor} node={node} block={block} fallback={title}/>;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('node', selected)}>\r\n                <div className=\"header d-flex\">\r\n                    {topLeft && (\r\n                        <div>\r\n                            <SocketHandle\r\n                                type=\"input\"\r\n                                socket={topLeft.socket}\r\n                                io={topLeft}\r\n                                innerRef={bindSocket}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <div\r\n                        className=\"title d-inline-block flex-grow-1 text-nowrap overflow-hidden\"\r\n                        style={{color: block.category.data.color}}>\r\n                        {block.icon && (\r\n                            // TODO: improve icon render logic\r\n                            <span className=\"d-inline-block pe-1\" style={{transform: 'translateY(-.1em)'}}>\r\n                                {React.createElement(block.icon)}\r\n                            </span>\r\n                        )}\r\n                        {title}\r\n                    </div>\r\n                    {topRight && (\r\n                        <div>\r\n                            <SocketHandle\r\n                                type=\"output\"\r\n                                socket={topRight.socket}\r\n                                io={topRight}\r\n                                innerRef={bindSocket}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {block.shortcuts.length > 0 && (\r\n                    <ButtonGroup className=\"px-4 py-1 w-100\" style={{background: '#0002'}}>\r\n                        {block.shortcuts.map((shortcut, i) => (\r\n                            <ShortcutButton key={i} editor={editor} node={node} shortcut={shortcut}/>\r\n                        ))}\r\n                    </ButtonGroup>\r\n                )}\r\n                {Object.values(block.props)\r\n                    .filter(prop => !prop.hidden && (prop.control || ((!topLeft || prop.key !== block.topLeft) && (!topRight || prop.key !== block.topRight))))\r\n                    .map(prop => (\r\n                        <PropHandle\r\n                            key={prop.key}\r\n                            prop={prop}\r\n                            node={node}\r\n                            hideLeft={prop.key === block.topLeft}\r\n                            hideRight={prop.key === block.topRight}\r\n                            bindSocket={bindSocket}\r\n                            bindControl={bindControl}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as Rete from 'rete';\r\nimport TextControlHandle from '../../components/rete/controls/TextControlHandle';\r\nimport EventEmitter from 'events';\r\nimport {bindNodeInput} from '../../utils/bindNodeInput';\r\n\r\nexport default class BaseControl extends Rete.Control {\r\n    constructor(editor, key, name, config = {}) {\r\n        super(key);\r\n\r\n        this.name = name;\r\n        this.config = config;\r\n        this.editor = editor;\r\n        this.render = 'react';\r\n        this.component = config.controlType || TextControlHandle;\r\n        this.props = {\r\n            ...config.controlProps,\r\n            validation: config.validation || {},\r\n            control: this,\r\n            editor,\r\n            bindInput: bindNodeInput,\r\n        };\r\n\r\n        this.events = new EventEmitter();\r\n    }\r\n\r\n    validate(value) {\r\n        if(value === undefined && !this.config.optional) {\r\n            return false;\r\n        }\r\n        if(value !== null && value !== undefined) {\r\n            let validation = this.config.validation;\r\n            if(validation) {\r\n                if('custom' in validation && !validation.custom(value)) {\r\n                    return false;\r\n                }\r\n                if('minLength' in validation && value.length < validation.minLength) {\r\n                    return false;\r\n                }\r\n                if('maxLength' in validation && value.length > validation.maxLength) {\r\n                    return false;\r\n                }\r\n                if('min' in validation && value < validation.min) {\r\n                    return false;\r\n                }\r\n                if('max' in validation && value > validation.max) {\r\n                    return false;\r\n                }\r\n                if('step' in validation && value - (validation.min || 0) % validation.step !== 0) {\r\n                    return false;\r\n                }\r\n                if('pattern' in validation && !validation.pattern.test(value)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getDefaultValue() {\r\n        // return this.config.defaultValue;\r\n    }\r\n\r\n    getValue() {\r\n        let value = this.getData(this.key);\r\n        return value === undefined ? this.getDefaultValue() : value;\r\n    }\r\n\r\n    setValue(value) {\r\n        this.putData(this.key, value);\r\n        this.events.emit('update', value);\r\n    }\r\n}\r\n","import BaseControl from './BaseControl';\r\n\r\nexport default class PropControl extends BaseControl {\r\n    constructor(editor, prop, name) {\r\n        super(editor, prop.key, name, {\r\n            ...prop.type?.data || {},\r\n            ...prop.config || {},\r\n            prop,\r\n            type: prop.type,\r\n            optional: prop.optional,\r\n        });\r\n    }\r\n\r\n    getDefaultValue() {\r\n        // let value = super.getDefaultValue();\r\n        // return value !== undefined ? value : this.config.type?.getDefaultValue();\r\n\r\n        return this.config.type?.getDefaultValue();\r\n    }\r\n\r\n    // Called every EDITOR_CHANGE_EVENT when control is visible\r\n    notifyEditorChange() {\r\n        // this.config.prop.onUpdateControl?.(this, this.getNode(), this.editor);\r\n    }\r\n}","import Rete from 'rete';\r\n\r\nexport default class BaseComponent extends Rete.Component {\r\n\r\n    getEditorNode(node) {\r\n        return this.editor.nodes.find(n => n.id === node.id);\r\n    }\r\n\r\n    getControls(node) {\r\n        return this.getEditorNode(node).controls;\r\n    }\r\n}","import Rete from 'rete';\r\nimport {getType} from '../../block-types/types';\r\n\r\nexport default class TypeSocket extends Rete.Socket {\r\n    constructor(type) {\r\n        type = getType(type);\r\n        super(type.name, {...type.data, type});\r\n    }\r\n\r\n    findType() {\r\n        return this.data.type;\r\n    }\r\n\r\n    setType(type) {\r\n        this.data.type = type;\r\n    }\r\n\r\n    compatibleWith(other) {\r\n        if(!('findType' in other)) {\r\n            return false;\r\n        }\r\n        let type = this.findType();\r\n        let otherType = other.findType();\r\n\r\n        return type.isSubtype(otherType) || otherType.isSubtype(type);\r\n    }\r\n}","import Rete from 'rete';\r\nimport PropControl from '../controls/PropControl';\r\nimport BaseComponent from './BaseComponent';\r\nimport TypeSocket from '../sockets/TypeSocket';\r\nimport {sentenceCase} from 'change-case';\r\nimport getPropLabel from '../../utils/getPropLabel';\r\n\r\nexport default class BlockComponent extends BaseComponent {\r\n\r\n    constructor(block) {\r\n        super(block.name);\r\n\r\n        this.block = block;\r\n        this.keywords = [\r\n            ...sentenceCase(block.name).toLowerCase().split(' ').filter(s => s),\r\n            ...block.title?.split(' ').filter(s => s) || [],\r\n            ...block.keywords || [],\r\n        ];\r\n    }\r\n\r\n    async builder(node) {\r\n\r\n        const addProp = (prop, isOutput) => {\r\n            let socket = new TypeSocket(prop.type);\r\n            if(!!prop.type.data.reversed === isOutput) {\r\n                return addPropInput(prop, socket, isOutput);\r\n            }\r\n            else {\r\n                return addPropOutput(prop, socket, isOutput);\r\n            }\r\n        };\r\n\r\n        const addPropInput = (prop, socket, isOutput) => {\r\n            let title = getPropLabel(prop);\r\n            let input = new Rete.Input(prop.key, title, socket, prop.type.data.reversed || !!prop.multi);\r\n            if(shouldPropHaveControl(prop, socket, isOutput)) {\r\n                input.addControl(new PropControl(this.editor, prop, title));\r\n            }\r\n            node.addInput(input);\r\n            return input;\r\n        };\r\n\r\n        const addPropOutput = (prop, socket, isOutput) => {\r\n            let title = getPropLabel(prop);\r\n            let output = new Rete.Output(prop.key, title, socket, !prop.type.data.reversed || !!prop.multi);\r\n            node.addOutput(output);\r\n            if(shouldPropHaveControl(prop, socket, isOutput)) {\r\n                node.addControl(new PropControl(this.editor, prop, title));\r\n            }\r\n            return output;\r\n        };\r\n\r\n        const shouldPropHaveControl = (prop, socket, isOutput) => {\r\n            return prop.control || (!!socket.data.reversed === isOutput && socket.data.controlType);\r\n        };\r\n\r\n        delete node.meta.title;\r\n        // if(this.block.title) {\r\n        //     node.meta.title = this.block.title;\r\n        // }\r\n        // else {\r\n        //     delete node.meta.title;\r\n        // }\r\n\r\n        for(let prop of this.block.inputs) {\r\n            addProp(prop, false);\r\n        }\r\n        for(let prop of this.block.outputs) {\r\n            addProp(prop, true);\r\n        }\r\n\r\n        for(let prop of this.block.controls) {\r\n            let title = getPropLabel(prop);\r\n            node.addControl(new PropControl(this.editor, prop, title));\r\n        }\r\n\r\n        // this.block.builder?.apply(this, arguments);\r\n    }\r\n\r\n    // async worker(node, inputs, outputs, ...args) {\r\n    //     await this.block.worker?.apply(this, arguments);\r\n    // }\r\n}","import {getBlock} from '../editor/blocks';\r\nimport Rete from 'rete';\r\nimport {getType} from '../block-types/types';\r\n\r\nclass MissingInputError extends Error {\r\n    constructor(block, key) {\r\n        super(`${block.name}.${key}`);\r\n    }\r\n}\r\n\r\nexport default class Compiler {\r\n    constructor(editor, compileKey) {\r\n        this.editor = editor;\r\n        this.compileKey = compileKey;\r\n    }\r\n\r\n    // Default value if `[compileKey]` does not exist on block property\r\n    defaultCompile(prop, node, key) {\r\n    }\r\n\r\n    // Post-process results from either `prop[compileKey]` or `defaultCompile(..)`\r\n    postCompile(result, node, key) {\r\n        return result;\r\n    }\r\n\r\n    getNode(node) {\r\n        if(node instanceof Rete.Node) {\r\n            return node;\r\n        }\r\n        if(!node) {\r\n            throw new Error(`Node cannot be ${JSON.stringify(node)}`);\r\n        }\r\n        let id = String(typeof node === 'string' || typeof node === 'number' ? node : node.id);\r\n        node = this.editor.nodes.find(node => String(node.id) === id);\r\n        if(!node) {\r\n            throw new Error(`Node does not exist: ${id}`);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    getBlock(node) {\r\n        node = this.getNode(node);\r\n        return getBlock(node.name);\r\n    }\r\n\r\n    getInput(node, key) {\r\n        node = this.getNode(node);\r\n        let block = this.getBlock(node);\r\n        if(!block.props.hasOwnProperty(key)) {\r\n            throw new Error(`Prop not found on ${node.name}: ${key}`);\r\n        }\r\n        let prop = block.props[key];\r\n        if(prop.input) {\r\n            if(!prop.type.data.reversed) {\r\n                let input = this._input(node, key);\r\n                if(prop.multi) {\r\n                    return input.connections.map(c => this._compileConnection(c, c.input, c.output, 'outputs'));\r\n                }\r\n                if(input.connections.length) {\r\n                    let c = input.connections[0];\r\n                    return this._compileConnection(c, c.input, c.output, 'outputs');\r\n                }\r\n                if(input.control) {\r\n                    return input.control.getValue();\r\n                }\r\n            }\r\n            else {\r\n                let output = this._output(node, key);\r\n                if(prop.multi) {\r\n                    return output.connections.map(c => this._compileConnection(c, c.output, c.input, 'inputs'));\r\n                }\r\n                if(output.connections.length) {\r\n                    let c = output.connections[0];\r\n                    return this._compileConnection(c, c.output, c.input, 'inputs');\r\n                }\r\n            }\r\n        }\r\n\r\n        if(prop.control) {\r\n            let control = this._control(node, prop.key);\r\n            return this.postCompile(control.getValue(), node, key);\r\n        }\r\n    }\r\n\r\n    getOutput(node, key) {\r\n        node = this.getNode(node);\r\n        let prop = this._prop(node, key);\r\n        try {\r\n            let args = this.getInputArgs(node);\r\n            if(!args) {\r\n                return;\r\n            }\r\n            let result;\r\n            if(prop[this.compileKey]) {\r\n                result = prop[this.compileKey](args, node, this);\r\n            }\r\n            else {\r\n                result = this.defaultCompile(prop, node, key);\r\n            }\r\n            return this.postCompile(result, node, key);\r\n        }\r\n        catch(err) {\r\n            if(err instanceof MissingInputError) {\r\n                return;\r\n            }\r\n            console.error(`[${node.name}.${key}]`, err);\r\n            this.editor.trigger('warn', `[${node.name}.${key}] ${err}`);\r\n        }\r\n    }\r\n\r\n    getInputArgs(node) {\r\n        node = this.getNode(node);\r\n        let block = this.getBlock(node);\r\n        // if(block.__inputArgs?.[this.compileKey]) {\r\n        //     for(let key in block.__inputCache[this.compileKey]) {\r\n        //         delete block.__inputCache[this.compileKey][key];\r\n        //     }// TODO: proper cache invalidation\r\n        //     return block.__inputArgs[this.compileKey];\r\n        // }\r\n        let args = {};\r\n        for(let prop of Object.values(block.props)) {\r\n            if(prop.input || prop.control) {\r\n                // let value = this.getInput(node, prop.key);\r\n                // if(value === undefined && !prop.optional) {\r\n                //     this.editor.trigger('warn', `Missing input on ${block.name}: ${prop.key}`);\r\n                //     return;\r\n                // }\r\n                // args[prop.key] = value;\r\n\r\n                let cached = false;\r\n                let cachedValue;\r\n\r\n                Object.defineProperty(args, prop.key, {\r\n                    get: () => {\r\n                        // let cache = block.__inputCache[this.compileKey];\r\n                        // if(cache.hasOwnProperty(prop.key)) {\r\n                        //     return cache[prop.key];\r\n                        // }\r\n                        if(cached) {\r\n                            return cachedValue;\r\n                        }\r\n                        let value = this.getInput(node, prop.key);\r\n                        if(value === undefined && !prop.optional) {\r\n                            throw new MissingInputError(block, prop.key);\r\n                            // this.editor.trigger('warn', `Missing input on ${block.name}: ${prop.key}`);\r\n                            // return undefined; // Appease linter\r\n                        }\r\n                        // cache[prop.key] = value;\r\n                        cached = true;\r\n                        return value;\r\n                    },\r\n                });\r\n            }\r\n        }\r\n        if(process.env.NODE_ENV !== 'production') {\r\n            // Throw error on missing key\r\n            let target = args;\r\n            args = new Proxy({}, {\r\n                get: (_, key) => {\r\n                    if(!target.hasOwnProperty(key)) {\r\n                        throw new Error(`Unknown input: ${block.name}.${key}`);\r\n                    }\r\n                    return target[key];\r\n                },\r\n            });\r\n        }\r\n        // TODO: refactor caching\r\n        // [block.__inputArgs || (block.__inputArgs = {})][this.compileKey] = args;\r\n        // [block.__inputCache || (block.__inputCache = {})][this.compileKey] = {};\r\n        // this.editor.on('process', ()=>{\r\n        //     for(let key in block.__inputCache) {\r\n        //         delete block.__inputCache[key];\r\n        //     }\r\n        // })///\r\n        return args;\r\n    }\r\n\r\n    // getControl(node, key) {\r\n    //     node = this.getNode(node);\r\n    //     return this._control(node, key).getValue();\r\n    // }\r\n\r\n    getTypeString(type) {\r\n        // console.log('/////', type);///\r\n        type = getType(type);\r\n        return type?.data[this.compileKey]?.(type.generics.map(t => this.getTypeString(t)), this) || type.toTypeString();\r\n    }\r\n\r\n    inferType(node, key) {\r\n        return this.editor.compilers.type.getInput(node, key);\r\n    }\r\n\r\n    _compileConnection(connection, from, to) {\r\n        // let prop = this._prop(to.node, to.key);\r\n        // if(!prop[this.compileKey]) {\r\n        //     throw new Error(`Cannot compile property of ${from.node.name} with key: ${prop.key}`);\r\n        // }\r\n        return this.getOutput(to.node, to.key);\r\n    }\r\n\r\n    _prop(node, key) {\r\n        let block = this.getBlock(node);\r\n        if(!block.props.hasOwnProperty(key)) {\r\n            throw new Error(`Prop does not exist in ${node.name}: ${key}`);\r\n        }\r\n        return block.props[key];\r\n    }\r\n\r\n    _input(node, key) {\r\n        if(!node.inputs.has(key)) {\r\n            throw new Error(`Input not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.inputs.get(key);\r\n    }\r\n\r\n    _output(node, key) {\r\n        if(!node.outputs.has(key)) {\r\n            throw new Error(`Output not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.outputs.get(key);\r\n    }\r\n\r\n    _control(node, key) {\r\n        if(!node.controls.has(key)) {\r\n            throw new Error(`Control not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.controls.get(key);\r\n    }\r\n}","import Compiler from './Compiler';\r\n\r\nexport default class MotokoCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'toMotoko');\r\n    }\r\n\r\n    defaultCompile(prop, node, key) {\r\n    }\r\n\r\n    postCompile(result, node, key) {\r\n        if(typeof result === 'string' || typeof result === 'number' || typeof result === 'boolean' || result === null) {\r\n            return result;\r\n        }\r\n        if(result === undefined) {\r\n            return;\r\n        }\r\n        if(Array.isArray(result)) {\r\n            return result.map(r => this.postCompile(r, node, key)).filter(s => s).join(' ');\r\n        }\r\n        console.warn('Unexpected Motoko expression:', result);\r\n        return String(result);\r\n    }\r\n}","import Compiler from './Compiler';\r\n\r\nexport default class NodeCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'toEditorNode');\r\n    }\r\n\r\n    defaultCompile(prop, node, key) {\r\n        return node;\r\n    }\r\n\r\n    postCompile(result, node, key) {\r\n        if(!result) {\r\n            return;\r\n        }\r\n        let id;\r\n        if(typeof result === 'object') {\r\n            id = result.id;\r\n            if(!id) {\r\n                throw new Error(`Invalid node object with keys: {${Object.keys(result).join(', ')}}`);\r\n            }\r\n        }\r\n        else {\r\n            id = result;\r\n        }\r\n        // Convert node id to string in case of number/string mismatch\r\n        id = String(id);\r\n        return this.editor.nodes.find(n => String(n.id) === id);\r\n    }\r\n}","import Compiler from './Compiler';\r\nimport {getType} from '../block-types/types';\r\n\r\nexport default class TypeCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'inferType');\r\n    }\r\n\r\n    defaultCompile(prop, node, key) {\r\n        return getType(prop.type);\r\n    }\r\n\r\n    postCompile(type, node, key) {\r\n        if(!type) {\r\n            return;\r\n        }\r\n        type = getType(type);\r\n        if(type.isAbstract()) {\r\n            console.warn(`[${node.name}.${key}]`, 'Abstract inferred type:', type.toTypeString());\r\n            // return;\r\n        }\r\n        return type;\r\n    }\r\n}","import Rete from 'rete';\r\nimport MotokoCompiler from '../compilers/MotokoCompiler';\r\nimport NodeCompiler from '../compilers/NodeCompiler';\r\nimport TypeCompiler from '../compilers/TypeCompiler';\r\n\r\nexport default class BlocksNodeEditor extends Rete.NodeEditor {\r\n    constructor(...args) {\r\n        super(...args);\r\n\r\n        this.projectName = '';\r\n        this.compilers = {\r\n            type: new TypeCompiler(this),\r\n            node: new NodeCompiler(this),\r\n            motoko: new MotokoCompiler(this),\r\n        };\r\n    }\r\n\r\n    // noinspection JSCheckFunctionSignatures\r\n    toJSON() {\r\n        let json = {\r\n            name: this.projectName,\r\n            description: '',\r\n            version: this.id,\r\n            ...super.toJSON(),\r\n        };\r\n        delete json.id;\r\n        // noinspection JSValidateTypes\r\n        return json;\r\n    }\r\n\r\n    async fromJSON(json) {\r\n        // noinspection JSUnresolvedVariable\r\n        json = {id: json.version, ...json};\r\n\r\n        if(!this.beforeImport(json)) {\r\n            return false;\r\n        }\r\n        // TODO: refactor serialization\r\n        // noinspection JSUnresolvedVariable\r\n        this.projectName = json.name || '';\r\n\r\n        let hadError = false;\r\n        try {\r\n            const nodes = {};\r\n            await Promise.all(Object.entries(json.nodes).map(async ([id, jsonNode]) => {\r\n                try {\r\n                    const component = this.getComponent(jsonNode.name);\r\n                    const node = await component.build(Rete.Node.fromJSON(jsonNode));\r\n                    nodes[id] = node;\r\n                    this.addNode(node);\r\n                }\r\n                catch(e) {\r\n                    hadError = true;\r\n                    return this.trigger('error', e);\r\n                }\r\n            }));\r\n\r\n            Object.entries(json.nodes).forEach(([id, jsonNode]) => {\r\n                const node = nodes[id];\r\n\r\n                Object.entries(jsonNode.outputs).forEach(([key, jsonOutput]) => {\r\n\r\n                    jsonOutput.connections.forEach(jsonConnection => {\r\n                        const nodeId = jsonConnection.node;\r\n                        const data = jsonConnection.data;\r\n                        const targetOutput = node.outputs.get(key);\r\n                        const otherNode = nodes[nodeId];\r\n                        if(!otherNode) {\r\n                            hadError = true;\r\n                            return this.trigger('error', `Tried to connect to unknown node ${node.id}`);\r\n                        }\r\n                        const targetInput = otherNode.inputs.get(jsonConnection.input);\r\n\r\n                        if(!targetOutput || !targetInput) {\r\n                            hadError = true;\r\n                            return this.trigger('error', `IO not found for node ${node.id}`);\r\n                        }\r\n\r\n                        this.connect(targetOutput, targetInput, data);\r\n                    });\r\n                });\r\n\r\n            });\r\n        }\r\n        catch(e) {\r\n            this.trigger('warn', e);\r\n            hadError = true;\r\n        }\r\n        return this.afterImport() && !hadError;\r\n    }\r\n}","import Rete from 'rete';\r\n\r\nfunction sortConnections(io) {\r\n    let key = io instanceof Rete.Input ? 'output' : 'input';\r\n    io.connections.sort((a, b) => a[key].node.position[1] - b[key].node.position[1]);\r\n}\r\n\r\nfunction install(editor, config = {}) {\r\n    editor.on('connectioncreated', connection => {\r\n        sortConnections(connection.input);\r\n        sortConnections(connection.output);\r\n    });\r\n    editor.on('nodedragged', (node) => {\r\n        for(let [ioMap, key] of [[node.inputs, 'output'], [node.outputs, 'input']]) {\r\n            for(let io of ioMap.values()) {\r\n                for(let connection of io.connections) {\r\n                    sortConnections(connection[key]);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nconst VerticalSortPlugin = {\r\n    name: 'vertical-sort',\r\n    install,\r\n};\r\nexport default VerticalSortPlugin;","function install(editor, config = {}) {\r\n\r\n    // let currentIO = null;\r\n    //\r\n    // editor.on('connectionpick', (io) => {\r\n    //     currentIO = io;\r\n    // });\r\n    // editor.on('connectiondrop', (io) => {\r\n    //     currentIO = null;\r\n    // });\r\n\r\n    const onKeyDown = (event) => {\r\n        if(event.code === 'Escape') {\r\n            // TODO: implement drop connection without context menu\r\n\r\n            // if(currentIO) {\r\n            //     editor.trigger('connectiondrop', currentIO);\r\n            // }\r\n            // setTimeout(() => editor.trigger('hidecontextmenu'));\r\n        }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    editor.on('destroy', () => document.removeEventListener('keydown', onKeyDown));\r\n}\r\n\r\nconst ConnectionDropPlugin = {\r\n    name: 'connection-drop',\r\n    install,\r\n};\r\nexport default ConnectionDropPlugin;","function install(editor, config = {}) {\r\n\r\n    let {minDistance = 500, opacityFalloff = 200} = config;\r\n\r\n    // Fade out distant connections\r\n    editor.on(['renderconnection', 'updateconnection', 'zoom'], () => {\r\n        setTimeout(() => {\r\n            for(let pathElement of editor.view.container.querySelectorAll('.connection .main-path')) {\r\n                let bounds = pathElement.getBoundingClientRect();\r\n                let distance = bounds.width;\r\n                pathElement.style.opacity = 1 / (1 + Math.sqrt(Math.max(distance - minDistance, 0) / opacityFalloff));\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nconst ConnectionOpacityPlugin = {\r\n    name: 'connection-opacity',\r\n    install,\r\n};\r\nexport default ConnectionOpacityPlugin;","\r\nfunction install(editor, config = {}) {\r\n\r\n    // TODO: implement properly\r\n\r\n    // if(config.editorButton !== undefined) {\r\n    //     let drag = editor.view.area._drag;\r\n    //     drag.button = config.editorButton;\r\n    // }\r\n}\r\n\r\nconst DragButtonPlugin = {\r\n    name: 'drag-button',\r\n    install,\r\n};\r\nexport default DragButtonPlugin;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport classNames from 'classnames';\r\nimport {IconContext} from 'react-icons';\r\n\r\nlet MenuContainer = styled.div`\r\n    \r\n`;\r\n\r\nexport default function TopMenu({className, children, ...others}) {\r\n    return (\r\n        <MenuContainer className={classNames('bg-light text-secondary d-flex', className)} {...others}>\r\n            <IconContext.Provider value={{style: {verticalAlign: 'bottom', transform: 'translateY(-1px)'}}}>\r\n                {children}\r\n            </IconContext.Provider>\r\n        </MenuContainer>\r\n    );\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport styled from 'styled-components';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\n\r\nlet ItemContainer = styled.div`\r\n\r\n`;\r\n\r\nexport default function MenuItem({variant, tooltip, className, ...others}) {\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <ItemContainer\r\n            className={classNames('noselect h3 px-3 pt-1 pb-2 mb-0 d-inline-block text-center', variant && `text-${variant}`, className)}\r\n            data-tip={tooltip}\r\n            {...others}>\r\n        </ItemContainer>\r\n    );\r\n}","import React from 'react';\r\nimport MenuItem from './MenuItem';\r\nimport styled from 'styled-components';\r\n\r\nlet MenuItemStyled = styled(MenuItem)`\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #0002;\r\n  }\r\n`;\r\n\r\nexport default function MenuButton({children, ...others}) {\r\n    return (\r\n        <MenuItemStyled {...others}>\r\n            {children}\r\n        </MenuItemStyled>\r\n    );\r\n}","import React, {useCallback} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport classNames from 'classnames';\r\n\r\nexport default function FileDropZone({options, onFile, onFileContent, className, children, ...others}) {\r\n\r\n    const onDrop = useCallback(files => {\r\n        if(files.length) {\r\n            const file = files[0];\r\n            onFile?.(file);\r\n            if(onFileContent) {\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    onFileContent(e.target.result);\r\n                };\r\n                reader.readAsText(file);\r\n            }\r\n        }\r\n    }, [onFile, onFileContent]);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\r\n        maxFiles: 1,\r\n        onDrop,\r\n        ...options,\r\n    });\r\n\r\n    return (\r\n        <div className={classNames(className, isDragActive && 'dragging')} {...{...others, ...getRootProps()}}>\r\n            <input {...getInputProps()}/>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React, {useContext} from 'react';\nimport EventsContext, {PROJECT_LOAD_EVENT} from '../../contexts/EventsContext';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport {getExampleProjects} from '../../examples/examples';\nimport FileDropZone from '../common/FileDropZone';\n\nconst MenuContainer = styled.div`\n  padding: 20px;\n`;\n\nconst LoadProjectItemContainer = styled.div`\n  :hover {\n    background: #0001;\n  }\n`;\n\nconst FileDropZoneStyled = styled(FileDropZone)`\n  padding: 2em;\n  border: 2px #0005 dashed;\n\n  &.dragging, &:hover {\n    background: #0002;\n  }\n`;\n\nexport default function LoadProjectMenu({onLoadFileContent, className, ...others}) {\n\n    const events = useContext(EventsContext);\n\n    const examples = getExampleProjects();\n\n    return (\n        <MenuContainer className={classNames('bg-light', className)} {...others}>\n            <FileDropZone onFileContent={onLoadFileContent}>\n                <FileDropZoneStyled className={classNames('clickable text-center text-muted rounded-3')}>\n                    <h5>Import a .blocks file...</h5>\n                </FileDropZoneStyled>\n            </FileDropZone>\n            {examples.map((example, i) => (\n                <LoadProjectItemContainer\n                    key={i}\n                    className=\"clickable mt-2 px-3 py-2\"\n                    onClick={() => events.emit(PROJECT_LOAD_EVENT, example)}>\n                    <h4>{example.name}</h4>\n                    <div className=\"text-muted\">{example.description || '(No description provided)'}</div>\n                </LoadProjectItemContainer>\n            ))}\n        </MenuContainer>\n    );\n}","import TopMenu from '../common/menus/TopMenu';\nimport MenuButton from '../common/menus/MenuButton';\nimport {FaDownload, FaFile, FaFolder, FaFolderOpen, FaSave} from 'react-icons/fa';\nimport React, {useContext, useState} from 'react';\nimport MenuItem from '../common/menus/MenuItem';\nimport styled, {keyframes} from 'styled-components';\nimport classNames from 'classnames';\nimport EventsContext, {\n    EDITOR_CHANGE_EVENT,\n    EDITOR_SAVE_EVENT, PROJECT_CLEAR_EVENT,\n    PROJECT_EXPORT_EVENT,\n    PROJECT_LOAD_EVENT,\n} from '../../contexts/EventsContext';\nimport useListener from '../../hooks/useListener';\nimport LoadProjectMenu from './LoadProjectMenu';\nimport {Modal} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nconst ProjectNameInput = styled.input`\n  background: none !important;\n  border: none !important;\n  border-bottom: solid 2px #0005 !important;\n  font-weight: bold;\n  vertical-align: top;\n  margin-top: .4em;\n  padding: .25em .25em .1em;\n\n  :focus {\n    background: #0001 !important;\n  }\n`;\n\nconst saveAnimation = keyframes`\n  30% {\n    transform: scale(.9);\n  }\n`;\n\nconst SaveIcon = styled(FaSave)`\n  &.animated {\n    animation: ${saveAnimation} .5s ease-out;\n  }\n`;\n\nexport default function EditorMenu({getEditor, onLoadFileContent}) {\n    const [name, setName] = useState('');\n    const [saveAnimated, setSaveAnimated] = useState(false); // TODO: possibly generalize to MenuButton\n    const [loadMenuOpen, setLoadMenuOpen] = useState(false);\n\n    const events = useContext(EventsContext);\n\n    useListener(events, EDITOR_SAVE_EVENT, () => {\n        setSaveAnimated(true);\n    });\n\n    useListener(events, PROJECT_LOAD_EVENT, project => {\n        setName(project.name);\n        setLoadMenuOpen(false);\n    });\n\n    /// Temp, until projectName refactor\n    setTimeout(() => {\n        setName(getEditor().projectName);\n    });\n\n    // TODO refactor\n    const updateName = (name) => {\n        setName(name);\n        let editor = getEditor();\n        editor.projectName = name;\n        events.emit(EDITOR_CHANGE_EVENT, editor);\n    };\n\n    return (\n        <>\n            <TopMenu>\n                <Link to=\"/\">\n                    <MenuItem variant=\"primary\">\n                        BLOCKS.\n                    </MenuItem>\n                </Link>\n                <div className=\"d-inline-block mx-auto\">\n                    <MenuButton onMouseDown={() => events.emit(PROJECT_CLEAR_EVENT)} data-tip=\"New Project\">\n                        <FaFile/>\n                    </MenuButton>\n                    <ProjectNameInput\n                        type=\"text\"\n                        placeholder=\"(Unnamed Project)\"\n                        className=\"text-secondary\"\n                        value={name || ''}\n                        onChange={e => updateName(e.target.value)}\n                        onKeyDown={e => e.key === 'Enter' && events.emit(EDITOR_SAVE_EVENT, getEditor())}\n                    />\n                    <MenuButton\n                        tooltip=\"Save Changes\"\n                        onMouseDown={() => events.emit(EDITOR_SAVE_EVENT, getEditor())}>\n                        <SaveIcon\n                            className={classNames(saveAnimated && 'animated')}\n                            onAnimationEnd={() => setSaveAnimated(false)}\n                        />\n                    </MenuButton>\n                    <MenuButton\n                        tooltip=\"Export to File\"\n                        onMouseDown={() => events.emit(PROJECT_EXPORT_EVENT, getEditor().toJSON())}>\n                        <FaDownload/>\n                    </MenuButton>\n                    <MenuButton\n                        tooltip=\"Load Project\"\n                        onMouseDown={() => setLoadMenuOpen(!loadMenuOpen)}>\n                        {loadMenuOpen ? <FaFolderOpen/> : <FaFolder/>}\n                    </MenuButton>\n                </div>\n            </TopMenu>\n            <Modal\n                // className=''\n                show={loadMenuOpen}\n                onHide={() => setLoadMenuOpen(false)}>\n                <Modal.Body>\n                    <LoadProjectMenu onLoadFileContent={onLoadFileContent}/>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}","import React, {useContext} from 'react';\r\nimport './Editor.scss';\r\nimport AreaPlugin from 'rete-area-plugin';\r\nimport ConnectionPlugin from 'rete-connection-plugin';\r\nimport ContextMenuPlugin from '../../plugins/rete-blocks-contextmenu-plugin';\r\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin';\r\nimport ReactRenderPlugin from 'rete-react-render-plugin';\r\nimport EventsContext, {\r\n    EDITOR_CHANGE_EVENT,\r\n    EDITOR_SAVE_EVENT,\r\n    ERROR_EVENT,\r\n    PROJECT_LOAD_EVENT,\r\n} from '../../contexts/EventsContext';\r\nimport NodeHandle from './nodes/NodeHandle';\r\nimport BlockComponent from '../../editor/components/BlockComponent';\r\nimport {BLOCK_MAP} from '../../editor/blocks';\r\nimport useListener from '../../hooks/useListener';\r\nimport BlocksNodeEditor from '../../editor/BlocksNodeEditor';\r\nimport VerticalSortPlugin from '../../plugins/rete-vertical-sort-plugin';\r\nimport ConnectionDropPlugin from '../../plugins/rete-connection-drop-plugin';\r\nimport ConnectionOpacityPlugin from '../../plugins/rete-connection-opacity-plugin';\r\nimport DragButtonPlugin from '../../plugins/rete-drag-button-plugin';\r\nimport classNames from 'classnames';\r\nimport styled from 'styled-components';\r\nimport EditorMenu from './EditorMenu';\r\nimport FileDropZone from '../common/FileDropZone';\r\n\r\nconst EDITOR_NAME = process.env.REACT_APP_EDITOR_NAME;\r\nconst EDITOR_VERSION = process.env.REACT_APP_EDITOR_VERSION;\r\n\r\nfunction findCategory(socket) {\r\n    return socket.findType?.().data.category ?? socket.data.category ?? 'none';\r\n}\r\n\r\n// noinspection JSCheckFunctionSignatures\r\nfunction createEditor(element) {\r\n\r\n    let editor = new BlocksNodeEditor(EDITOR_NAME + '@' + EDITOR_VERSION, element);\r\n    editor.use(ReactRenderPlugin, {\r\n        component: NodeHandle,\r\n    });\r\n    // editor.use(HistoryPlugin); // TODO: set up undo/redo history\r\n    editor.use(ConnectionPlugin);\r\n    // editor.use(CommentPlugin);\r\n    // editor.use(SelectionPlugin, {\r\n    //     enabled: true,\r\n    // });\r\n    // noinspection JSCheckFunctionSignatures\r\n    editor.use(AutoArrangePlugin);\r\n    // noinspection JSCheckFunctionSignatures\r\n    editor.use(AreaPlugin, {\r\n        background: (() => {\r\n            let background = document.createElement('div');\r\n            background.classList.add('grid');\r\n            background.style.pointerEvents = 'none';\r\n            editor.on('destroy', () => background.remove());\r\n            return background;\r\n        })(),\r\n        snap: {size: 16, dynamic: true},\r\n    });\r\n    editor.use(ContextMenuPlugin);\r\n    editor.use(ConnectionDropPlugin);\r\n    editor.use(ConnectionOpacityPlugin);\r\n    editor.use(VerticalSortPlugin);\r\n    editor.use(DragButtonPlugin, {editorButton: 2});\r\n\r\n    let mouseMoved = false;\r\n    editor.view.container.addEventListener('mousedown', (e) => {\r\n        mouseMoved = false;\r\n    });\r\n    editor.on('mousemove', (e) => {\r\n        mouseMoved = true;\r\n    });\r\n    editor.on('click', ({e}) => {\r\n        // Deselect nodes when clicking background\r\n        if(!mouseMoved) {\r\n            editor.selected.clear();\r\n            editor.nodes.map(node => node.update());\r\n        }\r\n    });\r\n\r\n    editor.on('zoom', ({source}) => source !== 'dblclick'); // Prevent double-click zoom\r\n    editor.on('nodeselect', node => !editor.selected.contains(node)); // Allow dragging multiple nodes\r\n    editor.on('renderconnection', ({el, connection}) => {\r\n        let inputCategory = findCategory(connection.input.socket);\r\n        let outputCategory = findCategory(connection.output.socket);\r\n        if(connection.input.socket.data.reversed) {\r\n            [inputCategory, outputCategory] = [outputCategory, inputCategory];\r\n        }\r\n        el.querySelector('.connection').classList.add(\r\n            `socket-input-category-${inputCategory}`,\r\n            `socket-output-category-${outputCategory}`,\r\n        );\r\n    });\r\n\r\n    return editor;\r\n}\r\n\r\n\r\nconst EditorContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nexport default function Editor({onSetup, onChange, onSave, className, ...others}) {\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    let editor = null;\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, (_editor) => {\r\n        if(_editor === editor) {\r\n            onChange?.(editor);\r\n        }\r\n    });\r\n    useListener(events, EDITOR_SAVE_EVENT, (_editor) => {\r\n        if(_editor === editor) {\r\n            onSave?.(editor.toJSON(), editor);\r\n        }\r\n    });\r\n\r\n    const bindEditor = (element) => {\r\n        if(editor) {\r\n            editor.clear();\r\n            editor.components.clear();\r\n            editor.destroy();\r\n        }\r\n        if(!element) {\r\n            return;\r\n        }\r\n\r\n        editor = createEditor(element);\r\n\r\n        window.EDITOR = editor; // Browser debugging\r\n\r\n        let onKeyDown = (event) => {\r\n            let key = String.fromCharCode(event.which).toLowerCase();\r\n\r\n            // if(key === 'f') {\r\n            //     editor.trigger('arrange');\r\n            // }\r\n            if(event.ctrlKey) {\r\n                if(key === 's') {\r\n                    event.preventDefault();\r\n                    events.emit(EDITOR_SAVE_EVENT, editor);\r\n                    console.log('Saved successfully');\r\n                }\r\n            }\r\n        };\r\n        document.addEventListener('keydown', onKeyDown);\r\n        editor.on('destroy', () => document.removeEventListener('keydown', onKeyDown));\r\n\r\n        for(let block of BLOCK_MAP.values()) {\r\n            let node = new BlockComponent(block);\r\n            editor.register(node);\r\n        }\r\n\r\n        editor.on(['nodecreated', 'noderemoved', 'nodedragged', 'connectioncreated', 'connectionremoved'], async () => {\r\n            if(!editor.silent) {\r\n                events.emit(EDITOR_CHANGE_EVENT, editor);\r\n            }\r\n        });\r\n        editor.on('error', err => events.emit(ERROR_EVENT, err));\r\n\r\n        async function loadState(state) {\r\n            if(!state) {\r\n                return false;\r\n            }\r\n            // for(let [key, node] of Object.entries(state.nodes)) {\r\n            //     if(!BLOCK_MAP.has(node.name)) {\r\n            //         delete state.nodes[key];\r\n            //         console.warn('Unknown block:', node.name);\r\n            //     }\r\n            // }\r\n            let result = await editor.fromJSON(state);\r\n            if(result) {\r\n                editor.view.resize();\r\n                AreaPlugin.zoomAt(editor);\r\n                events.emit(EDITOR_CHANGE_EVENT, editor);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        (async () => {\r\n            if(onSetup) {\r\n                await onSetup(loadState, editor);\r\n            }\r\n        })().catch(err => events.emit(ERROR_EVENT, err));\r\n    };\r\n\r\n    const loadFileContent = content => {\r\n        try {\r\n            let project = JSON.parse(content);\r\n            events.emit(PROJECT_LOAD_EVENT, project);\r\n        }\r\n        catch(err) {\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FileDropZone options={{noClick: true}} onFileContent={loadFileContent}>\r\n            <EditorContainer\r\n                className={classNames('node-editor d-flex flex-grow-1 flex-column', className)}\r\n                {...others}>\r\n                <EditorMenu getEditor={() => editor} onLoadFileContent={loadFileContent}/>\r\n                <div ref={bindEditor}/>\r\n            </EditorContainer>\r\n        </FileDropZone>\r\n    );\r\n}","import Editor from '../../rete/Editor';\r\nimport React, {useContext} from 'react';\r\nimport useListener from '../../../hooks/useListener';\r\nimport EventsContext, {\r\n    PROJECT_CLEAR_EVENT,\r\n    PROJECT_EXPORT_EVENT,\r\n    PROJECT_LOAD_EVENT,\r\n} from '../../../contexts/EventsContext';\r\nimport FileSaver from 'file-saver';\r\nimport {pascalCase} from 'change-case';\r\nimport useRedraw from '../../../hooks/useRedraw';\r\n\r\nconst STORAGE_EDITOR_STATE = 'blocks.editorState';\r\n\r\nconst DEFAULT_STATE = require('../../../examples/files/DefaultProject.json');\r\n\r\nexport default function EditorPage() {\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    const redraw = useRedraw();\r\n\r\n    useListener(events, PROJECT_CLEAR_EVENT, () => {\r\n        // TODO: confirmation modal\r\n        delete localStorage[STORAGE_EDITOR_STATE];\r\n        redraw();\r\n    });\r\n\r\n    useListener(events, PROJECT_LOAD_EVENT, state => {\r\n        localStorage[STORAGE_EDITOR_STATE] = JSON.stringify(state);\r\n        redraw();\r\n    });\r\n\r\n    useListener(events, PROJECT_EXPORT_EVENT, state => {\r\n        let data = JSON.stringify(state);\r\n        FileSaver.saveAs(new Blob([data]), `${pascalCase(state.name || 'project')}.blocks.json`);\r\n    });\r\n\r\n    const onEditorSetup = async (loadState, editor) => {\r\n        let stateString = localStorage[STORAGE_EDITOR_STATE];\r\n        let state;\r\n        if(stateString) {\r\n            state = JSON.parse(stateString);\r\n        }\r\n        else {\r\n            state = DEFAULT_STATE;\r\n        }\r\n\r\n        if(!await loadState(state)) {\r\n            console.warn('Load error');\r\n        }\r\n    };\r\n\r\n    const onEditorChange = (editor) => {\r\n    };\r\n\r\n    const onEditorSave = (state, editor) => {\r\n        localStorage[STORAGE_EDITOR_STATE] = JSON.stringify(state);\r\n    };\r\n\r\n    return (\r\n        <Editor\r\n            onSetup={onEditorSetup}\r\n            onChange={onEditorChange}\r\n            onSave={onEditorSave}\r\n        />\r\n    );\r\n}","import {useState} from 'react';\r\n\r\nexport default function useRedraw() {\r\n\r\n    let redraw = useState({})[1];\r\n\r\n    return () => redraw({});\r\n}\r\n","import React from 'react';\r\nimport EditorPage from '../editor/EditorPage';\r\n\r\nexport default function HomePage() {\r\n\r\n    return (\r\n        <EditorPage/> /////\r\n    );\r\n}","export default function reportWebVitals(onPerfEntry) {\n    if(onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n}\n","import styled from 'styled-components';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport React from 'react';\r\n\r\nconst ReactTooltipStyled = styled(ReactTooltip)`\r\n  padding: .5em 1em !important;\r\n`;\r\n\r\nexport default function GlobalTooltip() {\r\n    return (\r\n        <ReactTooltipStyled backgroundColor=\"#111\" place=\"bottom\" delayShow={300}/>\r\n    );\r\n};","import React, {useContext} from 'react';\r\nimport EditorPage from './pages/editor/EditorPage';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport EventsContext, {ERROR_EVENT} from '../contexts/EventsContext';\r\nimport useListener from '../hooks/useListener';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport HomePage from './pages/home/HomePage';\r\nimport GlobalTooltip from './GlobalTooltip';\r\n\r\n\r\nexport default function App() {\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    useListener(events, ERROR_EVENT, err => {\r\n        toast(err, {\r\n            type: 'error',\r\n            // closeOnClick: true,\r\n        });\r\n    });\r\n\r\n    return (\r\n        <React.StrictMode>\r\n            <HashRouter>\r\n                <GlobalTooltip/>\r\n                <ToastContainer/>\r\n                <Switch>\r\n                    <Route path=\"/editor\">\r\n                        <EditorPage/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <HomePage/>\r\n                    </Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        </React.StrictMode>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\nreportWebVitals((...args) => {\n    // console.log('WebVitals:', ...args);\n});\n"],"sourceRoot":""}