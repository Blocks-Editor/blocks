{"version":3,"sources":["components/rete/controls/NumberControlHandle.js","components/common/inputs/TypeSelect.js","block-types/types.js","components/rete/controls/TypeControlHandle.js","components/rete/controls/NodeControlHandle.js","components/rete/controls/CheckboxControlHandle.js","block-categories/categories.js","contexts/EventsContext.js","compilers/MotokoCompiler.js","block-patterns/operator-patterns.js","block-patterns/statement-patterns.js","hooks/useListener.js","blocks/State.js","hooks/useControlState.js","hooks/useReactTooltip.js","blocks/NewArray.js","components/rete/controls/SelectControlHandle.js","block-patterns/member-patterns.js","block-patterns/control-patterns.js","editor/blocks.js","block-patterns/literal-patterns.js","compilers/Compiler.js","utils/getBlockLabel.js","components/rete/controls/TextControlHandle.js","utils/getDefaultLabel.js","utils/getNodeLabel.js","block-patterns/code-patterns.js","config/configureMonaco.js","components/monaco/CodeEditor.js","components/rete/controls/CodeControlHandle.js","components/common/Loading.js","components/rete/controls/OutputControlHandle.js","block-patterns/compile-patterns.js","blocks/Function.js","examples/examples.js","blocks sync /.js$","blocks/Actor.js","blocks/ActorClass.js","blocks/Add.js","blocks/And.js","blocks/ArrayAppend.js","blocks/ArrayAppended.js","blocks/ArrayFilter.js","blocks/ArrayGet.js","blocks/ArrayMap.js","blocks/ArrayPrepend.js","blocks/ArrayPut.js","blocks/Await.js","blocks/CodeType.js","blocks/CodeValue.js","blocks/CollectionSize.js","blocks/CompareEqual.js","blocks/CompareGreater.js","blocks/CompareGreaterEqual.js","blocks/CompareLess.js","blocks/CompareLessEqual.js","blocks/CompareNotEqual.js","blocks/CompileMotoko.js","blocks/CompileType.js","blocks/Conditional.js","blocks/ConditionalValue.js","blocks/Divide.js","blocks/DivideInt.js","blocks/FunctionCall.js","blocks/LiteralBool.js","blocks/LiteralCustomType.js","blocks/LiteralFloat.js","blocks/LiteralIdentifier.js","blocks/LiteralInt.js","blocks/LiteralNat.js","blocks/LiteralPair.js","blocks/LiteralPairType.js","blocks/LiteralText.js","blocks/LiteralTuple.js","blocks/LiteralTupleType.js","blocks/LiteralType.js","blocks/LoopWhile.js","blocks/MapGet.js","blocks/MapPut.js","blocks/MapRemove.js","blocks/Multiply.js","blocks/NewTextHashMap.js","blocks/Not.js","blocks/Null.js","blocks/Optional.js","blocks/OptionalUnwrap.js","blocks/Or.js","blocks/Parameter.js","blocks/ReferenceImport.js","blocks/Return.js","blocks/StateRead.js","blocks/StateUpdate.js","blocks/Subtract.js","blocks/TextConcat.js","blocks/TextSize.js","blocks/TypeMember.js","blocks/TypeMemberReference.js","blocks/Variable.js","plugins/rete-blocks-contextmenu-plugin/components/ContextMenu.js","plugins/rete-blocks-contextmenu-plugin/contexts/MenuContext.js","plugins/rete-blocks-contextmenu-plugin/components/MenuIcon.js","plugins/rete-blocks-contextmenu-plugin/components/MenuAction.js","plugins/rete-blocks-contextmenu-plugin/components/menus/SelectionMenu.js","plugins/rete-blocks-contextmenu-plugin/components/MenuComponent.js","plugins/rete-blocks-contextmenu-plugin/components/MenuSearch.js","plugins/rete-blocks-contextmenu-plugin/components/menus/PlacementMenu.js","plugins/rete-blocks-contextmenu-plugin/hooks/useEditorComponents.js","plugins/rete-blocks-contextmenu-plugin/index.js","components/rete/sockets/SocketHandle.js","components/rete/nodes/parts/DynamicTitle.js","utils/getPropLabel.js","utils/bindNodeInput.js","components/rete/nodes/parts/ShortcutButton.js","components/rete/nodes/NodeHandle.js","editor/controls/BaseControl.js","editor/controls/PropControl.js","editor/components/BaseComponent.js","editor/sockets/TypeSocket.js","editor/sockets/PropOutputSocket.js","editor/components/BlockComponent.js","compilers/NodeCompiler.js","compilers/TypeCompiler.js","compilers/ControlCompiler.js","editor/BlocksNodeEditor.js","plugins/rete-vertical-sort-plugin/index.js","plugins/rete-connection-drop-plugin/index.js","plugins/rete-connection-opacity-plugin/index.js","plugins/rete-drag-button-plugin/index.js","components/common/menus/TopMenu.js","components/common/menus/MenuItem.js","components/common/menus/MenuButton.js","components/common/FileDropZone.js","components/rete/LoadProjectMenu.js","icons/download.svg","icons/file-plus.svg","icons/folder.svg","icons/folder-wide.svg","icons/folder-open.svg","icons/save.svg","components/common/Icon.js","components/rete/EditorMenu.js","components/rete/Editor.js","components/pages/editor/EditorPage.js","utils/isEmbedded.js","hooks/useRedraw.js","components/GlobalTooltip.js","reportWebVitals.js","components/App.js","index.js"],"names":["NumberControlHandle","control","bindInput","validation","min","max","step","useControlState","value","setValue","type","style","width","ref","onChange","event","target","TypeSelect","constraintType","abstract","invalid","others","anyType","types","TYPE_MAP","values","filter","data","isSubtype","events","useContext","EventsContext","getType","err","undefined","emit","ERROR_EVENT","some","t","useReactTooltip","className","classNames","name","label","map","generics","i","baseType","getDefaultLabel","genericNames","splice","toJSON","Type","parent","meta","Error","this","otherMeta","buildType","Object","assign","isAbstract","defaultValue","other","length","every","equals","alwaysSubtype","arbitraryGenerics","getSharedType","toTypeString","call","g","join","Map","window","createType","category","reversed","anyReversedType","typeType","controlType","config","validate","nodeType","editor","useState","nodes","setNodes","useListener","EDITOR_CHANGE_EVENT","blockName","block","blockFilter","Array","isArray","getBlock","n","includes","String","id","maxWidth","node","getNodeLabel","JSON","stringify","valueType","customType","referenceType","identifierType","TextControlHandle","pattern","effectType","toMotoko","memberType","singleOutput","actorType","paramType","boolType","checked","verticalAlign","textType","minLength","maxLength","floatType","intType","natType","principalType","tupleType","unitType","of","optionalType","nullType","collectionType","arrayType","item","mutableArrayType","mapType","key","asyncType","set","getGenericType","parentData","parentMeta","arguments","has","get","a","b","Category","root","CATEGORY_MAP","createCategory","getCategory","defaultCategory","stateCategory","color","icon","FaDatabase","functionCategory","FaCubes","paramCategory","FaLongArrowAltRight","typeCategory","FaTextHeight","collectionCategory","FaTh","compilerCategory","FaCode","expressionCategory","FaEject","operatorCategory","FaFilter","actorCategory","FaFont","effectCategory","FaStream","literalCategory","FaPlusCircle","decompositionCategory","FaNetworkWired","EDITOR_SAVE_EVENT","PROJECT_EXPORT_EVENT","PROJECT_LOAD_EVENT","PROJECT_CLEAR_EVENT","EventEmitter","setMaxListeners","on","console","error","EVENTS","React","createContext","nodeVariableRef","importRef","resolveImportRefs","code","imports","replaceAll","match","path","substring","lastIndexOf","hasOwnProperty","entries","MotokoCompiler","prop","getTypeString","result","r","postCompile","s","warn","Compiler","unaryOperatorBlock","symbol","evaluate","topRight","title","inputs","outputs","input","binaryOperatorBlock","inputType","resultType","left","right","arithmeticOperatorBlock","args","numberComparisonOperatorBlock","defaultType","statementBlock","compileFn","beforeProp","inferType","compiler","getInput","props","after","topLeft","optional","endStatementBlock","statementProp","listener","options","useEffect","domTarget","addEventListener","removeEventListener","off","stateReadIcon","FaAngleRight","stateWriteIcon","FaAngleDoubleRight","memberBlock","info","computeTitle","computeMemberName","compilers","motoko","shortcuts","nodeKey","initialValue","controls","stable","modifiers","m","getValue","updateVisualValue","notifyEditorChange","timeout","deps","clearTimeout","setTimeout","ReactTooltip","rebuild","arrayImportRef","getOutput","mutable","multi","itemType","items","SelectControlHandle","findLabel","option","visibilityControlProp","controlProps","charAt","toUpperCase","memberProp","allBlocks","blockNames","Set","blockContext","require","addProps","propList","keys","forEach","basename","default","output","push","log","add","BLOCK_MAP","literalBlock","stringifier","UndefinedInputError","compileKey","Rete","Node","find","getNode","_output","connections","c","_compileConnection","_input","_control","_prop","getInputArgs","defaultCompile","trigger","cached","defineProperty","connection","from","to","getBlockLabel","capitalCase","autoComplete","autoCorrect","placeholder","text","sentenceCase","simplified","replaceRegex","parseCodeBlockInputs","expression","configureMonaco","monaco","languages","register","setLanguageConfiguration","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","accessmodifiers","typeKeywords","operators","symbols","escapes","tokenizer","cases","include","token","bracket","next","comment","string","whitespace","CodeEditor","theme","defaultLanguage","beforeMount","newValue","tabSize","minimap","enabled","wordWrap","scrollBeyondLastLine","fontSize","CodeControlHandle","height","Loading","promise","loading","children","status","setStatus","setResult","Promise","resolve","then","catch","OutputControlHandle","tooltipRef","query","findValue","valuePromise","setValuePromise","copied","setCopied","showTooltip","show","readOnly","Button","size","variant","onClick","compileBlock","compilerKey","displayFn","queryFor","inputKey","defaultReturnType","getFunctionReturnType","visibility","params","returnType","body","hasCaller","asyncKind","returnString","examples","module","exports","getExampleProjects","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","global","members","FaRegCaretSquareRight","array","hidden","FaLayerGroup","typeString","_","index","fromType","toType","fromTypeString","FaRegCaretSquareLeft","FaSitemap","condition","trueCase","falseCase","falsePart","intImportRef","FaPlayCircle","functionNode","paramNames","withMeta","FaPencilAlt","reference","FaItalic","loop","FaCompress","hashMapImportRef","textImportRef","valueTypeString","valueCase","nullCase","valuePart","nullPart","FaCaretLeft","stateNode","typeInput","typeNode","ContextMenu","x","y","styleProp","handleCloseMenu","useMemo","position","top","bindScreen","useCallback","el","stopPropagation","bindContainer","moveIntoWindow","offset","getBoundingClientRect","bottom","innerHeight","onresize","pointerEvents","onKeyDown","keyCode","onMouseDown","MenuContext","MenuIcon","MenuAction","selected","onAction","userSelect","button","SelectionMenu","each","removeNode","MenuComponent","component","endsWith","createElement","FaRegStickyNote","MenuSearch","focus","handleKeyDown","autoFocus","deepCopy","obj","parse","createNode","PlacementMenu","searchText","setSearchText","setIndex","mouse","context","components","sortFn","hash","v","sort","compare","localeCompare","useEditorComponents","socket","findType","outputType","findRelevantComponents","Math","lower","toLowerCase","k","startsWith","handleCreateNode","addNode","compatibleWith","connect","menuItems","ContextMenuPlugin","install","bind","mouseEvent","offsetX","offsetY","menu","display","preventDefault","contains","selectNode","clientX","clientY","document","view","container","appendChild","ReactDOM","render","Provider","remove","connectionMouseMoved","removingConnection","io","prevConnections","conn","Input","Output","SocketHandle","innerRef","socketType","multiple","multipleConnections","paramCase","DynamicTitle","fallback","silent","setTitle","getPropLabel","bindNodeInput","ShortcutButton","shortcut","newNode","area","_drag","down","background","borderColor","cursor","PropHandle","hideLeft","hideRight","bindSocket","bindControl","showControl","leftSocket","rightSocket","controlField","NodeHandle","state","getBindControl","transform","ButtonGroup","BaseControl","custom","test","getData","getDefaultValue","putData","PropControl","BaseComponent","getEditorNode","Component","TypeSocket","otherType","Socket","PropOutputSocket","nodeId","nodeName","typeCompiler","_isTypeOfType","BlockComponent","split","addProp","isPropOutput","addPropInput","addPropOutput","isOutput","shouldPropHaveControl","addControl","addInput","addOutput","NodeCompiler","TypeCompiler","ControlCompiler","BlocksNodeEditor","projectName","projectDescription","json","description","version","beforeImport","hadError","all","jsonNode","getComponent","build","fromJSON","jsonConnection","targetOutput","otherNode","targetInput","afterImport","NodeEditor","sortConnections","VerticalSortPlugin","ioMap","ConnectionDropPlugin","ConnectionOpacityPlugin","minDistance","opacityFalloff","querySelectorAll","pathElement","distance","opacity","sqrt","DragButtonPlugin","MenuContainer","styled","div","TopMenu","ItemContainer","MenuItem","tooltip","MenuItemStyled","hiddenSVGStyle","MenuButton","focusable","x2","y2","stopColor","FileDropZone","onFile","onFileContent","onDrop","files","file","reader","FileReader","onload","readAsText","useDropzone","maxFiles","getRootProps","getInputProps","isDragActive","LoadProjectItemContainer","FileDropZoneStyled","LoadProjectMenu","onLoadFileContent","example","_g","_extends","source","prototype","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDownload","_ref","svgRef","titleId","viewBox","xmlns","xmlnsXlink","xmlSpace","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","d","_path","ForwardRef","SvgFilePlus","SvgFolder","SvgFolderWide","fill","SvgFolderOpen","SvgSave","Icon","ProjectNameInput","saveAnimation","keyframes","SaveIcon","EditorMenu","getEditor","setName","saveAnimated","setSaveAnimated","loadMenuOpen","setLoadMenuOpen","project","src","process","alt","updateName","onAnimationEnd","Modal","onShow","hide","onHide","Body","EditorContainer","Editor","hideMenu","onSetup","onSave","_editor","loadFileContent","content","noClick","element","clear","destroy","EDITOR_NAME","use","ReactRenderPlugin","ConnectionPlugin","AutoArrangePlugin","AreaPlugin","classList","snap","dynamic","editorButton","mouseMoved","update","findCategory","querySelector","createEditor","EDITOR","fromCharCode","which","ctrlKey","metaKey","loadState","resize","zoomAt","nextEditorState","STORAGE_EDITOR_STATE","DEFAULT_STATE","embedded","self","isEmbedded","storage","localStorage","EditorPage","redraw","useRedraw","menuParam","useParams","FileSaver","saveAs","Blob","pascalCase","onEditorSetup","stateString","message","postMessage","ReactTooltipStyled","GlobalTooltip","backgroundColor","place","delayShow","onPerfEntry","App","toast","StrictMode","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.b0558a33.chunk.js","sourcesContent":["import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\n\r\n\r\nexport default function NumberControlHandle({control, bindInput, validation: {min, max, step}}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    return (\r\n        <input\r\n            type=\"number\"\r\n            style={{width: '4em'}}\r\n            ref={bindInput}\r\n            min={min}\r\n            max={max}\r\n            step={step}\r\n            value={value || 0}\r\n            onChange={event => setValue(+event.target.value || event.target.value)}\r\n        />\r\n    );\r\n}\r\n","import {anyType, getType, TYPE_MAP} from '../../../block-types/types';\r\nimport React, {useContext} from 'react';\r\nimport EventsContext, {ERROR_EVENT} from '../../../contexts/EventsContext';\r\nimport classNames from 'classnames';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\nimport getDefaultLabel from '../../../utils/getDefaultLabel';\r\n\r\nexport default function TypeSelect({value, constraintType, abstract, invalid, onChange, ...others}) {\r\n\r\n    constraintType = constraintType || anyType;\r\n\r\n    const types = [...TYPE_MAP.values()]\r\n        .filter(type => (abstract || !type.data.abstract) && constraintType.isSubtype(type));\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    if(value) {\r\n        try {\r\n            value = getType(value);\r\n        }\r\n        catch(err) {\r\n            onChange(value = undefined);///\r\n            // console.error(err);\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    }\r\n\r\n    invalid = invalid || !value || !types.some(t => t.isSubtype(value));\r\n\r\n    // if(invalid && types.length) {\r\n    //     let firstType = types[0];\r\n    //     if(firstType) {\r\n    //         onChange(value = firstType);\r\n    //     }\r\n    //     // value = constraintType;\r\n    // }\r\n\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <>\r\n            <select\r\n                className={classNames(invalid && 'invalid')}\r\n                value={value?.name}\r\n                onChange={event => onChange(getType(event.target.value))}\r\n                {...others}>\r\n                {invalid && <option label=\"(Type)\" value={value?.name}/>}\r\n                {types.map(type => (\r\n                    <option key={type.name} label={type.name} value={type.name}/>\r\n                ))}\r\n            </select>\r\n            <div className=\"ps-2\">\r\n                {value?.generics?.map((type, i) => (\r\n                    <TypeSelect\r\n                        key={i}\r\n                        value={type}\r\n                        constraintType={value.data.baseType.generics[i]}\r\n                        abstract={abstract}\r\n                        data-tip={getDefaultLabel(value.data.genericNames?.[i])}\r\n                        onChange={t => {\r\n                            let generics = [...value.generics];\r\n                            generics.splice(i, 1, t);\r\n                            onChange(getType({\r\n                                ...value.toJSON(),\r\n                                generics,\r\n                            }));\r\n                        }}/>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}","import TextControlHandle from '../components/rete/controls/TextControlHandle';\r\nimport CheckboxControlHandle from '../components/rete/controls/CheckboxControlHandle';\r\nimport NumberControlHandle from '../components/rete/controls/NumberControlHandle';\r\nimport TypeControlHandle from '../components/rete/controls/TypeControlHandle';\r\nimport NodeControlHandle from '../components/rete/controls/NodeControlHandle';\r\n\r\nclass Type {\r\n    constructor(name, parent, generics, data = {}, meta = {}) {\r\n        if(name instanceof Type) {\r\n            throw new Error(`Type cannot be named ${name}`);\r\n        }\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.generics = generics.map(type => getType(type));\r\n        this.data = data;\r\n        this.meta = meta;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            generics: this.generics.map(t => t.toJSON()),\r\n        };\r\n    }\r\n\r\n    of(...generics) {\r\n        return getType(this, generics);\r\n    }\r\n\r\n    withMeta(meta) {\r\n        let {name, ...otherMeta} = meta;\r\n        let type = buildType(name || this.name, this, this.generics);\r\n        Object.assign(type.meta, otherMeta);\r\n        return type;\r\n    }\r\n\r\n    isAbstract() {\r\n        return this.data.abstract || this.generics.some(type => type.isAbstract());\r\n    }\r\n\r\n    getDefaultValue() {\r\n        let value = this.data.defaultValue;\r\n        return typeof value === 'function' ? value(this) : value;\r\n    }\r\n\r\n    equals(other) {\r\n        return this.name === other.name && this.generics.length === other.generics.length && this.generics.every((t, i) => t.equals(other.generics[i]));\r\n    }\r\n\r\n    // TODO: rename to something like `isSubtypeOrEquivalent`\r\n    isSubtype(other) {\r\n        if(!other) {\r\n            return false;\r\n        }\r\n        if(this.data.alwaysSubtype === other) {\r\n            return true;///\r\n        }\r\n        if(this.data.arbitraryGenerics && other.parent && this.name === other.parent.name) {\r\n            // e.g. `Tuple : Tuple<A, B, C>`\r\n            return true;\r\n        }\r\n        if(this.name === other.name) {\r\n            return this.generics.length === other.generics.length && this.generics.every((t, i) => t.isSubtype(other.generics[i]));\r\n        }\r\n        return !!other.parent && this.isSubtype(other.parent);\r\n    }\r\n\r\n    getSharedType(other) {\r\n        if(!other) {\r\n            return;\r\n        }\r\n        if(this === other) {\r\n            return this;\r\n        }\r\n        if(this.isSubtype(other)) {\r\n            return this;\r\n        }\r\n        if(other.isSubtype(this)) {\r\n            return other;\r\n        }\r\n        if(this.parent) {\r\n            return this.parent.getSharedType(other);\r\n        }\r\n    }\r\n\r\n    toTypeString() {\r\n        return this.data.toTypeString?.call(this) ?? this.name + (this.generics.length ? '<' + this.generics.map(g => g.toTypeString()).join(', ') + '>' : '');\r\n    }\r\n\r\n    toString() {\r\n        return `Type(${this.toTypeString()})`;\r\n    }\r\n}\r\n\r\nexport const TYPE_MAP = new Map();\r\n\r\nwindow.TYPE_MAP = TYPE_MAP; // Browser debug\r\n\r\nexport const anyType = createType('Any', {\r\n    abstract: true,\r\n    category: 'default',\r\n    reversed: false,\r\n});\r\nexport const anyReversedType = createType('AnyReversed', {\r\n    abstract: true,\r\n    category: 'default',\r\n    // parent: anyType,\r\n    reversed: true,\r\n});\r\n\r\nexport const typeType = createType('Type', {\r\n    parent: anyType,\r\n    category: 'types',\r\n    controlType: TypeControlHandle,\r\n    defaultValue: type => type.generics[0],\r\n    generics: [anyType],\r\n});\r\nexport const nodeType = createType('Node', {\r\n    parent: anyType,\r\n    category: 'nodes',\r\n    controlType: NodeControlHandle,\r\n    toTypeString() {\r\n        return this.meta.block ? `Node{block=${JSON.stringify(this.meta.block)}}` : 'Node';\r\n    },\r\n});\r\n\r\n// High-level type categories\r\nexport const valueType = createType('Value', {\r\n    abstract: true,\r\n    parent: anyType,\r\n    category: 'values',\r\n});\r\nexport const customType = createType('Custom', {\r\n    // abstract: true, // TEMP\r\n    parent: valueType,\r\n    arbitraryGenerics: true,\r\n    // toMotoko() {\r\n    //     console.log(this)///\r\n    //     return this.meta.motoko || '$Custom$';\r\n    // },\r\n});\r\nexport const referenceType = createType('Reference', {\r\n    parent: anyType,\r\n    category: 'references',\r\n});\r\nexport const identifierType = createType('Identifier', {\r\n    parent: referenceType,\r\n    controlType: TextControlHandle,\r\n    // defaultValue: '',\r\n    validation: {\r\n        pattern: /^[a-zA-Z][a-zA-Z0-9_]*$/,\r\n    },\r\n});\r\nexport const effectType = createType('Effect', {\r\n    parent: anyReversedType,\r\n    category: 'effects',\r\n    generics: [valueType],\r\n    toMotoko([value]) {\r\n        return value;\r\n    },\r\n});\r\nexport const memberType = createType('Member', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'members',\r\n});\r\nexport const actorType = createType('Actor', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'actors',\r\n});\r\nexport const moduleType = createType('Module', {\r\n    parent: anyReversedType,\r\n    singleOutput: true,\r\n    category: 'modules',\r\n});\r\nexport const paramType = createType('Param', {\r\n    parent: anyReversedType,\r\n    category: 'parameters',\r\n});\r\n\r\n// Value types\r\nexport const boolType = createType('Bool', {\r\n    parent: valueType,\r\n    controlType: CheckboxControlHandle,\r\n    defaultValue: false,\r\n});\r\nexport const charType = createType('Char', {\r\n    parent: valueType,\r\n    controlType: TextControlHandle,\r\n    validation: {\r\n        minLength: 1,\r\n        maxLength: 1,\r\n    },\r\n});\r\nexport const textType = createType('Text', {\r\n    parent: valueType,\r\n    controlType: TextControlHandle,\r\n    defaultValue: '',\r\n});\r\nexport const floatType = createType('Float', {\r\n    parent: valueType,\r\n    controlType: NumberControlHandle,\r\n    defaultValue: 0,\r\n});\r\nexport const intType = createType('Int', {\r\n    parent: floatType,\r\n    category: 'integers',\r\n    controlType: NumberControlHandle,\r\n    validation: {\r\n        step: 1,\r\n    },\r\n});\r\nexport const natType = createType('Nat', {\r\n    parent: floatType,\r\n    category: 'naturals',\r\n    validation: {\r\n        step: 1,\r\n        min: 0,\r\n    },\r\n});\r\nexport const blobType = createType('Blob', {\r\n    parent: valueType,\r\n});\r\nexport const principalType = createType('Principal', {\r\n    parent: valueType,\r\n    category: 'principals',\r\n});\r\nexport const errorType = createType('Error', {\r\n    parent: valueType,\r\n});\r\nexport const tupleType = createType('Tuple', {\r\n    abstract: true,\r\n    arbitraryGenerics: true,\r\n    parent: valueType,\r\n    category: 'tuples',\r\n    // controlType: ,\r\n    toTypeString() {\r\n        return this === tupleType ? this.name : `(${this.generics.map(t => t.toTypeString()).join(', ')})`;\r\n    },\r\n});\r\n// export const unitType = createType('Unit', {\r\n//     parent: tupleType,\r\n// });\r\nexport const unitType = createType('Unit', tupleType.of());\r\nif(tupleType === unitType) throw new Error(); // TODO: move to tests\r\nexport const objectType = createType('Object', {\r\n    abstract: true,\r\n    arbitraryGenerics: true,\r\n    parent: valueType,\r\n    category: 'objects',\r\n    // controlType: ,\r\n    toTypeString() {\r\n        return `(${this.generics.map((t, i) => `${this.genericNames[i]}: ${t.toTypeString()}`).join(', ')})`;\r\n    },\r\n});\r\nexport const functionType = createType('Function', {\r\n    parent: valueType,\r\n    generics: [valueType, valueType],\r\n    genericNames: ['input', 'output'],\r\n    category: 'functions',\r\n    toTypeString() {\r\n        return `${this.generics[0].toTypeString()} -> ${this.generics[1].toTypeString()}`;\r\n    },\r\n});\r\nexport const optionalType = createType('Optional', {\r\n    parent: valueType,\r\n    generics: [valueType],\r\n    category: 'optionals',\r\n    toMotoko([value]) {\r\n        return `?${value}`;\r\n    },\r\n});\r\nexport const nullType = createType('Null', {\r\n    parent: valueType,\r\n    alwaysSubtype: optionalType,\r\n});\r\nexport const collectionType = createType('Collection', {\r\n    abstract: true,\r\n    parent: valueType,\r\n    category: 'collections',\r\n});\r\nexport const arrayType = createType('Array', {\r\n    parent: collectionType,\r\n    generics: [valueType],\r\n    genericNames: ['item'],\r\n    toMotoko([item]) {\r\n        return `[${item}]`;\r\n    },\r\n});\r\nexport const mutableArrayType = createType('MutableArray', {\r\n    parent: arrayType,\r\n    generics: [valueType],\r\n    genericNames: ['item'],\r\n    toMotoko([item]) {\r\n        return `[var ${item}]`;\r\n    },\r\n});\r\nexport const mapType = createType('Map', {\r\n    parent: collectionType,\r\n    generics: [valueType, valueType],\r\n    genericNames: ['key', 'value'],\r\n    toMotoko([key, value]) {\r\n        return `HashMap.HashMap<${key}, ${value}>`;\r\n    },\r\n});\r\nexport const asyncType = createType('Async', {\r\n    parent: valueType,\r\n    generics: [valueType],\r\n    category: 'futures',\r\n    toMotoko([value]) {\r\n        return `async ${value}`;\r\n    },\r\n});\r\n// export const andType = createType('And', {\r\n//     parent: valueType,\r\n//     generics: [valueType, valueType],\r\n//     toMotoko([a, b]) {\r\n//         return `(${a} and ${b})`;\r\n//     },\r\n// });\r\n\r\n// // Fixed-size int values\r\n// export const int64Type = createType('Int64', {\r\n//     parent: intType,\r\n//     validation: getIntValidation(64),\r\n// });\r\n// export const int32Type = createType('Int32', {\r\n//     parent: int64Type,\r\n//     validation: getIntValidation(32),\r\n// });\r\n// export const int16Type = createType('Int16', {\r\n//     parent: int32Type,\r\n//     validation: getIntValidation(16),\r\n// });\r\n// export const int8Type = createType('Int8', {\r\n//     parent: int16Type,\r\n//     validation: getIntValidation(8),\r\n// });\r\n//\r\n// // Fixed-size nat values\r\n// export const nat64Type = createType('Nat64', {\r\n//     parent: natType,\r\n//     validation: getNatValidation(64),\r\n// });\r\n// export const nat32Type = createType('Nat32', {\r\n//     parent: nat64Type,\r\n//     validation: getNatValidation(32),\r\n// });\r\n// export const nat16Type = createType('Nat16', {\r\n//     parent: nat32Type,\r\n//     validation: getNatValidation(16),\r\n// });\r\n// export const nat8Type = createType('Nat8', {\r\n//     parent: nat16Type,\r\n//     validation: getNatValidation(8),\r\n// });\r\n\r\n// function getNatValidation(n) {\r\n//     return {\r\n//         ...natType.data.validation,\r\n//         max: 2 ** n - 1,\r\n//     };\r\n// }\r\n//\r\n// function getIntValidation(n) {\r\n//     let x = 2 ** (n - 1);\r\n//     return {\r\n//         ...intType.data.validation,\r\n//         min: -x,\r\n//         max: x - 1,\r\n//     };\r\n// }\r\n\r\n// Create a global type\r\nfunction createType(name, data) {\r\n    let type;\r\n    if(data instanceof Type) {\r\n        type = data;\r\n        type.name = name;\r\n    }\r\n    else {\r\n        let {parent} = data;\r\n        let {generics = [], meta = {}, ...other} = data;\r\n        type = buildType(name, parent, generics, other, meta);\r\n        type.data.baseType = type;///\r\n    }\r\n    TYPE_MAP.set(name, type);\r\n    return type;\r\n}\r\n\r\n// Get or create a generic version of the given type\r\nfunction getGenericType(parent, generics) {\r\n    if(typeof parent === 'string') {\r\n        parent = getType(parent);\r\n    }\r\n    if((!generics || !generics.length || generics === parent.generics) && !parent.data.arbitraryGenerics) {\r\n        return getType(parent);\r\n    }\r\n    let type = buildType(parent.name, parent, generics);\r\n    if(!parent.isSubtype(type)) {\r\n        throw new Error(`Generics not assignable to ${parent.toTypeString()} from ${type.toTypeString()}`);\r\n    }\r\n    return type;\r\n}\r\n\r\n// Instantiate a new type\r\nfunction buildType(name, parent, generics, data = {}, meta = {}) {\r\n    // Special cases for data inheritance\r\n    let {\r\n        abstract,\r\n        arbitraryGenerics,\r\n        ...parentData\r\n    } = parent ? parent.data : {};\r\n    let parentMeta = parent ? parent.meta : {};\r\n    return new Type(\r\n        name,\r\n        parent || null,\r\n        generics || (parent ? parent.generics : []),\r\n        {...parentData, ...data},\r\n        {...parentMeta, ...meta},\r\n    );\r\n}\r\n\r\n// Get or create a type\r\nexport function getType(name, generics) {\r\n    if(arguments.length > 1) {\r\n        return getGenericType(name, generics);\r\n    }\r\n    if(name instanceof Type) {\r\n        return name;\r\n    }\r\n    if(typeof name === 'object') {\r\n        return getGenericType(name.name, (name.generics || []).map(t => getType(t)));\r\n    }\r\n    if(!name) {\r\n        throw new Error(`Invalid type: ${name}`);\r\n    }\r\n    if(!TYPE_MAP.has(name)) {\r\n        throw new Error(`Unknown type: ${name}`);\r\n    }\r\n    return TYPE_MAP.get(name);\r\n}\r\n\r\nexport function getSharedType(...types) {\r\n    let a = types[0];\r\n    for(let i = 1; i < types.length; i++) {\r\n        let b = types[i];\r\n        if(!a) {\r\n            a = b;\r\n        }\r\n        else if(b) {\r\n            a = a.getSharedType(b);\r\n        }\r\n    }\r\n    return a;\r\n}","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport TypeSelect from '../../common/inputs/TypeSelect';\r\n\r\n\r\nexport default function TypeControlHandle({abstract, control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let constraintType = control.config.type.generics[0];\r\n\r\n    let invalid = !control.validate(value);\r\n\r\n    // if(typeType.isSubtype(value)) {\r\n    //     value = value?.generics[0];\r\n    // }\r\n\r\n    return (\r\n        <div ref={bindInput}>\r\n            <TypeSelect\r\n                value={value}\r\n                constraintType={constraintType}\r\n                abstract={abstract}\r\n                invalid={invalid}\r\n                onChange={setValue/*type => setValue(typeType.of(type))*/}>\r\n            </TypeSelect>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useContext, useState} from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../contexts/EventsContext';\r\nimport useListener from '../../../hooks/useListener';\r\nimport getNodeLabel from '../../../utils/getNodeLabel';\r\nimport classNames from 'classnames';\r\nimport {getBlock} from '../../../editor/blocks';\r\n\r\n\r\nexport default function NodeControlHandle({editor, control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let [nodes, setNodes] = useState(() => [...editor.nodes]);\r\n\r\n    let events = useContext(EventsContext);\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => setNodes([...editor.nodes]));\r\n\r\n    let blockName = control.config.type?.meta.block;///\r\n    let blockFilter = blockName && (Array.isArray(blockName) ? blockName : [blockName]).map(block => {\r\n        let name = typeof block === 'string' ? block : block.name;\r\n        getBlock(name); // Ensure block exists\r\n        return name;\r\n    });\r\n\r\n    if(blockFilter) {\r\n        nodes = nodes.filter(n => !blockFilter || blockFilter.includes(n.name));\r\n    }\r\n\r\n    let invalid = !value || !nodes.some(n => String(n.id) === String(value) && (!blockFilter || blockFilter.includes(n.name)));\r\n\r\n    // TODO: cleanly prevent number -> string id conversion\r\n    return (\r\n        <select\r\n            ref={bindInput}\r\n            className={classNames(invalid && 'invalid')}\r\n            style={{maxWidth: '100%'}}\r\n            value={value}\r\n            onChange={event => setValue(event.target.value || undefined)}>\r\n            <option key={-1} label={'(Select a Node)'} value={undefined}/>\r\n            {nodes.map(node => (\r\n                <option key={node.id} label={getNodeLabel(node, editor)} value={node.id}/>\r\n            ))}\r\n        </select>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\n\r\n\r\nexport default function CheckboxControlHandle({control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    return (\r\n        <label ref={bindInput}>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={!!value}\r\n                onChange={event => setValue(event.target.checked)}\r\n            />\r\n            <span className=\"input-title my-0\" style={{verticalAlign: 'top'}}>{control.name}</span>\r\n        </label>\r\n    );\r\n}\r\n","import {\r\n    FaCode,\r\n    FaCubes,\r\n    FaDatabase,\r\n    FaEject,\r\n    FaFilter,\r\n    FaFont,\r\n    FaLongArrowAltRight,\r\n    FaNetworkWired,\r\n    FaPlusCircle,\r\n    FaStream,\r\n    FaTextHeight,\r\n    FaTh,\r\n} from 'react-icons/fa';\r\n\r\nclass Category {\r\n    constructor(name, parent, data = {}) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.root = parent ? parent.root : this;\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nconst CATEGORY_MAP = new Map();\r\n\r\nfunction createCategory(data) {\r\n    let {name, parent, ...other} = data;\r\n    let category = new Category(name, parent, parent ? {...parent.data, ...other} : other);\r\n    CATEGORY_MAP.set(category.name, category);\r\n    return category;\r\n}\r\n\r\nexport function getCategory(name) {\r\n    if(name instanceof Category) {\r\n        return name;\r\n    }\r\n    if(!CATEGORY_MAP.has(name)) {\r\n        throw new Error(`Could not find category with name: ${name}`);\r\n    }\r\n    return CATEGORY_MAP.get(name);\r\n}\r\n\r\n\r\nexport const defaultCategory = createCategory('Default', {});\r\nexport const stateCategory = createCategory({\r\n    name: 'State',\r\n    color: '#3fd',\r\n    icon: FaDatabase,\r\n});\r\nexport const functionCategory = createCategory({\r\n    name: 'Function',\r\n    color: '#fd3',\r\n    icon: FaCubes,\r\n});\r\nexport const paramCategory = createCategory({\r\n    name: 'Param',\r\n    color: '#a8f',\r\n    icon: FaLongArrowAltRight,\r\n});\r\nexport const typeCategory = createCategory({\r\n    name: 'Type',\r\n    color: '#2af',\r\n    icon: FaTextHeight,\r\n});\r\nexport const collectionCategory = createCategory({\r\n    name: 'Collection',\r\n    color: '#1c8',\r\n    icon: FaTh,\r\n});\r\nexport const compilerCategory = createCategory({\r\n    name: 'Compiler',\r\n    color: '#f5a',\r\n    icon: FaCode,\r\n});\r\nexport const expressionCategory = createCategory({\r\n    name: 'Expression',\r\n    color: '#aaa',\r\n    icon: FaEject,\r\n});\r\nexport const operatorCategory = createCategory({\r\n    name: 'Operator',\r\n    // color: '#57f',\r\n    icon: FaFilter,\r\n});\r\nexport const actorCategory = createCategory({\r\n    name: 'Actor',\r\n    color: '#fa8',\r\n    icon: FaFont,\r\n});\r\nexport const effectCategory = createCategory({\r\n    name: 'Effect',\r\n    // color: '#57f',\r\n    icon: FaStream,\r\n});\r\nexport const literalCategory = createCategory({\r\n    name: 'Literal',\r\n    // color: '#8fa',\r\n    icon: FaPlusCircle,\r\n});\r\nexport const decompositionCategory = createCategory({\r\n    name: 'Decomposition',\r\n    // color: '#8fa',\r\n    icon: FaNetworkWired,\r\n});\r\n","import React from 'react';\r\nimport EventEmitter from 'events';\r\n\r\nexport const EDITOR_CHANGE_EVENT = 'editor-change';\r\nexport const EDITOR_SAVE_EVENT = 'editor-save';\r\nexport const PROJECT_EXPORT_EVENT = 'project-export';\r\nexport const PROJECT_LOAD_EVENT = 'project-load';\r\nexport const PROJECT_CLEAR_EVENT = 'project-clear';\r\nexport const ERROR_EVENT = 'error';\r\n\r\n// TODO: fix HMR memory leak\r\n\r\nconst events = new EventEmitter();\r\nevents.setMaxListeners(1000);\r\nevents.on(ERROR_EVENT, console.error);\r\n\r\n// Browser debug\r\nwindow.EVENTS = events;\r\n\r\nexport default React.createContext(events);\r\n","import Compiler from './Compiler';\r\nimport {typeType} from '../block-types/types';\r\n\r\nexport function nodeVariableRef(node) {\r\n    // TODO: ensure `id` is a valid identifier\r\n    let id = typeof node === 'number' || typeof node === 'string' ? String(node) : node.id;\r\n    return `node__${id}`;\r\n}\r\n\r\nexport function importRef(name) {\r\n    return `$import$\"${name}\"`;\r\n}\r\n\r\nexport function resolveImportRefs(code) {\r\n    if(!code) {\r\n        return code;\r\n    }\r\n    code = String(code);\r\n\r\n    const imports = {};\r\n    code = code.replaceAll(/\\$import\\$\"([^\"]*)\"/g, (match, path) => {\r\n        const id = path.includes('/') ? path.substring(path.lastIndexOf('/') + 1) : path;\r\n        if(imports.hasOwnProperty(id) && imports[id] !== path) {\r\n            throw new Error(`Conflicting import paths: \"${path}\" != \"${imports[id]}\"`);\r\n        }\r\n        imports[id] = path;\r\n        return id;\r\n    });\r\n    for(const [id, path] of Object.entries(imports)) {\r\n        code = `import ${id} \"${path}\"; ${code}`;\r\n    }\r\n    return code;\r\n}\r\n\r\nexport default class MotokoCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'toMotoko');\r\n    }\r\n\r\n    defaultCompile(prop, node, key) {\r\n        if(typeType.isSubtype(prop.type)) {\r\n            let type = prop.type.generics[0];\r\n            if(type && !type.isAbstract()) {\r\n                return this.getTypeString();\r\n            }\r\n        }\r\n    }\r\n\r\n    postCompile(result, node, key) {\r\n        if(typeof result === 'string' || typeof result === 'number' || typeof result === 'boolean' || result === null) {\r\n            return result;\r\n        }\r\n        if(result === undefined) {\r\n            return;\r\n        }\r\n        if(Array.isArray(result)) {\r\n            return result.map(r => this.postCompile(r, node, key)).filter(s => s).join(' ');\r\n        }\r\n        console.warn('Unexpected Motoko expression:', result);\r\n        return String(result);\r\n    }\r\n}","import {boolType, floatType, getType} from '../block-types/types';\r\nimport {operatorCategory} from '../block-categories/categories';\r\n\r\nexport function unaryOperatorBlock(type, symbol, evaluate) {\r\n    type = getType(type);\r\n    return {\r\n        topRight: 'result',\r\n        title: `(${symbol} a)`,\r\n        category: operatorCategory,\r\n        inputs: [{\r\n            key: 'input',\r\n            title: 'a',\r\n            type,\r\n        }],\r\n        outputs: [{\r\n            key: 'result',\r\n            type,\r\n            toMotoko({input}) {\r\n                return `${symbol}(${input})`;\r\n            },\r\n            // inferType({input}) {\r\n            //     return input;\r\n            // },\r\n        }],\r\n    };\r\n}\r\n\r\nexport function binaryOperatorBlock(type, symbol, evaluate) {\r\n    let [inputType, resultType] = Array.isArray(type) ? type : [type, type];\r\n\r\n    inputType = getType(inputType);\r\n    resultType = getType(resultType);\r\n\r\n    return {\r\n        title: `(a ${symbol} b)`,\r\n        category: operatorCategory,\r\n        topRight: 'result',\r\n        inputs: [{\r\n            key: 'left',\r\n            title: 'a',\r\n            type: inputType,\r\n        }, {\r\n            key: 'right',\r\n            title: 'b',\r\n            type: inputType,\r\n        }],\r\n        outputs: [{\r\n            key: 'result',\r\n            type: resultType,\r\n            toMotoko({left, right}) {\r\n                return `(${left} ${symbol} ${right})`;\r\n            },\r\n            // inferType({left, right}) {\r\n            //     return left.getSharedType(right);\r\n            // },\r\n        }],\r\n    };\r\n}\r\n\r\nexport function arithmeticOperatorBlock(...args) {\r\n    return binaryOperatorBlock(floatType, ...args);\r\n}\r\n\r\nexport function numberComparisonOperatorBlock(...args) {\r\n    return binaryOperatorBlock([floatType, boolType], ...args);\r\n}","import {effectType, getSharedType, unitType} from '../block-types/types';\r\nimport {effectCategory} from '../block-categories/categories';\r\n\r\nconst defaultType = effectType.of(unitType);\r\n\r\nexport function statementBlock(block, compileFn) {\r\n    const beforeProp = {\r\n        key: 'before',\r\n        type: effectType,\r\n        inferType(/*{after}*/args, node, compiler) {\r\n            // return after || defaultType;\r\n\r\n            let block = compiler.getBlock(node);\r\n            return getSharedType(...block.inputs\r\n                .filter(prop => effectType.isSubtype(prop.type))\r\n                .map(prop => compiler.getInput(node, prop.key))) || defaultType;\r\n        },\r\n        toMotoko(props, ...args) {\r\n            let result = compileFn(props, ...args);\r\n            if(result === undefined) {\r\n                return;\r\n            }\r\n            let {after} = props;\r\n            return `${result}${after ? ' ' + after : ''}`;\r\n        },\r\n    };\r\n    // for(let [key, fn] of Object.entries(compileObject)) {\r\n    //     beforeProp[key] = typeof fn === 'function' ? function(props, ...args) {\r\n    //         let result = fn(props, ...args);\r\n    //         if(result === undefined) {\r\n    //             return;\r\n    //         }\r\n    //         let {after} = props;\r\n    //         return `${result}${after ? ' ' + after : ''}`;\r\n    //     } : fn;\r\n    // }\r\n\r\n    return {\r\n        category: effectCategory,\r\n        topLeft: 'before',\r\n        topRight: 'after',\r\n        ...block,\r\n        inputs: [\r\n            ...block.inputs || [], {\r\n                key: 'after',\r\n                type: effectType,\r\n                optional: true,\r\n                // multi: true,\r\n            },\r\n        ],\r\n        outputs: [\r\n            ...block.outputs || [],\r\n            beforeProp,\r\n        ],\r\n    };\r\n}\r\n\r\nexport function endStatementBlock(block, statementProp) {\r\n    return {\r\n        category: effectCategory,\r\n        topLeft: 'statement',\r\n        ...block,\r\n        outputs: [...block.outputs || [], {\r\n            key: 'statement',\r\n            type: effectType,\r\n            ...statementProp,\r\n        }],\r\n    };\r\n}\r\n","import {useEffect} from 'react';\r\n\r\nexport default function useListener(target, event, listener, options) {\r\n    useEffect(() => {\r\n        if(!target) {\r\n            return;\r\n        }\r\n        let domTarget = 'addEventListener' in target;\r\n        if(domTarget) {\r\n            target.addEventListener(event, listener, options);\r\n        }\r\n        else {\r\n            target.on(event, listener, options);\r\n        }\r\n        return () => {\r\n            if(domTarget) {\r\n                target.removeEventListener(event, listener);\r\n            }\r\n            else {\r\n                target.off(event, listener);\r\n            }\r\n        };\r\n    });\r\n    return listener;\r\n}","import {boolType, unitType, valueType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock} from '../block-patterns/member-patterns';\r\nimport {stateCategory} from '../block-categories/categories';\r\nimport {FaAngleDoubleRight, FaAngleRight} from 'react-icons/fa';\r\n\r\nexport const stateReadIcon = FaAngleRight;\r\nexport const stateWriteIcon = FaAngleDoubleRight;\r\n\r\nconst block = memberBlock({\r\n    info: 'A persistent smart contract variable',\r\n    topRight: 'value',\r\n    category: stateCategory,\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        // let name = editor.compilers.motoko.getInput(node, 'name');\r\n        let type = editor.compilers.type.getInput(node, 'initialValue') || unitType;\r\n        return name && `${name} : ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    shortcuts: [{\r\n        block: 'StateRead',\r\n        nodeKey: 'stateNode',\r\n    }, {\r\n        block: 'StateUpdate',\r\n        nodeKey: 'stateNode',\r\n    }],\r\n    inputs: [{\r\n        //     key: 'type',\r\n        //     type: 'Type',\r\n        // }, {\r\n        key: 'initialValue',\r\n        type: valueType,\r\n        optional: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        toMotoko({name}) {\r\n            return name;\r\n        },\r\n        inferType({initialValue}) {\r\n            return initialValue;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'stable',\r\n        type: boolType,\r\n        // }, {\r\n        //     key: 'readonly',\r\n        //     type: 'Bool',\r\n    }],\r\n}, {\r\n    toMotoko({stable, name, initialValue}, node, compiler) {\r\n        let readonly = false;/// TODO: infer and/or adjust shortcuts\r\n        let modifiers = [!!stable && 'stable'].filter(m => m).join(' '); //TODO: combine into single control\r\n        let type = compiler.editor.compilers.type.getInput(node, 'initialValue');\r\n\r\n        return `${modifiers && modifiers + ' '}${readonly ? 'let' : 'var'} ${name}${type ? ` : ${compiler.getTypeString(type)}` : ''}${initialValue ? ' = ' + initialValue : ''};`;\r\n    },\r\n});\r\nexport default block;\r\n","import {useContext, useState} from 'react';\r\nimport useListener from './useListener';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../contexts/EventsContext';\r\n\r\nexport default function useControlState(control) {\r\n    let value = control.getValue();\r\n    let [, updateVisualValue] = useState(value); // updateVisualValue(..): redraw component if value changed\r\n\r\n    let events = useContext(EventsContext);\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => {\r\n        updateVisualValue(control.getValue());\r\n        control.notifyEditorChange?.();\r\n    });\r\n\r\n    useListener(control.events, 'update', () => events.emit(EDITOR_CHANGE_EVENT, control, value));\r\n\r\n    return [\r\n        value,\r\n        value => control.setValue(value),\r\n    ];\r\n}\r\n","import {useEffect} from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nlet timeout;\r\n\r\n// Rebuild react-tooltip\r\nexport default function useReactTooltip(deps = []) {\r\n    useEffect(() => {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => ReactTooltip.rebuild());\r\n    }, deps); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n    return ReactTooltip;\r\n}\r\n","import {arrayType, boolType, mutableArrayType, typeType, valueType} from '../block-types/types';\r\nimport {importRef} from '../compilers/MotokoCompiler';\r\nimport {collectionCategory} from '../block-categories/categories';\r\n\r\nexport const arrayImportRef = importRef('mo:base/Array');\r\n\r\nconst block = {\r\n    title: 'Create Array',\r\n    category: collectionCategory,\r\n    icon: collectionCategory.data.icon,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');\r\n        let mutable = editor.compilers.motoko.getOutput(node, 'mutable'); // TODO: control compiler?\r\n        return type && `new Array [ ${mutable ? 'var ' : ''}${editor.compilers.motoko.getTypeString(type.generics[0])} ]`;\r\n    },\r\n    inputs: [{\r\n        key: 'itemType',\r\n        type: typeType.of(valueType),\r\n    }, {\r\n        key: 'items',\r\n        type: valueType,\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: arrayType,\r\n        inferType({itemType}, node, compiler) {\r\n            let mutable = compiler.editor.compilers.motoko.getInput(node, 'mutable'); // TODO: simplify\r\n            return (mutable ? mutableArrayType : arrayType).of(itemType);\r\n        },\r\n        toMotoko({mutable, items}) {\r\n            return `[${mutable ? (items.length ? 'var ' : 'var') : ''}${items.join(', ')}]`;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'mutable',\r\n        type: boolType,\r\n    }],\r\n};\r\nexport default block;\r\n","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport classNames from 'classnames';\r\n\r\n\r\nexport default function SelectControlHandle({control, bindInput, options, findLabel}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    if(value === undefined && !options.includes(value)) {\r\n        value = options[0];\r\n        setValue(value);\r\n    }\r\n\r\n    let invalid = !control.validate(value) || !options.includes(value);\r\n\r\n    return (\r\n        <select\r\n            className={classNames(invalid && 'invalid')}\r\n            ref={bindInput}\r\n            value={value}\r\n            onChange={event => setValue(event.target.value || undefined)}>\r\n            {options.map((option, i) => (\r\n                <option key={i} label={findLabel?.(option, i) ?? option} value={option}/>\r\n            ))}\r\n        </select>\r\n    );\r\n}\r\n","import {identifierType, memberType} from '../block-types/types';\r\nimport {stringSelectProp} from './control-patterns';\r\n\r\n\r\nexport function computeMemberName(node, editor) {\r\n    return editor.compilers.motoko.getInput(node, 'name');\r\n\r\n    // let name = editor.compilers.motoko.getInput(node, 'name');\r\n    // if(!name) {\r\n    //     return;\r\n    // }\r\n    // if(!parentNode) {\r\n    //     return name;\r\n    // }\r\n    // let actorName = editor.compilers.motoko.getInput(parentNode, 'name');\r\n    // return actorName?`${actorName}.${name}`:name;\r\n}\r\n\r\nexport function visibilityControlProp() {\r\n    return stringSelectProp({\r\n        key: 'visibility',\r\n        // optional: true,\r\n    }, ['public', 'private', 'system']);\r\n}\r\n\r\nexport function memberBlock(block, memberProp) {\r\n    return {\r\n        topLeft: 'member',\r\n        ...block,\r\n        inputs: [\r\n            {\r\n                key: 'name',\r\n                type: identifierType,\r\n            },\r\n            ...block.inputs || [],\r\n        ],\r\n        outputs: [\r\n            {\r\n                key: 'member',\r\n                type: memberType,\r\n                ...memberProp,\r\n            },\r\n            ...block.outputs || [],\r\n        ],\r\n    };\r\n}","import SelectControlHandle from '../components/rete/controls/SelectControlHandle';\r\n\r\nexport function stringSelectProp(prop, options) {\r\n    return {\r\n        ...prop,\r\n        config: {\r\n            ...prop.config || {},\r\n            controlType: SelectControlHandle,\r\n            controlProps: {\r\n                options: prop.optional ? [undefined, ...options] : options,\r\n                findLabel: (option) => option ? option.charAt(0).toUpperCase() + option.substring(1) : '--',\r\n            },\r\n        },\r\n    };\r\n}","import {basename} from 'path';\r\nimport {getType} from '../block-types/types';\r\nimport {defaultCategory, getCategory} from '../block-categories/categories';\r\n\r\nconst allBlocks = [];\r\nconst blockNames = new Set();\r\n\r\n// noinspection JSUnresolvedFunction\r\nconst blockContext = require.context('../blocks', true, /\\.js$/);\r\nblockContext.keys().forEach(path => {\r\n    let name = basename(path, '.js');\r\n    let block = blockContext(path).default;\r\n    block = {...block}; // HMR fix\r\n    if(block) {\r\n        block.name = name;\r\n        if(blockNames.has(name)) {\r\n            console.error(`Duplicate block name: ${name}`);\r\n            return;\r\n        }\r\n        block.category = block.category ? getCategory(block.category) : defaultCategory;\r\n        block.props = block.props || {};\r\n        for(let [key, prop] of Object.entries(block.props)) {\r\n            if(prop.key && prop.key !== key) {\r\n                throw new Error(`Prop key mismatch: ${key} != ${prop.key}`);\r\n            }\r\n            prop.key = key;\r\n        }\r\n\r\n        // `outputs` prioritized over `inputs`\r\n        addProps(block, block.outputs, 'output');\r\n        addProps(block, block.inputs, 'input');\r\n        addProps(block, block.controls, 'control');\r\n\r\n        // Rearrange block inputs/outputs/controls\r\n        block.inputs = [];\r\n        block.outputs = [];\r\n        block.controls = [];\r\n\r\n        for(let [key, prop] of Object.entries(block.props)) {\r\n            prop.key = key;\r\n            // `output` prioritized over `input`\r\n            if(prop.output) {\r\n                if(!block.outputs.includes(prop)) {\r\n                    block.outputs.push(prop);\r\n                }\r\n            }\r\n            else if(prop.input) {\r\n                if(!block.inputs.includes(prop)) {\r\n                    block.inputs.push(prop);\r\n                }\r\n            }\r\n            else if(prop.control) {\r\n                if(!block.controls.includes(prop)) {\r\n                    block.controls.push(prop);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Type deserialization\r\n        for(let prop of Object.values(block.props)) {\r\n            if(!prop.type && (prop.input || prop.output) && prop.control) {\r\n                console.log(prop);///\r\n                throw new Error(`Type not found for ${block.name} : ${prop.key}`);\r\n            }\r\n            if(prop.type) {\r\n                prop.type = getType(prop.type);\r\n            }\r\n        }\r\n\r\n        blockNames.add(block.name);\r\n        allBlocks.push(block);\r\n    }\r\n});\r\n\r\nfunction addProps(block, propList, type) {\r\n    if(propList) {\r\n        for(let prop of propList) {\r\n            if(prop.key && block.props[prop.key] === prop) {\r\n                continue;\r\n            }\r\n            if(block.props.hasOwnProperty(prop.key)) {\r\n                throw new Error(`Duplicate prop in ${block.name}: ${prop.key}`);\r\n            }\r\n            prop[type] = prop[type] || true;\r\n            block.props[prop.key] = prop;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const BLOCK_MAP = new Map(allBlocks.map(block => [block.name, block]));\r\n\r\nwindow.BLOCK_MAP = BLOCK_MAP; // Browser debugging\r\n\r\n// Post-initialization\r\nfor(let block of BLOCK_MAP.values()) {\r\n    if(block.shortcuts) {\r\n        block.shortcuts.forEach(s => {\r\n            if(!s.block) {\r\n                throw new Error(`Shortcut in ${block.name} requires a \\`block\\` attribute`);\r\n            }\r\n            s.block = getBlock(s.block);\r\n        });\r\n    }\r\n    else {\r\n        block.shortcuts = [];\r\n    }\r\n}\r\n\r\nexport function getBlock(name) {\r\n    if(!name) {\r\n        throw new Error(`Block cannot be ${name}`);\r\n    }\r\n    if(typeof name === 'string') {\r\n        if(!BLOCK_MAP.has(name)) {\r\n            throw new Error(`Block does not exist: ${name}`);\r\n        }\r\n        return BLOCK_MAP.get(name);\r\n    }\r\n    return name;\r\n}","import {literalCategory} from '../block-categories/categories';\r\n\r\nexport function literalBlock(block, type, stringifier) {\r\n    return {\r\n        category: literalCategory,\r\n        topRight: 'value',\r\n        ...block,\r\n        outputs: [...block.outputs || [], {\r\n            key: 'value',\r\n            type,\r\n            control: true,\r\n            toMotoko({value}) {\r\n                if(value === undefined) {\r\n                    return;\r\n                }\r\n                return String(stringifier ? stringifier(value) : value);\r\n            },\r\n        }],\r\n    };\r\n}","import {getBlock} from '../editor/blocks';\r\nimport Rete from 'rete';\r\nimport {getType} from '../block-types/types';\r\n\r\nclass UndefinedInputError extends Error {\r\n    constructor(block, key) {\r\n        super(`${block.name}.${key}`);\r\n    }\r\n}\r\n\r\nexport default class Compiler {\r\n    constructor(editor, compileKey) {\r\n        this.editor = editor;\r\n        this.compileKey = compileKey;\r\n    }\r\n\r\n    // Default value if `[compileKey]` does not exist on block property\r\n    defaultCompile(prop, node, key) {\r\n    }\r\n\r\n    // Post-process results from either `prop[compileKey]` or `defaultCompile(..)`\r\n    postCompile(result, node, key) {\r\n        return result;\r\n    }\r\n\r\n    getNode(node) {\r\n        if(node instanceof Rete.Node) {\r\n            return node;\r\n        }\r\n        if(!node) {\r\n            throw new Error(`Node cannot be ${JSON.stringify(node)}`);\r\n        }\r\n        let id = String(typeof node === 'string' || typeof node === 'number' ? node : node.id);\r\n        node = this.editor.nodes.find(node => String(node.id) === id);\r\n        if(!node) {\r\n            throw new Error(`Node does not exist: ${id}`);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    getBlock(node) {\r\n        node = this.getNode(node);\r\n        return getBlock(node.name);\r\n    }\r\n\r\n    getInput(node, key) {\r\n        node = this.getNode(node);\r\n        let block = this.getBlock(node);\r\n        if(!block.props.hasOwnProperty(key)) {\r\n            throw new Error(`Prop not found on ${node.name}: ${key}`);\r\n        }\r\n        let prop = block.props[key];\r\n        if(prop.input) {\r\n            if(!prop.type.data.reversed) {\r\n                let input = this._input(node, key);\r\n                if(prop.multi) {\r\n                    return input.connections.map(c => this._compileConnection(c, c.input, c.output, 'outputs'));\r\n                }\r\n                if(input.connections.length) {\r\n                    let c = input.connections[0];\r\n                    return this._compileConnection(c, c.input, c.output, 'outputs');\r\n                }\r\n                if(input.control) {\r\n                    return input.control.getValue();\r\n                }\r\n            }\r\n            else {\r\n                let output = this._output(node, key);\r\n                if(prop.multi) {\r\n                    return output.connections.map(c => this._compileConnection(c, c.output, c.input, 'inputs'));\r\n                }\r\n                if(output.connections.length) {\r\n                    let c = output.connections[0];\r\n                    return this._compileConnection(c, c.output, c.input, 'inputs');\r\n                }\r\n            }\r\n        }\r\n\r\n        if(prop.control) {\r\n            let control = this._control(node, prop.key);\r\n            return this.postCompile(control.getValue(), node, key);\r\n        }\r\n    }\r\n\r\n    getOutput(node, key) {\r\n        node = this.getNode(node);\r\n        let prop = this._prop(node, key);\r\n        try {\r\n            let args = this.getInputArgs(node);\r\n            if(!args) {\r\n                return;\r\n            }\r\n            let result;\r\n            if(prop[this.compileKey]) {\r\n                result = prop[this.compileKey](args, node, this);\r\n            }\r\n            else {\r\n                result = this.defaultCompile(prop, node, key);\r\n            }\r\n            return this.postCompile(result, node, key);\r\n        }\r\n        catch(err) {\r\n            if(err instanceof UndefinedInputError) {\r\n                return;\r\n            }\r\n            console.error(`[${node.name}.${key}]`, err);\r\n            this.editor.trigger('warn', `[${node.name}.${key}] ${err}`);\r\n        }\r\n    }\r\n\r\n    getInputArgs(node) {\r\n        node = this.getNode(node);\r\n        let block = this.getBlock(node);\r\n        // if(block.__inputArgs?.[this.compileKey]) {\r\n        //     for(let key in block.__inputCache[this.compileKey]) {\r\n        //         delete block.__inputCache[this.compileKey][key];\r\n        //     }// TODO: proper cache invalidation\r\n        //     return block.__inputArgs[this.compileKey];\r\n        // }\r\n        let args = {};\r\n        for(let prop of Object.values(block.props)) {\r\n            if(prop.input || prop.control) {\r\n                // let value = this.getInput(node, prop.key);\r\n                // if(value === undefined && !prop.optional) {\r\n                //     this.editor.trigger('warn', `Missing input on ${block.name}: ${prop.key}`);\r\n                //     return;\r\n                // }\r\n                // args[prop.key] = value;\r\n\r\n                let cached = false;\r\n                let cachedValue;\r\n\r\n                Object.defineProperty(args, prop.key, {\r\n                    get: () => {\r\n                        // let cache = block.__inputCache[this.compileKey];\r\n                        // if(cache.hasOwnProperty(prop.key)) {\r\n                        //     return cache[prop.key];\r\n                        // }\r\n                        if(cached) {\r\n                            return cachedValue;\r\n                        }\r\n                        let value = this.getInput(node, prop.key);\r\n                        if(value === undefined && !prop.optional) {\r\n                            throw new UndefinedInputError(block, prop.key);\r\n                            // this.editor.trigger('warn', `Missing input on ${block.name}: ${prop.key}`);\r\n                            // return undefined; // Appease linter\r\n                        }\r\n                        // cache[prop.key] = value;\r\n                        cached = true;\r\n                        return value;\r\n                    },\r\n                });\r\n            }\r\n        }\r\n        if(process.env.NODE_ENV !== 'production') {\r\n            // Throw error on missing key\r\n            let target = args;\r\n            args = new Proxy({}, {\r\n                get: (_, key) => {\r\n                    if(!target.hasOwnProperty(key)) {\r\n                        throw new Error(`Unknown input: ${block.name}.${key}`);\r\n                    }\r\n                    return target[key];\r\n                },\r\n            });\r\n        }\r\n        // TODO: refactor caching\r\n        // [block.__inputArgs || (block.__inputArgs = {})][this.compileKey] = args;\r\n        // [block.__inputCache || (block.__inputCache = {})][this.compileKey] = {};\r\n        // this.editor.on('process', ()=>{\r\n        //     for(let key in block.__inputCache) {\r\n        //         delete block.__inputCache[key];\r\n        //     }\r\n        // })///\r\n        return args;\r\n    }\r\n\r\n    // getControl(node, key) {\r\n    //     node = this.getNode(node);\r\n    //     return this._control(node, key).getValue();\r\n    // }\r\n\r\n    getTypeString(type) {\r\n        // console.log('/////', type);///\r\n        type = getType(type);\r\n        return type?.data[this.compileKey]?.(type.generics.map(t => this.getTypeString(t)), this) || type.toTypeString();\r\n    }\r\n\r\n    inferType(node, key) {\r\n        return this.editor.compilers.type.getInput(node, key);\r\n    }\r\n\r\n    _compileConnection(connection, from, to) {\r\n        // let prop = this._prop(to.node, to.key);\r\n        // if(!prop[this.compileKey]) {\r\n        //     throw new Error(`Cannot compile property of ${from.node.name} with key: ${prop.key}`);\r\n        // }\r\n        return this.getOutput(to.node, to.key);\r\n    }\r\n\r\n    _prop(node, key) {\r\n        let block = this.getBlock(node);\r\n        if(!block.props.hasOwnProperty(key)) {\r\n            throw new Error(`Prop does not exist in ${node.name}: ${key}`);\r\n        }\r\n        return block.props[key];\r\n    }\r\n\r\n    _input(node, key) {\r\n        if(!node.inputs.has(key)) {\r\n            throw new Error(`Input not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.inputs.get(key);\r\n    }\r\n\r\n    _output(node, key) {\r\n        if(!node.outputs.has(key)) {\r\n            throw new Error(`Output not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.outputs.get(key);\r\n    }\r\n\r\n    _control(node, key) {\r\n        if(!node.controls.has(key)) {\r\n            throw new Error(`Control not found on ${node.name}: ${key}`);\r\n        }\r\n        return node.controls.get(key);\r\n    }\r\n}","import {capitalCase} from 'change-case';\r\n\r\nexport default function getBlockLabel(block) {\r\n    if(!block) {\r\n        return '';\r\n    }\r\n    return block.title || capitalCase(block.name);\r\n}","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport classNames from 'classnames';\r\n\r\n\r\nexport default function TextControlHandle({control, bindInput, validation: {minLength, maxLength}}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    let invalid = !control.validate(value);\r\n\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className={classNames('w-100', invalid && 'invalid')}\r\n            autoComplete=\"blocks-app\"\r\n            autoCorrect=\"off\"\r\n            ref={bindInput}\r\n            value={value || ''}\r\n            placeholder={control.name}\r\n            minLength={minLength}\r\n            maxLength={maxLength}\r\n            onChange={event => setValue(event.target.value || (control.config.optional && minLength > 0 ? undefined : ''))}\r\n        />\r\n    );\r\n}\r\n","import {sentenceCase} from 'change-case';\r\n\r\nexport default function getDefaultLabel(text) {\r\n    if(!text) {\r\n        return '';\r\n    }\r\n    return sentenceCase(text);\r\n}","import {getBlock} from '../editor/blocks';\r\nimport getBlockLabel from './getBlockLabel';\r\n\r\nexport default function getNodeLabel(node, editor, simplified) {\r\n    let block = getBlock(node.name);\r\n    if(!simplified && block && block.computeTitle) {\r\n        return block.computeTitle(node, editor);\r\n    }\r\n    return getBlockLabel(block);\r\n}","let replaceRegex = /{([0-9]+)}/g;\r\n\r\n\r\nexport function parseCodeBlockInputs(inputs, expression) {\r\n    return (expression || '').replaceAll(replaceRegex, (match, i) => {\r\n        i = +i;\r\n        return i >= 0 && i < inputs.length ? inputs[i] : match;\r\n    });\r\n}\r\n","// Derived from: https://github.com/dfinity/motoko-playground/blob/main/src/config/monacoConfig.js\r\n\r\nexport const configureMonaco = (monaco) => {\r\n    monaco.languages.register({ id: \"motoko\" });\r\n    monaco.languages.setLanguageConfiguration(\"motoko\", {\r\n        comments: {\r\n            lineComment: \"//\",\r\n            blockComment: [\"/*\", \"*/\"],\r\n        },\r\n        brackets: [\r\n            [\"{\", \"}\"],\r\n            [\"[\", \"]\"],\r\n            [\"(\", \")\"],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: \"{\", close: \"}\" },\r\n            { open: \"[\", close: \"]\" },\r\n            { open: \"(\", close: \")\" },\r\n            { open: '\"', close: '\"' },\r\n            { open: \"<\", close: \">\" },\r\n        ],\r\n    });\r\n    monaco.languages.setMonarchTokensProvider(\"motoko\", {\r\n        defaultToken: \"\",\r\n        tokenPostfix: \".mo\",\r\n        // prettier-ignore\r\n        keywords: [\r\n            'actor','and','async','assert','await','break','case','catch','class',\r\n            'continue','debug','else','false','for','func','if','in','import',\r\n            'module','not','null','object','or','label','let','loop','private',\r\n            'public','return','shared','try','throw','debug_show','query','switch',\r\n            'true','type','var','while','stable','flexible','system',\r\n        ],\r\n        accessmodifiers: [\"public\", \"private\", \"shared\"],\r\n        // prettier-ignore\r\n        typeKeywords: [\r\n            'Any','None','Null','Bool','Int','Int8','Int16','Int32','Int64','Nat',\r\n            'Nat8','Nat16','Nat32','Nat64','Word8','Word16','Word32','Word64','Float',\r\n            'Char','Text','Blob','Error','Principal',\r\n        ],\r\n        // prettier-ignore\r\n        operators: [\r\n            '=','<','>',':','<:','?','+','-','*','/','%','**','&','|','^','<<','>>',\r\n            '#','==','!=','>=','<=',':=','+=','-=','*=','/=','%=','**=','&=','|=',\r\n            '^=','<<=','>>=','#=','->',\r\n        ],\r\n        symbols: /[=(){}[\\].,:;@#_&\\-<>`?!+*\\\\/]/,\r\n        // C# style strings\r\n        escapes:\r\n            /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                [\r\n                    /[a-zA-Z_$][\\w$]*/,\r\n                    {\r\n                        cases: {\r\n                            \"@typeKeywords\": \"keyword.type\",\r\n                            \"@keywords\": \"keyword\",\r\n                            \"@default\": \"identifier\",\r\n                        },\r\n                    },\r\n                ],\r\n                // whitespace\r\n                { include: \"@whitespace\" },\r\n\r\n                // delimiters and operators\r\n                [/[{}()[\\]]/, \"@brackets\"],\r\n                [/[<>](?!@symbols)/, \"@brackets\"],\r\n                [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }],\r\n                // numbers\r\n                [/\\d*\\.\\d+([eE][-+]?\\d+)?/, \"number.float\"],\r\n                [/0[xX][0-9a-fA-F_]+/, \"number.hex\"],\r\n                [/[0-9_]+/, \"number\"],\r\n\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, \"delimiter\"],\r\n\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], // non-teminated string\r\n                [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\r\n\r\n                // characters\r\n                [/'[^\\\\']'/, \"string\"],\r\n                [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\r\n                [/'/, \"string.invalid\"],\r\n            ],\r\n\r\n            comment: [\r\n                [/[^/*]+/, \"comment\"],\r\n                [/\\/\\*/, \"comment\", \"@push\"], // nested comment\r\n                [\"\\\\*/\", \"comment\", \"@pop\"],\r\n                [/[/*]/, \"comment\"],\r\n            ],\r\n\r\n            string: [\r\n                [/[^\\\\\"]+/, \"string\"],\r\n                [/@escapes/, \"string.escape\"],\r\n                [/\\\\./, \"string.escape.invalid\"],\r\n                [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }],\r\n            ],\r\n\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, \"white\"],\r\n                [/\\/\\*/, \"comment\", \"@comment\"],\r\n                [/\\/\\/.*$/, \"comment\"],\r\n            ],\r\n        },\r\n    });\r\n};","import MonacoEditor from \"@monaco-editor/react\";\r\nimport {configureMonaco} from '../../config/configureMonaco';\r\n\r\nexport default function CodeEditor({value, onChange, ...others}) {\r\n\r\n    // const monaco = useMonaco();\r\n\r\n    const onEditorChange = (newValue) => {\r\n        onChange?.(newValue);\r\n    };\r\n\r\n    return (\r\n        <MonacoEditor\r\n            // width=\"30vh\"\r\n            // height=\"40vh\"\r\n            theme=\"vs-dark\"\r\n            defaultLanguage=\"motoko\"\r\n            beforeMount={configureMonaco}\r\n            value={value}\r\n            // path={fileName}\r\n            onChange={onEditorChange}\r\n            options={{\r\n                tabSize: 2,\r\n                minimap: {enabled: false},\r\n                wordWrap: 'off',\r\n                // wrappingIndent: 'indent',\r\n                scrollBeyondLastLine: false,\r\n                fontSize: 16,\r\n            }}\r\n            {...others}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport useControlState from '../../../hooks/useControlState';\r\nimport CodeEditor from '../../monaco/CodeEditor';\r\n\r\n\r\nexport default function CodeControlHandle({control, bindInput}) {\r\n    let [value, setValue] = useControlState(control);\r\n\r\n    // let invalid = !control.validate(value);\r\n\r\n    // TODO: syntax highlighting\r\n\r\n    return (\r\n        // <input\r\n        //     type=\"textarea\"\r\n        //     className={classNames('w-100', invalid && 'invalid')}\r\n        //     autoComplete=\"blocks-app\"\r\n        //     autoCorrect=\"off\"\r\n        //     ref={bindInput}\r\n        //     value={value || ''}\r\n        //     placeholder={control.name}\r\n        //     onChange={event => setValue(event.target.value || '')}\r\n        // />\r\n        <div ref={bindInput} style={{height: 150}}>\r\n            <CodeEditor value={value} onChange={setValue}/>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import {useContext, useEffect, useState} from 'react';\r\nimport EventsContext, {ERROR_EVENT} from '../../contexts/EventsContext';\r\n\r\nexport default function Loading({promise, loading, error, children}) {\r\n    let [status, setStatus] = useState('loading');\r\n    let [result, setResult] = useState();\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    useEffect(() => {\r\n        Promise.resolve(promise)\r\n            .then(result => {\r\n                setStatus('success');\r\n                setResult(result);\r\n            })\r\n            .catch(err => {\r\n                setStatus('error');\r\n                setResult(err);\r\n                if(!error) {\r\n                    events.emit(ERROR_EVENT, err);\r\n                }\r\n            });\r\n    }, [promise, error, events]);\r\n\r\n    if(status === 'loading') {\r\n        return loading?.() ?? null;\r\n    }\r\n    if(status === 'error') {\r\n        return error?.(result) ?? null;\r\n    }\r\n    return children?.(result) ?? null;\r\n}","import React, {useContext, useState} from 'react';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../contexts/EventsContext';\r\nimport useListener from '../../../hooks/useListener';\r\nimport Loading from '../../common/Loading';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard/lib/Component';\r\nimport {FaCopy} from 'react-icons/fa';\r\nimport {Button} from 'react-bootstrap';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n\r\nexport default function OutputControlHandle({control, bindInput, query}) {\r\n\r\n    const findValue = async () => {\r\n        try {\r\n            return await query(control, control.getNode(), control.editor);\r\n        }\r\n        catch(err) {\r\n            console.warn(err);\r\n            return `<${err}>`;\r\n        }\r\n    };\r\n\r\n    const [valuePromise, setValuePromise] = useState(findValue);\r\n    const [copied, setCopied] = useState();\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => {\r\n        setValuePromise(findValue());\r\n    });\r\n\r\n    let tooltipRef;\r\n    const showTooltip = () => {\r\n        setCopied(true);\r\n        ReactTooltip.show(tooltipRef);\r\n        setTimeout(() => /*ReactTooltip.hide(tooltipRef)&*/setCopied(false), 1000);\r\n    };\r\n\r\n    useReactTooltip();\r\n\r\n    // TODO: \"Copy to Clipboard\" tooltip\r\n\r\n    return (\r\n        <Loading promise={valuePromise}>\r\n            {value => (value ?? null) && (\r\n                <div className=\"d-flex\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"w-100 small\"\r\n                        readOnly\r\n                        ref={bindInput}\r\n                        value={value || ''}\r\n                    />\r\n                    <CopyToClipboard text={value} /* onCopy={() => setCopied(true)} */ >\r\n                        <Button\r\n                            ref={bindInput}\r\n                            size=\"sm\"\r\n                            variant=\"outline-light\"\r\n                            data-tip={copied ? undefined : 'Copy to Clipboard'}\r\n                            onClick={showTooltip}>\r\n                            <span ref={ref => tooltipRef = ref} data-tip=\"Copied!\"/>\r\n                            <FaCopy/>\r\n                        </Button>\r\n                    </CopyToClipboard>\r\n                </div>\r\n            )}\r\n        </Loading>\r\n    );\r\n}\r\n","import {anyReversedType, anyType} from '../block-types/types';\r\nimport OutputControlHandle from '../components/rete/controls/OutputControlHandle';\r\nimport {compilerCategory} from '../block-categories/categories';\r\nimport {resolveImportRefs} from '../compilers/MotokoCompiler';\r\n\r\nexport function compileBlock(title, compilerKey, displayFn) {\r\n    function queryFor(inputKey) {\r\n        return function(control, node, editor) {\r\n            let value = editor.compilers[compilerKey].getInput(node, inputKey);\r\n            let string = displayFn ? displayFn(value) : value;\r\n            return resolveImportRefs(string);\r\n        };\r\n    }\r\n\r\n    return {\r\n        title,\r\n        category: compilerCategory,\r\n        icon: compilerCategory.data.icon,\r\n        topLeft: 'input',\r\n        topRight: 'reversed',\r\n        inputs: [{\r\n            key: 'input',\r\n            title: 'Input',\r\n            type: anyType,\r\n        }, {\r\n            key: 'reversed',\r\n            title: 'Input',\r\n            type: anyReversedType,\r\n        }],\r\n        controls: [{\r\n            key: 'reversedDisplay',\r\n            title: 'Display',\r\n            config: {\r\n                controlType: OutputControlHandle,\r\n                controlProps: {\r\n                    query: queryFor('reversed'),\r\n                },\r\n            },\r\n        }, {\r\n            key: 'display',\r\n            config: {\r\n                controlType: OutputControlHandle,\r\n                controlProps: {\r\n                    query: queryFor('input'),\r\n                },\r\n            },\r\n        }],\r\n    };\r\n}\r\n","import {asyncType, boolType, effectType, paramType, principalType, unitType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock, visibilityControlProp} from '../block-patterns/member-patterns';\r\nimport {functionCategory} from '../block-categories/categories';\r\nimport {nodeVariableRef} from '../compilers/MotokoCompiler';\r\n\r\nconst defaultReturnType = effectType.of(unitType);\r\n\r\nexport function getFunctionReturnType(node, editor) {\r\n    let type = editor.compilers.type.getInput(node, 'body')?.generics[0];\r\n    let {query, visibility} = editor.compilers.control.getInput(node, 'query');\r\n    if(query || visibility === 'public') {\r\n        type = asyncType.of(type);\r\n    }\r\n    return type;\r\n}\r\n\r\nconst block = memberBlock({\r\n    info: 'Evaluate based on given input parameters',\r\n    category: functionCategory,\r\n    topRight: 'body',\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        // return name;/////\r\n        let params = editor.compilers.motoko.getInput(node, 'params');\r\n        let returnType = getFunctionReturnType(node, editor);\r\n        return name && params && `${name}(${params.join(', ')})${returnType ? ' : ' + editor.compilers.motoko.getTypeString(returnType) : ''}`;\r\n    },\r\n    shortcuts: [{\r\n        block: 'FunctionCall',\r\n        nodeKey: 'functionNode',\r\n    }, {\r\n        block: 'Return',\r\n    }],\r\n    inputs: [{\r\n        key: 'params',\r\n        type: paramType,\r\n        multi: true,\r\n    }/*, {\r\n        key: 'returnType',\r\n        type: typeType.of(valueType),\r\n    }*/, {\r\n        key: 'body',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n    outputs: [{\r\n        //     key: 'reference',\r\n        //     type: referenceType,\r\n        //     toMotoko({name}) {\r\n        //         return name;\r\n        //     },\r\n        // }, {\r\n        key: 'caller',\r\n        type: principalType,\r\n        toMotoko(args, node, compiler) {\r\n            return `${nodeVariableRef(node)}.caller`;\r\n        },\r\n    }],\r\n    controls: [/*{\r\n        key: 'shared',\r\n        type: boolType,\r\n    },*/ /*stringSelectProp({\r\n        key: 'asyncKind',\r\n        optional: true,\r\n    }, ['async', 'query']),*/\r\n        visibilityControlProp(), {\r\n            key: 'query',\r\n            type: boolType,\r\n        }],\r\n}, {\r\n    toMotoko({visibility, query, name, params, body}, node, compiler) {\r\n        let hasCaller = node.outputs.get('caller').connections.length;\r\n\r\n        let asyncKind = query ? 'query' : visibility === 'public' ? 'async' : null;\r\n        let shared = !!hasCaller;\r\n        let modifiers = [visibility !== 'system' && visibility, shared && 'shared'].filter(m => m).join(' ');\r\n\r\n        let returnType = body ? compiler.inferType(node, 'body') : defaultReturnType;\r\n        if(!returnType) {\r\n            return;\r\n        }\r\n        returnType = returnType.generics[0] || unitType; // Unwrap `Effect<>`\r\n        if(asyncKind) {\r\n            returnType = asyncType.of(returnType);\r\n        }\r\n        let returnString = compiler.getTypeString(returnType);\r\n        return [\r\n            modifiers,\r\n            hasCaller ? nodeVariableRef(node) : '',\r\n            query ? 'query ' : '',\r\n            `func${name ? ' ' + name : ''}(${params.join(', ')})${returnString !== '()' ? ` : ${returnString}` : ''}`,\r\n            `{ ${body || ''} };`,\r\n        ];\r\n    },\r\n});\r\nexport default block;\r\n","const examples = [\r\n    require('./files/Echo.blocks.json'),\r\n    require('./files/Counter.blocks.json'),\r\n    require('./files/Calculator.blocks.json'),\r\n    require('./files/WhoAmI.blocks.json'),\r\n    require('./files/PhoneBook.blocks.json'),\r\n    require('./files/ToDoList.blocks.json'),\r\n];\r\n\r\nmodule.exports = {\r\n    getExampleProjects() {\r\n        return examples;\r\n    },\r\n};","var map = {\n\t\"./Actor.js\": 109,\n\t\"./ActorClass.js\": 110,\n\t\"./Add.js\": 111,\n\t\"./And.js\": 112,\n\t\"./ArrayAppend.js\": 113,\n\t\"./ArrayAppended.js\": 114,\n\t\"./ArrayFilter.js\": 115,\n\t\"./ArrayGet.js\": 116,\n\t\"./ArrayMap.js\": 117,\n\t\"./ArrayPrepend.js\": 118,\n\t\"./ArrayPut.js\": 119,\n\t\"./Await.js\": 120,\n\t\"./CodeType.js\": 121,\n\t\"./CodeValue.js\": 122,\n\t\"./CollectionSize.js\": 123,\n\t\"./CompareEqual.js\": 124,\n\t\"./CompareGreater.js\": 125,\n\t\"./CompareGreaterEqual.js\": 126,\n\t\"./CompareLess.js\": 127,\n\t\"./CompareLessEqual.js\": 128,\n\t\"./CompareNotEqual.js\": 129,\n\t\"./CompileMotoko.js\": 130,\n\t\"./CompileType.js\": 133,\n\t\"./Conditional.js\": 134,\n\t\"./ConditionalValue.js\": 135,\n\t\"./Divide.js\": 136,\n\t\"./DivideInt.js\": 137,\n\t\"./Function.js\": 72,\n\t\"./FunctionCall.js\": 138,\n\t\"./LiteralBool.js\": 139,\n\t\"./LiteralCustomType.js\": 140,\n\t\"./LiteralFloat.js\": 141,\n\t\"./LiteralIdentifier.js\": 142,\n\t\"./LiteralInt.js\": 143,\n\t\"./LiteralNat.js\": 144,\n\t\"./LiteralPair.js\": 145,\n\t\"./LiteralPairType.js\": 146,\n\t\"./LiteralText.js\": 147,\n\t\"./LiteralTuple.js\": 148,\n\t\"./LiteralTupleType.js\": 149,\n\t\"./LiteralType.js\": 150,\n\t\"./LoopWhile.js\": 151,\n\t\"./MapGet.js\": 152,\n\t\"./MapPut.js\": 153,\n\t\"./MapRemove.js\": 154,\n\t\"./Multiply.js\": 155,\n\t\"./NewArray.js\": 37,\n\t\"./NewTextHashMap.js\": 156,\n\t\"./Not.js\": 157,\n\t\"./Null.js\": 158,\n\t\"./Optional.js\": 159,\n\t\"./OptionalUnwrap.js\": 160,\n\t\"./Or.js\": 161,\n\t\"./Parameter.js\": 162,\n\t\"./ReferenceImport.js\": 163,\n\t\"./Return.js\": 164,\n\t\"./State.js\": 30,\n\t\"./StateRead.js\": 165,\n\t\"./StateUpdate.js\": 166,\n\t\"./Subtract.js\": 167,\n\t\"./TextConcat.js\": 168,\n\t\"./TextSize.js\": 169,\n\t\"./TypeMember.js\": 170,\n\t\"./TypeMemberReference.js\": 171,\n\t\"./Variable.js\": 172\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 108;","import {actorType, identifierType, memberType} from '../block-types/types';\nimport {actorCategory} from '../block-categories/categories';\n\nconst block = {\n    info: 'An actor which can be deployed as a smart contract',\n    category: actorCategory,\n    topLeft: 'actor',\n    topRight: 'members',\n    global: true,\n    computeTitle(node, editor) {\n        let {name} = editor.compilers.motoko.getInputArgs(node);\n        return name;\n    },\n    inputs: [{\n        key: 'name',\n        type: identifierType,\n        optional: true,\n    }, {\n        key: 'members',\n        type: memberType,\n        multi: true,\n    }],\n    outputs: [{\n        key: 'actor',\n        type: actorType,\n        toMotoko({name, members}) {\n            return `actor${name ? ' ' + name : ''} { ${members.join(' ')} };`;\n        },\n    }],\n};\nexport default block;","import {actorType, identifierType, memberType, paramType, principalType} from '../block-types/types';\nimport {actorCategory} from '../block-categories/categories';\nimport {nodeVariableRef} from '../compilers/MotokoCompiler';\n\n// TODO: subclasses\nlet thisName = 'this';\n\nconst block = {\n    info: 'An object-oriented class of actors',\n    category: actorCategory,\n    topLeft: 'actor',\n    topRight: 'members',\n    global: true,\n    computeTitle(node, editor) {\n        let {name, params} = editor.compilers.motoko.getInputArgs(node);\n        if(!name) {\n            return;\n        }\n        return `${name}(${params.join(', ')})`;\n    },\n    inputs: [{\n        key: 'name',\n        type: identifierType,\n        optional: true,\n    }, {\n        key: 'members',\n        type: memberType,\n        multi: true,\n    }, {\n        key: 'params',\n        type: paramType,\n        multi: true,\n    }],\n    outputs: [{\n        key: 'actor',\n        type: actorType,\n        toMotoko({name, params, members}, node, compiler) {\n            let hasCaller = node.outputs.get('caller').connections.length;\n\n            return `${hasCaller ? `shared (${nodeVariableRef(node)})` : ''}actor class${name ? ' ' + name : ''}(${params.join(', ')}) = ${thisName} { ${members.join(' ')} };`;\n        },\n        // }, {\n        //     key: 'this',\n        //     type: valueType,\n        //     toMotoko({}) {\n        //         return thisName;\n        //     },\n    }, {\n        key: 'caller',\n        type: principalType,\n        toMotoko(args, node, compiler) {\n            return `${nodeVariableRef(node)}.caller`;\n        },\n    }],\n};\nexport default block;","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('+', (a, b) => a + b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(boolType, 'and', (a, b) => a && b);\r\nexport default block;","import {arrayType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {arrayImportRef} from './NewArray';\r\nimport {FaRegCaretSquareRight} from 'react-icons/all';\r\n\r\nconst block = statementBlock({\r\n    title: 'Append (Array)',\r\n    category: collectionCategory,\r\n    icon: FaRegCaretSquareRight,\r\n    inputs: [{\r\n        key: 'array',\r\n        title: 'Array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n    }],\r\n}, ({array, value}) => {\r\n    return `${array} := ${arrayImportRef}.append(${array}, [${value}]);`;\r\n});\r\nexport default block;\r\n","import {arrayType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateWriteIcon} from './State';\r\nimport {arrayImportRef} from './NewArray';\r\n\r\nconst block = {\r\n    title: 'Appended (Array)',\r\n    category: collectionCategory,\r\n    icon: stateWriteIcon,\r\n    topRight: 'result',\r\n    hidden: true,///\r\n    inputs: [{\r\n        key: 'array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'item',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: valueType,\r\n        inferType({array}) {\r\n            if(arrayType.isSubtype(array)) {\r\n                return array.generics[0];\r\n            }\r\n        },\r\n        toMotoko({array, item}) {\r\n            return `${arrayImportRef}.append(${array}, ${item});`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arrayType, boolType, effectType, unitType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {FaLayerGroup} from 'react-icons/all';\r\nimport {nodeVariableRef} from '../compilers/MotokoCompiler';\r\nimport {arrayImportRef} from './NewArray';\r\n\r\nconst block = {\r\n    title: 'Filter Items (Array)',\r\n    category: collectionCategory,\r\n    icon: FaLayerGroup,\r\n    topRight: 'result',\r\n    inputs: [{\r\n        key: 'array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'body',\r\n        title: 'Filter',\r\n        type: effectType.of(boolType),\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: arrayType,\r\n        inferType({array}) {\r\n            return array;\r\n        },\r\n        toMotoko({array, body}, node, compiler) {\r\n            let type = array?.generics[0] || unitType;\r\n            let typeString = compiler.getTypeString(type);\r\n\r\n            return `${arrayImportRef}.filter<${typeString}>(${array}, func (${nodeVariableRef(node)} : ${typeString}) : Bool { ${body} })`;\r\n        },\r\n    }, {\r\n        key: 'item',\r\n        type: valueType,\r\n        inferType({array}) {\r\n            if(arrayType.isSubtype(array)) {\r\n                return array.generics[0];\r\n            }\r\n        },\r\n        toMotoko(_, node, compiler) {\r\n            return nodeVariableRef(node);\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arrayType, natType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateReadIcon} from './State';\r\n\r\nconst block = {\r\n    title: 'Get (Array)',\r\n    category: collectionCategory,\r\n    icon: stateReadIcon,\r\n    topRight: 'value',\r\n    inputs: [{\r\n        key: 'array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'index',\r\n        type: natType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType({array}) {\r\n            if(arrayType.isSubtype(array)) {\r\n                return array.generics[0];\r\n            }\r\n        },\r\n        toMotoko({array, index}) {\r\n            return `${array}[${index}]`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arrayType, effectType, unitType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {FaLayerGroup} from 'react-icons/all';\r\nimport {nodeVariableRef} from '../compilers/MotokoCompiler';\r\nimport {arrayImportRef} from './NewArray';\r\n\r\nconst block = {\r\n    title: 'Replace Items (Array)',\r\n    category: collectionCategory,\r\n    icon: FaLayerGroup,\r\n    topRight: 'body',\r\n    inputs: [{\r\n        key: 'array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'body',\r\n        title: 'Replace',\r\n        type: effectType,\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: arrayType,\r\n        inferType({body}) {\r\n            if(effectType.isSubtype(body)) {\r\n                return arrayType.of(body.generics[0]);\r\n            }\r\n        },\r\n        toMotoko({array, body}, node, compiler) {\r\n            let fromType = array?.generics[0] || unitType;\r\n            let toType = compiler.editor.compilers.type.getInput(node, 'body') || unitType;\r\n\r\n            let fromTypeString = compiler.getTypeString(fromType);\r\n            let toTypeString = compiler.getTypeString(toType);\r\n\r\n            return `${arrayImportRef}.map<${fromTypeString}, ${toTypeString}>(${array}, func (${nodeVariableRef(node)} : ${fromTypeString}) : ${toTypeString} { ${body} })`;\r\n        },\r\n    }, {\r\n        key: 'item',\r\n        type: valueType,\r\n        inferType({array}) {\r\n            if(arrayType.isSubtype(array)) {\r\n                return array.generics[0];\r\n            }\r\n        },\r\n        toMotoko(_, node, compiler) {\r\n            return nodeVariableRef(node);\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arrayType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {arrayImportRef} from './NewArray';\r\nimport {FaRegCaretSquareLeft} from 'react-icons/all';\r\n\r\nconst block = statementBlock({\r\n    title: 'Prepend (Array)',\r\n    category: collectionCategory,\r\n    icon: FaRegCaretSquareLeft,\r\n    inputs: [{\r\n        key: 'array',\r\n        title: 'Array',\r\n        type: arrayType,\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n    }],\r\n}, ({array, value}) => {\r\n    return `${array} := ${arrayImportRef}.append([${value}], ${array});`;\r\n});\r\nexport default block;\r\n","import {mutableArrayType, natType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateWriteIcon} from './State';\r\n\r\nconst block = statementBlock({\r\n    title: 'Put (Array)',\r\n    category: collectionCategory,\r\n    icon: stateWriteIcon,\r\n    inputs: [{\r\n        key: 'array',\r\n        title: 'Array (mutable)',\r\n        type: mutableArrayType,\r\n    }, {\r\n        key: 'index',\r\n        type: natType,\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n    }],\r\n}, ({array, index, value}) => {\r\n    return `${array}.put(${index}, ${value});`;\r\n});\r\nexport default block;\r\n","import {asyncType, valueType} from '../block-types/types';\nimport {operatorCategory} from '../block-categories/categories';\n\nconst block = {\n    title: '(await a)',\n    info: 'Wait for an asynchronous value',\n    category: operatorCategory,\n    topRight: 'result',\n    inputs: [{\n        key: 'input',\n        type: asyncType,\n    }],\n    outputs: [{\n        key: 'result',\n        type: valueType,\n        inferType({input}) {\n            return input.generics[0];\n        },\n        toMotoko({input}) {\n            return `(await ${input})`;\n        },\n    }],\n};\nexport default block;\n","import {parseCodeBlockInputs} from '../block-patterns/code-patterns';\r\nimport {customType, typeType, valueType} from '../block-types/types';\r\nimport {expressionCategory} from '../block-categories/categories';\r\nimport CodeControlHandle from '../components/rete/controls/CodeControlHandle';\r\n\r\nconst block = {\r\n    title: `{ Type }`,\r\n    info: `Compile an arbitrary type`,\r\n    category: expressionCategory,\r\n    icon: expressionCategory.data.icon,\r\n    // topLeft: 'inputs',\r\n    topRight: 'result',\r\n    className: 'node-wide',\r\n    inputs: [{\r\n        key: 'inputs',\r\n        type: typeType,\r\n        multi: true,\r\n    }, {\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: typeType.of(valueType),\r\n        inferType({type}) {\r\n            return type || customType; // TODO: distinct customType\r\n        },\r\n        toMotoko({inputs, expression}) {\r\n            return parseCodeBlockInputs(inputs, expression);\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'expression',\r\n        config: {\r\n            controlType: CodeControlHandle,\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {parseCodeBlockInputs} from '../block-patterns/code-patterns';\r\nimport {anyType, typeType, valueType} from '../block-types/types';\r\nimport {expressionCategory} from '../block-categories/categories';\r\nimport CodeControlHandle from '../components/rete/controls/CodeControlHandle';\r\n\r\nconst block = {\r\n    title: `{ Expression }`,\r\n    info: `Compile an arbitrary expression`,\r\n    category: expressionCategory,\r\n    icon: expressionCategory.data.icon,\r\n    // topLeft: 'inputs',\r\n    topRight: 'result',\r\n    className: 'node-wide',\r\n    inputs: [{\r\n        key: 'inputs',\r\n        type: anyType,\r\n        multi: true,\r\n    }, {\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: valueType,\r\n        inferType({type}) {\r\n            // return parseInputs(inputs, typeCode);\r\n            return type;\r\n        },\r\n        toMotoko({inputs, expression}) {\r\n            return `do { ${parseCodeBlockInputs(inputs, expression)} }`;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'expression',\r\n        config: {\r\n            controlType: CodeControlHandle,\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {mapType, natType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {FaSitemap} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Size (Collection)',\r\n    category: collectionCategory,\r\n    icon: FaSitemap,\r\n    inputs: [{\r\n        key: 'collection',\r\n        type: mapType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: natType,\r\n        toMotoko({map}) {\r\n            return `${map}.size()`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType, valueType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock([valueType, boolType], '==', (a, b) => a === b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('>', (a, b) => a > b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('>=', (a, b) => a >= b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('<', (a, b) => a < b);\r\nexport default block;\r\n","import {numberComparisonOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = numberComparisonOperatorBlock('<=', (a, b) => a <= b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType, valueType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock([valueType, boolType], '!=', (a, b) => a !== b);\r\nexport default block;\r\n","import {compileBlock} from '../block-patterns/compile-patterns';\n\nconst block = compileBlock('Motoko', 'motoko');\nexport default block;\n","import {compileBlock} from '../block-patterns/compile-patterns';\n\nconst block = compileBlock('Type', 'type', type => type?.toTypeString());\nexport default block;\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {boolType, effectType} from '../block-types/types';\r\n\r\nconst block = statementBlock({\r\n    title: 'if() then {} else {}',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'trueCase',\r\n        title: 'True',\r\n        type: effectType,\r\n        optional: true,\r\n    }, {\r\n        key: 'falseCase',\r\n        title: 'False',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n}, ({condition, trueCase, falseCase}) => {\r\n    if(String(condition) === 'true') {\r\n        return trueCase;\r\n    }\r\n    if(String(condition) === 'false') {\r\n        return falseCase;\r\n    }\r\n\r\n    let falsePart = falseCase ? ` else { ${falseCase} }` : '';\r\n    return `if (${condition}) { ${trueCase || ''} }${falsePart};`;\r\n});\r\nexport default block;","import {boolType, valueType} from '../block-types/types';\r\nimport {decompositionCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    title: 'Map Bool',\r\n    category: decompositionCategory,\r\n    topLeft: 'condition',\r\n    topRight: 'result',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'trueCase',\r\n        type: valueType,\r\n    }, {\r\n        key: 'falseCase',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: valueType,\r\n        inferType({trueCase, falseCase}) {\r\n            return trueCase.getSharedType(falseCase);\r\n        },\r\n        toMotoko({condition, trueCase, falseCase}) {\r\n            if(condition === true) {\r\n                return trueCase;\r\n            }\r\n            else if(condition === false) {\r\n                return falseCase;\r\n            }\r\n            return `(if (${condition}) { ${trueCase} } else { ${falseCase} })`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('/', (a, b) => a / b);\r\nexport default block;","import {operatorCategory} from '../block-categories/categories';\r\nimport {intType} from '../block-types/types';\r\nimport {importRef} from '../compilers/MotokoCompiler';\r\n\r\nexport const intImportRef = importRef('mo:base/Int');\r\n\r\nconst block = {\r\n    title: `(a // b)`,\r\n    category: operatorCategory,\r\n    topRight: 'result',\r\n    inputs: [{\r\n        key: 'left',\r\n        title: 'a',\r\n        type: intType,\r\n    }, {\r\n        key: 'right',\r\n        title: 'b',\r\n        type: intType,\r\n    }],\r\n    outputs: [{\r\n        key: 'result',\r\n        type: intType,\r\n        toMotoko({left, right}) {\r\n            return `${intImportRef}.div(${left}, ${right})`;\r\n        },\r\n        // inferType({left, right}) {\r\n        //     return left.getSharedType(right);\r\n        // },\r\n    }],\r\n};\r\nexport default block;","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {nodeType, valueType} from '../block-types/types';\r\nimport {FaPlayCircle} from 'react-icons/fa';\r\nimport {functionCategory} from '../block-categories/categories';\r\nimport {getFunctionReturnType} from './Function';\r\n\r\nconst block = statementBlock({\r\n    info: 'Invoke a function in this project',\r\n    title: 'Call Function',\r\n    category: functionCategory,\r\n    icon: FaPlayCircle,\r\n    computeTitle(node, editor) {\r\n        let functionNode = editor.compilers.node.getInput(node, 'functionNode');\r\n        if(!functionNode) {\r\n            return;\r\n        }\r\n        let name = editor.compilers.motoko.getInput(functionNode, 'name');\r\n        let paramNames = editor.compilers.node.getInput(functionNode, 'params')\r\n            .map(n => editor.compilers.motoko.getInput(n, 'name'));\r\n        return name && `${name}(${paramNames.join(', ')})`;\r\n    },\r\n    inputs: [{\r\n        key: 'args',\r\n        type: valueType,\r\n        multi: true, // TODO: separate arg sockets\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType(_, node, compiler) {\r\n            let functionNode = compiler.editor.compilers.node.getInput(node, 'functionNode');\r\n            if(!functionNode) {\r\n                return;\r\n            }\r\n            return getFunctionReturnType(functionNode, compiler.editor);\r\n        },\r\n        toMotoko({args}, node, compiler) {\r\n            let functionNode = compiler.editor.compilers.node.getInput(node, 'functionNode');\r\n            if(!functionNode) {\r\n                return;\r\n            }\r\n            let name = compiler.getInput(functionNode, 'name');\r\n            if(!name) {\r\n                return;\r\n            }\r\n            return `${name}(${args.join(', ')})`;\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'functionNode',\r\n        type: nodeType.withMeta({block: 'Function'}),\r\n    }],\r\n}, ({functionNode, args}, node, compiler) => {\r\n    let name = compiler.getOutput(functionNode, 'name');\r\n    if(!name) {\r\n        return;\r\n    }\r\n    return `ignore ${name}(${args.join(', ')});`;\r\n});\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Boolean',\r\n}, boolType);\r\nexport default block;","import {typeCategory} from '../block-categories/categories';\r\nimport {customType, referenceType, typeType, valueType} from '../block-types/types';\r\nimport {FaPencilAlt} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Custom Type',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    icon: FaPencilAlt,\r\n    hidden: true,////\r\n    inputs: [{\r\n        key: 'reference',\r\n        type: referenceType,\r\n    }, {\r\n        key: 'generics',\r\n        type: typeType.of(valueType),\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(customType),\r\n        inferType(args, node, compiler) {\r\n            let reference = compiler.editor.compilers.motoko.getInput(node, 'reference');\r\n            let generics = compiler.editor.compilers.type.getInput(node, 'generics');\r\n            if(!reference) {\r\n                return;\r\n            }\r\n            return customType.of(...generics).withMeta({name: reference}); ///\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {floatType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Float',\r\n}, floatType);\r\nexport default block;","import {identifierType} from '../block-types/types';\r\nimport {FaItalic} from 'react-icons/all';\r\n\r\nconst block = {\r\n    title: 'Name',\r\n    // category: defaultCategory,\r\n    icon: FaItalic,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: identifierType,\r\n        control: true,\r\n    }],\r\n};\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {intType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Integer',\r\n}, intType);\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {natType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Natural Number',\r\n}, natType);\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {tupleType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Pair',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && `Pair ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    inputs: [{\r\n        key: 'left',\r\n        title: 'a',\r\n        type: valueType,\r\n    }, {\r\n        key: 'right',\r\n        title: 'b',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: tupleType.of(valueType, valueType),\r\n        inferType({left, right}) {\r\n            return tupleType.of(left, right);\r\n        },\r\n        toMotoko({left, right}) {\r\n            return `(${left}, ${right})`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {tupleType, typeType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Pair of Types',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && editor.compilers.motoko.getTypeString(type);\r\n    },\r\n    inputs: [{\r\n        key: 'left',\r\n        title: 'a',\r\n        type: typeType.of(valueType),\r\n    }, {\r\n        key: 'right',\r\n        title: 'b',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(tupleType.of(valueType, valueType)),\r\n        inferType({left, right}) {\r\n            return /*typeType.of(*/tupleType.of(left, right)/*)*/;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {literalBlock} from '../block-patterns/literal-patterns';\r\nimport {textType} from '../block-types/types';\r\n\r\nconst block = literalBlock({\r\n    title: 'Text',\r\n}, textType, JSON.stringify);\r\nexport default block;\r\n","import {literalCategory} from '../block-categories/categories';\r\nimport {tupleType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Tuple',\r\n    category: literalCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && `Tuple ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    inputs: [{\r\n        key: 'inputs',\r\n        type: valueType,\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: tupleType,\r\n        inferType({inputs}) {\r\n            return tupleType.of(...inputs);\r\n        },\r\n        toMotoko({inputs}) {\r\n            return `(${inputs.join(', ')})`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {tupleType, typeType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Tuple of Types',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && editor.compilers.motoko.getTypeString(type);\r\n    },\r\n    inputs: [{\r\n        key: 'types',\r\n        type: typeType.of(valueType),\r\n        multi: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(tupleType),\r\n        inferType({types}) {\r\n            return /*typeType.of(*/tupleType.of(...types/*.map(t => t.generics[0])*/)/*)*/; // Unwrap Type<?> inputs\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {typeCategory} from '../block-categories/categories';\r\nimport {typeType, valueType} from '../block-types/types';\r\n\r\nconst block = {\r\n    title: 'Type',\r\n    category: typeCategory,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: typeType.of(valueType),\r\n        control: true,\r\n        inferType({value}) {\r\n            // return typeType.of(value);\r\n            return value;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {boolType, effectType} from '../block-types/types';\r\n\r\nconst block = statementBlock({\r\n    title: 'while() {}',\r\n    info: 'Repeat while the condition is true',\r\n    inputs: [{\r\n        key: 'condition',\r\n        type: boolType,\r\n    }, {\r\n        key: 'loop',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n}, ({condition, loop}) => {\r\n    return `while (${condition}) { ${loop ?? ''} };`;\r\n});\r\nexport default block;","import {mapType, optionalType, valueType} from '../block-types/types';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateReadIcon} from './State';\r\n\r\nconst block = {\r\n    title: 'Get (Map)',\r\n    category: collectionCategory,\r\n    icon: stateReadIcon,\r\n    topRight: 'value',\r\n    inputs: [{\r\n        key: 'map',\r\n        type: mapType,\r\n    }, {\r\n        key: 'key',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: optionalType.of(valueType),\r\n        inferType({map}) {\r\n            if(mapType.isSubtype(map)) {\r\n                return optionalType.of(map.generics[1]);\r\n            }\r\n        },\r\n        toMotoko({map, key}) {\r\n            return `${map}.get(${key})`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {mapType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {stateWriteIcon} from './State';\r\n\r\nconst block = statementBlock({\r\n    title: 'Put (Map)',\r\n    category: collectionCategory,\r\n    icon: stateWriteIcon,\r\n    inputs: [{\r\n        key: 'map',\r\n        type: mapType,\r\n    }, {\r\n        key: 'key',\r\n        type: valueType,\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n    }],\r\n}, ({map, key, value}) => {\r\n    return `${map}.put(${key}, ${value});`;\r\n});\r\nexport default block;\r\n","import {mapType, valueType} from '../block-types/types';\r\nimport {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {collectionCategory} from '../block-categories/categories';\r\nimport {FaCompress} from 'react-icons/all';\r\n\r\nconst block = statementBlock({\r\n    title: 'Remove (Map)',\r\n    category: collectionCategory,\r\n    icon: FaCompress,\r\n    inputs: [{\r\n        key: 'map',\r\n        type: mapType,\r\n    }, {\r\n        key: 'key',\r\n        type: valueType,\r\n    }],\r\n}, ({map, key}) => {\r\n    return `${map}.remove(${key});`;\r\n});\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {floatType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(floatType, '*', (a, b) => a * b);\r\nexport default block;","import {mapType, textType, typeType, valueType} from '../block-types/types';\r\nimport {importRef} from '../compilers/MotokoCompiler';\r\nimport {collectionCategory} from '../block-categories/categories';\r\n\r\nexport const hashMapImportRef = importRef('mo:base/HashMap');\r\nexport const textImportRef = importRef('mo:base/Text');\r\n\r\nconst block = {\r\n    title: 'Create Map',\r\n    category: collectionCategory,\r\n    icon: collectionCategory.data.icon,\r\n    topRight: 'value',\r\n    computeTitle(node, editor) {\r\n        let type = editor.compilers.type.getOutput(node, 'value');//?.generics[0];\r\n        return type && `new HashMap<${editor.compilers.motoko.getTypeString(type.generics[0])}, ${editor.compilers.motoko.getTypeString(type.generics[1])}>`;\r\n    },\r\n    inputs: [{\r\n        key: 'keyType',\r\n        type: typeType.of(textType), // TODO: other key types\r\n    }, {\r\n        key: 'valueType',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: mapType,\r\n        inferType({valueType}) {\r\n            return mapType.of(textType, valueType);\r\n        },\r\n        toMotoko(args, node, compiler) {\r\n            let {valueType} = compiler.editor.compilers.type.getInputArgs(node);\r\n            let valueTypeString = compiler.getTypeString(valueType);\r\n            return `${hashMapImportRef}.HashMap<Text, ${valueTypeString}>(0, ${textImportRef}.equal, ${textImportRef}.hash)`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {unaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = unaryOperatorBlock(boolType, 'not', (a) => !a);\r\nexport default block;\r\n","import {nullType} from '../block-types/types';\r\nimport {literalCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    category: literalCategory,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: nullType,\r\n        toMotoko() {\r\n            return `null`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {optionalType, valueType} from '../block-types/types';\nimport {operatorCategory} from '../block-categories/categories';\n\nconst block = {\n    title: 'Wrap Optional (?a)',\n    info: 'Create an optional version of the input value',\n    category: operatorCategory,\n    // topRight: 'result',\n    inputs: [{\n        key: 'input',\n        title: 'Value',\n        type: valueType,\n    }],\n    outputs: [{\n        key: 'result',\n        type: optionalType,\n        inferType({input}) {\n            return optionalType.of(input);\n        },\n        toMotoko({input}) {\n            return `(?${input})`;\n        },\n    }, {\n        key: 'null',\n        type: optionalType,\n        inferType({input}) {\n            return optionalType.of(input);\n        },\n        toMotoko({input}) {\n            return `null`;\n        },\n    }],\n};\nexport default block;\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {effectType, optionalType, valueType} from '../block-types/types';\r\nimport {decompositionCategory} from '../block-categories/categories';\r\nimport {nodeVariableRef} from '../compilers/MotokoCompiler';\r\n\r\nconst block = statementBlock({\r\n    title: 'Unwrap Optional',\r\n    info: 'Run different logic depending on whether an Optional value is null',\r\n    category: decompositionCategory,\r\n    inputs: [{\r\n        key: 'input',\r\n        type: optionalType,\r\n    }, {\r\n        key: 'valueCase',\r\n        title: 'Value',\r\n        type: effectType,\r\n        optional: true,\r\n    }, {\r\n        key: 'nullCase',\r\n        title: 'Null',\r\n        type: effectType,\r\n        optional: true,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType({input}) {\r\n            return input;\r\n        },\r\n        toMotoko({input}, node) {\r\n            return nodeVariableRef(node);\r\n        },\r\n    }],\r\n}, ({input, valueCase, nullCase}, node) => {\r\n    if(String(input) === 'null') {\r\n        return nullCase;\r\n    }\r\n\r\n    let valuePart = valueCase ? `case (?${nodeVariableRef(node)}) {${valueCase}};` : '';\r\n    let nullPart = nullCase ? `case null {${nullCase}};` : '';\r\n\r\n    return `switch (${input}) { ${valuePart}${nullPart && ' ' + nullPart} };`;\r\n});\r\nexport default block;","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {boolType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(boolType, 'or', (a, b) => a || b);\r\nexport default block;\r\n","import {identifierType, paramType, typeType, valueType} from '../block-types/types';\r\nimport {paramCategory} from '../block-categories/categories';\r\n\r\nconst block = {\r\n    info: 'An input parameter to a class or function',\r\n    topLeft: 'param',\r\n    topRight: 'value',\r\n    category: paramCategory,\r\n    computeTitle(node, editor) {\r\n        let name = editor.compilers.motoko.getInput(node, 'name');\r\n        let type = editor.compilers.type.getInput(node, 'type');\r\n        return name && `${name} : ${type ? editor.compilers.motoko.getTypeString(type) : 'Any'}`;\r\n    },\r\n    inputs: [{\r\n        key: 'name',\r\n        type: identifierType,\r\n    }, {\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'param',\r\n        type: paramType,\r\n        toMotoko({name, type}, node, compiler) {\r\n            // console.log(type)//\r\n            let typeString = compiler.getTypeString(type) || 'Any';\r\n            return `${name} : ${typeString}`;\r\n        },\r\n    }, {\r\n        key: 'value',\r\n        type: valueType,\r\n        toMotoko({name}) {\r\n            return name;\r\n        },\r\n        inferType({type}) {\r\n            return type;\r\n        },\r\n    }],\r\n};\r\nexport default block;","import {referenceType, textType} from '../block-types/types';\r\nimport {FaItalic} from 'react-icons/all';\r\nimport {importRef} from '../compilers/MotokoCompiler';\r\n\r\nconst block = {\r\n    title: 'Import Reference',\r\n    // category: defaultCategory,\r\n    icon: FaItalic,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: referenceType,\r\n        toMotoko({path}) {\r\n            return importRef(path);\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'path',\r\n        type: textType,\r\n        config: {\r\n            validation: {\r\n                minLength: 1,\r\n            },\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {effectType, unitType, valueType} from '../block-types/types';\r\nimport {endStatementBlock} from '../block-patterns/statement-patterns';\r\nimport {functionCategory} from '../block-categories/categories';\r\nimport {FaCaretLeft} from 'react-icons/fa';\r\n\r\nconst block = endStatementBlock({\r\n    info: 'End a function\\'s execution path',\r\n    category: functionCategory,\r\n    icon: FaCaretLeft,\r\n    inputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        optional: true,\r\n    }],\r\n    // controls: [{\r\n    //     key: 'functionNode',\r\n    //     config: {\r\n    //         controlType: NodeControlHandle,\r\n    //         controlProps: {\r\n    //             component: 'Function',\r\n    //         },\r\n    //     },\r\n    // }],\r\n}, {\r\n    inferType({value}) {\r\n        return effectType.of(value || unitType);\r\n    },\r\n    toMotoko({value}) {\r\n        return `return${value ? ' ' + value : ''};`;\r\n    },\r\n});\r\nexport default block;","import {nodeType, valueType} from '../block-types/types';\r\nimport {stateCategory} from '../block-categories/categories';\r\nimport {stateReadIcon} from './State';\r\n\r\nconst block = {\r\n    title: 'Read State',\r\n    category: stateCategory,\r\n    icon: stateReadIcon,\r\n    topRight: 'value',\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType(args, node, compiler) {\r\n            let stateNode = compiler.editor.compilers.node.getInput(node, 'stateNode');\r\n            if(!stateNode) {\r\n                return;\r\n            }\r\n            return compiler.getInput(stateNode, 'initialValue');\r\n        },\r\n        toMotoko(args, node, compiler) {\r\n            let stateNode = compiler.editor.compilers.node.getInput(node, 'stateNode');\r\n            if(!stateNode) {\r\n                return;\r\n            }\r\n            return compiler.getInput(stateNode, 'name');\r\n        },\r\n    }],\r\n    controls: [{\r\n        key: 'stateNode',\r\n        type: nodeType.withMeta({block: 'State'}),\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {stateCategory} from '../block-categories/categories';\r\nimport {nodeType} from '../block-types/types';\r\nimport {stateWriteIcon} from './State';\r\n\r\nconst block = statementBlock({\r\n    title: 'Write State',\r\n    category: stateCategory,\r\n    icon: stateWriteIcon,\r\n    inputs: [{\r\n        key: 'value',\r\n        type: 'Value',\r\n        // optional: true,\r\n    }],\r\n    // outputs: [{\r\n    //     key: 'newValue',\r\n    //     type: 'Value',\r\n    //     toMotoko({node: stateNode, value}, node, compiler) {\r\n    //         let name = compiler.getOutput(stateNode, 'name');\r\n    //         if(!name) {\r\n    //             return;\r\n    //         }\r\n    //         return `(${name} := ${value || '()'})`;\r\n    //     },\r\n    // }],\r\n    controls: [{\r\n        key: 'stateNode',\r\n        type: nodeType.withMeta({block: 'State'}),\r\n    }],\r\n}, ({stateNode, value}, node, compiler) => {\r\n    let name = compiler.getInput(stateNode, 'name');\r\n    if(!name) {\r\n        return;\r\n    }\r\n    return `${name} := ${value};`;\r\n});\r\nexport default block;\r\n","import {arithmeticOperatorBlock} from '../block-patterns/operator-patterns';\r\n\r\nconst block = arithmeticOperatorBlock('-', (a, b) => a - b);\r\nexport default block;\r\n","import {binaryOperatorBlock} from '../block-patterns/operator-patterns';\r\nimport {textType} from '../block-types/types';\r\n\r\nconst block = binaryOperatorBlock(textType, '#', (a, b) => a || b);\r\nexport default block;\r\n","import {natType, textType} from '../block-types/types';\r\nimport {FaSitemap} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Length (Text)',\r\n    // category: textCategory,\r\n    icon: FaSitemap,\r\n    inputs: [{\r\n        key: 'text',\r\n        type: textType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: natType,\r\n        toMotoko({text}) {\r\n            return `${text}.size()`;\r\n        },\r\n    }],\r\n};\r\nexport default block;\r\n","import {typeType, valueType} from '../block-types/types';\r\nimport {computeMemberName, memberBlock, visibilityControlProp} from '../block-patterns/member-patterns';\r\nimport {typeCategory} from '../block-categories/categories';\r\n\r\nconst block = memberBlock({\r\n    title: 'Named Type',\r\n    info: 'An actor-level type definition',\r\n    category: typeCategory,\r\n    topRight: 'type',\r\n    shortcuts: [{\r\n        block: 'TypeMemberReference',\r\n        nodeKey: 'typeNode',\r\n    }],\r\n    computeTitle(node, editor) {\r\n        let name = computeMemberName(node, editor);\r\n        let type = editor.compilers.type.getInput(node, 'typeInput');//?.generics[0];\r\n        return type && `${name || '(?)'} = ${editor.compilers.motoko.getTypeString(type)}`;\r\n    },\r\n    inputs: [{\r\n        key: 'typeInput',\r\n        title: 'Definition',\r\n        type: typeType.of(valueType),\r\n    }],\r\n    outputs: [{\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n        inferType({name, typeInput}) {\r\n            if(!typeInput.isAbstract()) {\r\n                // return typeType.of(typeInput);\r\n                return typeInput.withMeta({name});///\r\n            }\r\n        },\r\n        // toMotoko({name}) {\r\n        //     return name;\r\n        // },\r\n    }],\r\n    controls: [\r\n        visibilityControlProp(),\r\n    ],\r\n}, {\r\n    toMotoko({visibility, name, typeInput}) {\r\n        let modifiers = [visibility !== 'system' && visibility].filter(m => m).join(' ');\r\n\r\n        return `${modifiers && modifiers + ' '}type ${name} = ${typeInput};`;\r\n    },\r\n});\r\nexport default block;\r\n","import {nodeType, typeType, valueType} from '../block-types/types';\r\nimport {typeCategory} from '../block-categories/categories';\r\nimport {FaAngleRight} from 'react-icons/fa';\r\n\r\nconst block = {\r\n    title: 'Type Reference',\r\n    category: typeCategory,\r\n    icon: FaAngleRight,\r\n    topRight: 'type',\r\n    computeTitle(node, editor) {\r\n        let typeNode = editor.compilers.node.getInput(node, 'typeNode');\r\n        console.log(typeNode);\r\n        if(!typeNode) {\r\n            return;\r\n        }\r\n        return editor.compilers.motoko.getInput(typeNode, 'name');\r\n    },\r\n    outputs: [{\r\n        key: 'type',\r\n        type: typeType.of(valueType),\r\n        inferType(args, node, compiler) {\r\n            let typeNode = compiler.editor.compilers.node.getInput(node, 'typeNode');\r\n            if(!typeNode) {\r\n                return;\r\n            }\r\n            return compiler.editor.compilers.types.getInput(typeNode, 'type');\r\n        },\r\n        // toMotoko({name}) {\r\n        //     return name;\r\n        // },\r\n    }],\r\n    controls: [{\r\n        key: 'typeNode',\r\n        type: nodeType.withMeta({block: 'TypeMember'}),\r\n    }],\r\n};\r\nexport default block;\r\n","import {statementBlock} from '../block-patterns/statement-patterns';\r\nimport {identifierType, valueType} from '../block-types/types';\r\nimport {paramCategory} from '../block-categories/categories';\r\nimport {nodeVariableRef} from '../compilers/MotokoCompiler';\r\n\r\nconst block = statementBlock({\r\n    title: 'Local Variable',\r\n    info: 'Store and retrieve data from within a function',\r\n    category: paramCategory,\r\n    inputs: [{\r\n        key: 'name',\r\n        type: identifierType,\r\n        optional: true,\r\n    }, {\r\n        key: 'initialValue',\r\n        type: valueType,\r\n    }],\r\n    outputs: [{\r\n        key: 'value',\r\n        type: valueType,\r\n        inferType({initialValue}) {\r\n            return initialValue;\r\n        },\r\n        toMotoko({name}, node) {\r\n            return name || nodeVariableRef(node);\r\n        },\r\n    }],\r\n}, ({name, initialValue}, node) => {\r\n    return `var ${name || nodeVariableRef(node)} = ${initialValue};`;\r\n});\r\nexport default block;","import React, {useMemo, useCallback} from 'react';\r\n\r\nexport default function ContextMenu({x, y, children, style: styleProp, handleCloseMenu, ...others}) {\r\n\r\n    const style = useMemo(() => ({\r\n        position: 'absolute',\r\n        left: x,\r\n        top: y,\r\n        ...styleProp,\r\n    }), [x, y, styleProp]);\r\n\r\n    const bindScreen = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        const listener = event => event.stopPropagation();\r\n        el.addEventListener('pointermove', listener);\r\n        el.addEventListener('mousemove', listener);\r\n        el.addEventListener('wheel', listener);\r\n    }, []);\r\n\r\n    const bindContainer = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        const moveIntoWindow = () => {\r\n            let offset = el.getBoundingClientRect().bottom - window.innerHeight;\r\n            if(offset > 0) {\r\n                el.style.top = `${y - offset}px`;\r\n            }\r\n        };\r\n        moveIntoWindow();\r\n        el.onresize = moveIntoWindow;\r\n    }, [y]);\r\n\r\n    return (\r\n        <div\r\n            className=\"context-menu-screen\"\r\n            style={{position: 'absolute', top: 0, left: 0, bottom: 0, right: 0, pointerEvents: 'all'}}\r\n            ref={bindScreen}\r\n            onKeyDown={e => e.keyCode === 27 /* escape */ && handleCloseMenu()}\r\n            onMouseDown={() => handleCloseMenu()}\r\n            {...others}>\r\n            <div className=\"context-menu-container\" style={style} ref={bindContainer}>\r\n                <div className=\"context-menu\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const MenuContext = React.createContext(null);\r\n","export default function MenuIcon({children, color}) {\r\n    return (\r\n        <span className=\"context-menu-icon\" style={{color}}>{children}</span>\r\n    );\r\n}","import classNames from 'classnames';\r\nimport MenuIcon from './MenuIcon';\r\n\r\nexport default function MenuAction({icon, color, selected, onAction, children, style, ...others}) {\r\n    return (\r\n        <div\r\n            className={classNames('context-menu-action', selected && 'selected')}\r\n            style={{color, userSelect: 'none', ...style}}\r\n            onMouseDown={event => event.button === 0 && onAction(event)} {...others}>\r\n            {icon && <MenuIcon>{icon}</MenuIcon>}\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React, {useContext} from 'react';\r\nimport MenuAction from '../MenuAction';\r\nimport {MenuContext} from '../../contexts/MenuContext';\r\n\r\n\r\nexport default function SelectionMenu() {\r\n\r\n    const {editor} = useContext(MenuContext);\r\n\r\n    return (\r\n        <>\r\n            <MenuAction onAction={() => editor.selected.each(node => editor.removeNode(node))}>Delete</MenuAction>\r\n            {/*<MenuOption>Clone</MenuOption>*/}\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport MenuAction from './MenuAction';\r\nimport {FaRegStickyNote} from 'react-icons/fa';\r\nimport getBlockLabel from '../../../utils/getBlockLabel';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\n\r\n\r\nexport default function MenuComponent({component, ...others}) {\r\n    const block = component.block;\r\n    const category = block?.category;\r\n\r\n    useReactTooltip();\r\n    if(block?.info) {\r\n        others = {\r\n            'data-tip': block.info.endsWith('.') ? block.info : `${block.info}.`,\r\n            'data-place': 'right',\r\n            ...others,\r\n        };\r\n    }\r\n\r\n    return (\r\n        <MenuAction\r\n            icon={React.createElement(block?.icon || category?.data.icon || FaRegStickyNote)}\r\n            color={category?.data.color}\r\n            {...others}>\r\n            {getBlockLabel(block) || component.name}\r\n        </MenuAction>\r\n    );\r\n}","import {useCallback} from 'react';\r\n\r\nexport default function MenuSearch({value, onChange, onAction, onKeyDown, children, ...others}) {\r\n\r\n    const bindInput = useCallback(el => {\r\n        if(!el) {\r\n            return;\r\n        }\r\n        el.focus();\r\n        // el.select();\r\n    }, [{}/* Force redraw in order to refocus */]); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n\r\n    const handleKeyDown = (onKeyDown || onAction) && (event => {\r\n        if(onKeyDown) {\r\n            onKeyDown(event);\r\n        }\r\n        if(onAction && event.key === 'Enter') {\r\n            onAction();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                className=\"context-menu-search\"\r\n                autoFocus\r\n                ref={bindInput}\r\n                autoComplete=\"blocks-search\"\r\n                value={value || ''}\r\n                onClick={event => event.stopPropagation()}\r\n                onChange={onChange && (event => onChange(event.target.value))}\r\n                onKeyDown={handleKeyDown}\r\n                {...others}/>\r\n            <div className=\"context-menu-search-area\">\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, {useCallback, useContext, useState} from 'react';\r\nimport MenuComponent from '../MenuComponent';\r\nimport {MenuContext} from '../../contexts/MenuContext';\r\nimport MenuSearch from '../MenuSearch';\r\nimport useEditorComponents from '../../hooks/useEditorComponents';\r\n\r\nfunction deepCopy(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nexport async function createNode(component, {data, meta, position: {x, y} = {}}) {\r\n    const node = await component.createNode(data ? deepCopy(data) : {});\r\n    if(meta) {\r\n        node.meta = Object.assign(deepCopy(meta), node.meta);\r\n    }\r\n    [node.position[0], node.position[1]] = [x, y];\r\n    return node;\r\n}\r\n\r\nfunction findRelevantComponents(input, output, components) {\r\n    if(!input && !output) {\r\n        return components;\r\n    }\r\n    let [inputType, outputType] = [input?.socket.findType?.(), output?.socket.findType?.()];\r\n    // if(!inputType && !outputType) {\r\n    //     return [];\r\n    // }\r\n    if(inputType?.data.reversed || outputType?.data.reversed) {\r\n        [inputType, outputType] = [outputType, inputType];\r\n    }\r\n    return components.filter(c =>\r\n        (!inputType || c.block.outputs.some((prop) => inputType.isSubtype(prop.type) || prop.type.isSubtype(inputType))) &&\r\n        (!outputType || c.block.inputs.some((prop) => outputType.isSubtype(prop.type) || prop.type.isSubtype(outputType))));\r\n}\r\n\r\nexport default function PlacementMenu() {\r\n    let [searchText, setSearchText] = useState('');\r\n    let [index, setIndex] = useState(0);\r\n\r\n    let {editor, mouse, context} = useContext(MenuContext);\r\n\r\n    let components = useEditorComponents(editor, c => [c.block?.category.root.name || '', c.data.title || c.name]);\r\n    if(context) {\r\n        components = findRelevantComponents(context.input, context.output, components);\r\n    }\r\n    else {\r\n        components = components.filter(c => c.block.global);\r\n    }\r\n    index = Math.min(components.length - 1, index);\r\n\r\n    if(searchText) {\r\n        let lower = searchText.toLowerCase();\r\n        components = components.filter(c => c.keywords?.some(k => k.toLowerCase().startsWith(lower)) || c.name.toLowerCase().startsWith(lower));\r\n    }\r\n\r\n    // Arrow keys pressed\r\n    function handleSearchKeyDown(event) {\r\n        if(event.keyCode === 38 /* Up Arrow */) {\r\n            setIndex(Math.max(0, index - 1));\r\n        }\r\n        if(event.keyCode === 40 /* Down Arrow */) {\r\n            setIndex(index + 1);\r\n        }\r\n    }\r\n\r\n    // Enter key pressed\r\n    async function handleSearchAction() {\r\n        if(components.length) {\r\n            await handleCreateNode(components[index]);\r\n        }\r\n    }\r\n\r\n    // Create node from component\r\n    const handleCreateNode = useCallback(async (component) => {\r\n        setSearchText('');\r\n        editor.trigger('hidecontextmenu');\r\n\r\n        const node = await createNode(component, {position: mouse});\r\n        editor.addNode(node);\r\n\r\n        if(context) {\r\n            let {input, output} = context;\r\n            if(input) {\r\n                const output = [...node.outputs.values()].find(output => input.socket.compatibleWith(output.socket));\r\n                if(output) {\r\n                    editor.connect(output, input);\r\n                }\r\n            }\r\n            if(output) {\r\n                const input = [...node.inputs.values()].find(input => input.socket.compatibleWith(output.socket));\r\n                if(input) {\r\n                    editor.connect(output, input);\r\n                }\r\n            }\r\n        }\r\n    }, [editor, mouse, context]);\r\n\r\n    // TODO: create literal blocks when typing numbers, strings, etc.\r\n    let menuItems = components.map((component, i) => (\r\n        <MenuComponent\r\n            key={component.name}\r\n            component={component}\r\n            selected={index === i}\r\n            onAction={() => handleCreateNode(component)}\r\n        />\r\n    ));\r\n    return context ? (\r\n        <MenuSearch\r\n            value={searchText}\r\n            onChange={setSearchText}\r\n            onKeyDown={handleSearchKeyDown}\r\n            onAction={handleSearchAction}>\r\n            {menuItems}\r\n        </MenuSearch>\r\n    ) : menuItems;\r\n}","import {useMemo} from 'react';\r\n\r\nexport default function useEditorComponents(editor, sortFn) {\r\n    const hash = [...editor.components].map(c => c.name).join('##');\r\n\r\n    return useMemo(() => {\r\n        return [...editor.components.values()]\r\n            .filter(c => !c?.block?.hidden)// TODO: refactor?\r\n            .map(v => [sortFn(v), v])\r\n            .sort(([a], [b]) => {\r\n                if(Array.isArray(a)) {\r\n                    for(let i = 0; i < a.length; i++) {\r\n                        let compare = a[i].localeCompare(b[i]);\r\n                        if(compare !== 0) {\r\n                            return compare;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return a.localeCompare(b);\r\n                }\r\n            })\r\n            .map(([, v]) => v);\r\n    }, [hash]); /* eslint-disable-line react-hooks/exhaustive-deps */\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ContextMenu from './components/ContextMenu';\r\nimport {MenuContext} from './contexts/MenuContext';\r\nimport SelectionMenu from './components/menus/SelectionMenu';\r\nimport PlacementMenu from './components/menus/PlacementMenu';\r\nimport Rete from 'rete';\r\n\r\n// Adapted from https://github.com/michael-braun/rete-react-contextmenu-plugin\r\n\r\nfunction install(editor, config = {}) {\r\n    editor.bind('hidecontextmenu');\r\n    editor.bind('showcontextmenu');\r\n\r\n    let [offsetX, offsetY] = config.offset ? [config.offset.x, config.offset.y] : [-10, -10];\r\n\r\n    let menu = null;\r\n\r\n    editor.on('hidecontextmenu', () => {\r\n        if(menu) {\r\n            menu.style.display = 'none';\r\n        }\r\n    });\r\n\r\n    editor.on(['click', 'contextmenu'], () => {\r\n        editor.trigger('hidecontextmenu');\r\n    });\r\n\r\n    editor.on('contextmenu', ({e, node, context}) => {\r\n        e.preventDefault?.();\r\n        // if(e.button === 2) {\r\n        //     return;///\r\n        // }\r\n        e.stopPropagation?.();\r\n\r\n        if(!editor.trigger('showcontextmenu', {e, node, context})) {\r\n            return;\r\n        }\r\n\r\n        // Select node under cursor\r\n        if(node) {\r\n            if(!editor.selected.contains(node)) {\r\n                editor.selectNode(node);\r\n            }\r\n        }\r\n        else {\r\n            // editor.selected.clear();\r\n        }\r\n\r\n        const [x, y] = [e.clientX, e.clientY];\r\n\r\n        if(!menu) {\r\n            menu = document.createElement('div');\r\n            editor.view.container.appendChild(menu);\r\n        }\r\n        menu.style.display = 'block';\r\n        ReactDOM.render((\r\n            <ContextMenu\r\n                x={x + offsetX}\r\n                y={y + offsetY}\r\n                handleCloseMenu={() => editor.trigger('hidecontextmenu')}>\r\n                {/*<AppTooltip/>*/}\r\n                <MenuContext.Provider value={{editor, mouse, node, context}}>\r\n                    {node ? (\r\n                        <SelectionMenu/>\r\n                    ) : (\r\n                        <PlacementMenu/>\r\n                    )}\r\n                </MenuContext.Provider>\r\n            </ContextMenu>\r\n        ), menu);\r\n    });\r\n\r\n    editor.on('destroy', () => {\r\n        editor.trigger('hidecontextmenu');\r\n        if(menu) {\r\n            menu.remove();\r\n            menu = null;\r\n        }\r\n    });\r\n\r\n    let mouse;\r\n    let mouseEvent;\r\n    let connectionMouseMoved = false;\r\n    let removingConnection = false;\r\n\r\n    editor.view.container.addEventListener('pointermove', e => mouseEvent = e);\r\n\r\n    // // Open context menu on left click\r\n    // editor.on('click', e => {\r\n    //     editor.trigger('contextmenu', {e});\r\n    // });\r\n\r\n    editor.on('mousemove', m => {\r\n        mouse = m;\r\n        connectionMouseMoved = true;\r\n    });\r\n\r\n    editor.on('connectionpick', io => {\r\n        connectionMouseMoved = false;\r\n        let prevConnections = [...io.connections];\r\n        setTimeout(() => {\r\n            if(io.connections.length < prevConnections.length) {\r\n                // Connection is being removed\r\n                removingConnection = true;\r\n            }\r\n        });\r\n    });\r\n\r\n    editor.on('connectiondrop', io => {\r\n        if(!connectionMouseMoved) {\r\n            return;\r\n        }\r\n        if(removingConnection) {\r\n            removingConnection = false;\r\n            return;\r\n        }\r\n        let prevConnections = [...io.connections];\r\n        setTimeout(() => {\r\n            // Prevent activating if connections changed\r\n            if(io.connections.length !== prevConnections.length || io.connections.some((conn, i) =>\r\n                (conn.input !== prevConnections[i].input) || (conn.output !== prevConnections[i].output))) {\r\n                return;\r\n            }\r\n            editor.trigger('contextmenu', {\r\n                e: mouseEvent,\r\n                context: {\r\n                    input: io instanceof Rete.Input ? io : null,\r\n                    output: io instanceof Rete.Output ? io : null,\r\n                },\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nconst ContextMenuPlugin = {\r\n    name: 'blocks-contextmenu',\r\n    install,\r\n};\r\nexport default ContextMenuPlugin;\r\n","import React from 'react';\r\nimport {paramCase} from 'change-case';\r\nimport classNames from 'classnames';\r\nimport Rete from 'rete';\r\n\r\n// Adapted from https://github.com/retejs/react-render-plugin/blob/master/src/Socket.jsx\r\n\r\nexport function SocketHandle(props) {\r\n    const {type, socket, innerRef, io} = props;\r\n\r\n    let socketType = socket.findType();\r\n    let reversed = !!socketType.data.reversed;\r\n\r\n    let multiple = io.multipleConnections && (io instanceof Rete.Input) === !reversed;\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'socket',\r\n                type,\r\n                paramCase(socket.name),\r\n                multiple && 'multiple',\r\n                reversed && 'reversed',\r\n                !multiple && io.connections.length && 'occupied',\r\n                'category-' + socketType.data.category,\r\n            )}\r\n            title={socket.name}\r\n            ref={el => el && innerRef(el, type, io)}>\r\n            <div className=\"socket-color w-100 h-100\"/>\r\n        </div>\r\n    );\r\n}","import {useContext, useState} from 'react';\r\nimport EventsContext, {EDITOR_CHANGE_EVENT} from '../../../../contexts/EventsContext';\r\nimport useListener from '../../../../hooks/useListener';\r\nimport useReactTooltip from '../../../../hooks/useReactTooltip';\r\n\r\nexport default function DynamicTitle({editor, node, block, fallback}) {\r\n\r\n    const computeTitle = () => {\r\n        /// untested\r\n        if(editor.silent) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            return block.computeTitle(node, editor);\r\n        }\r\n        catch(err) {\r\n            console.error(`Unable to compute title for node: ${node.name}`);\r\n            console.error(err);\r\n            return '<Error>';\r\n        }\r\n    };\r\n\r\n    const [title, setTitle] = useState(computeTitle);\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, () => setTitle(computeTitle()));\r\n\r\n    const result = title || fallback || null;\r\n\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <span data-tip={result}>{result}</span>\r\n    );\r\n}","import getDefaultLabel from './getDefaultLabel';\r\n\r\nexport default function getPropLabel(prop) {\r\n    if(!prop) {\r\n        return '';\r\n    }\r\n    return prop.title || getDefaultLabel(prop.key);\r\n}","// Enable selecting input fields without dragging node\r\nexport const bindNodeInput = ref => ref && ref.addEventListener('pointerdown', event => event.stopPropagation());\r\n","import React, {useContext} from 'react';\r\nimport {bindNodeInput} from '../../../../utils/bindNodeInput';\r\nimport getBlockLabel from '../../../../utils/getBlockLabel';\r\nimport {Button} from 'react-bootstrap';\r\nimport EventsContext, {ERROR_EVENT} from '../../../../contexts/EventsContext';\r\nimport useReactTooltip from '../../../../hooks/useReactTooltip';\r\n\r\nexport default function ShortcutButton({editor, node, shortcut}) {\r\n    let {block} = shortcut;\r\n    let {category} = block;\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    let onClick = async event => {\r\n        try {\r\n            let component = editor.components.get(block.name);\r\n            if(!component) {\r\n                events.emit(ERROR_EVENT, `Component not found: ${block.name}`);\r\n                return;\r\n            }\r\n            let data = {};\r\n            if(node && shortcut.nodeKey) {\r\n                data[shortcut.nodeKey] = node.id;\r\n            }\r\n            let newNode = await component.createNode(data);\r\n            let {x, y} = editor.view.area.mouse;\r\n            [newNode.position[0], newNode.position[1]] = [x - 80, y - 20];\r\n            editor.addNode(newNode);\r\n\r\n            // Start dragging node\r\n            let nodeView = editor.view.nodes.get(newNode);\r\n            nodeView._drag.down(event);\r\n        }\r\n        catch(err) {\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    };\r\n\r\n    useReactTooltip([block]);\r\n\r\n    return (\r\n        <Button\r\n            ref={bindNodeInput}\r\n            className=\"node-shortcut-button px-1 pt-0 pb-1\"\r\n            data-tip={getBlockLabel(block)}\r\n            data-delay-show={100}\r\n            style={{\r\n                background: 'none',\r\n                color: category.data.color,\r\n                borderColor: category.data.color,\r\n                cursor: 'grab',\r\n                // fontSize: '1em',\r\n            }}\r\n            onMouseDown={onClick}>\r\n            {block.icon\r\n                ? React.createElement(block.icon)\r\n                : getBlockLabel(block)}\r\n        </Button>\r\n    );\r\n}","import React from 'react';\r\nimport {Control, Node} from 'rete-react-render-plugin';\r\nimport {SocketHandle} from '../sockets/SocketHandle';\r\nimport {getBlock} from '../../../editor/blocks';\r\nimport classNames from 'classnames';\r\nimport {paramCase} from 'change-case';\r\nimport DynamicTitle from './parts/DynamicTitle';\r\nimport getNodeLabel from '../../../utils/getNodeLabel';\r\nimport getPropLabel from '../../../utils/getPropLabel';\r\nimport {ButtonGroup} from 'react-bootstrap';\r\nimport ShortcutButton from './parts/ShortcutButton';\r\n\r\nfunction PropHandle({prop, node, hideLeft, hideRight, bindSocket, bindControl}) {\r\n    let input = node.inputs.get(prop.key);\r\n    let output = node.outputs.get(prop.key);\r\n    let control = node.controls.get(prop.key) || (input?.showControl() && input.control);\r\n\r\n    let leftSocket = input && !hideLeft && (\r\n        <SocketHandle\r\n            type=\"input\"\r\n            socket={input.socket}\r\n            io={input}\r\n            innerRef={bindSocket}\r\n        />\r\n    );\r\n    let rightSocket = output && !hideRight && (\r\n        <SocketHandle\r\n            type=\"output\"\r\n            socket={output.socket}\r\n            io={output}\r\n            innerRef={bindSocket}\r\n        />\r\n    );\r\n    let controlField = control && (\r\n        <Control\r\n            className={input ? 'input-control' : 'control'}\r\n            control={control}\r\n            innerRef={bindControl}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className={classNames('prop', 'key-' + paramCase(prop.key))}>\r\n            <div className=\"input\">\r\n                {leftSocket}\r\n                {controlField || (leftSocket && (\r\n                    <div className=\"input-title\">{getPropLabel(prop)}</div>\r\n                ))}\r\n            </div>\r\n            <div className=\"output\">\r\n                {!input && (rightSocket && (\r\n                    <div className=\"output-title\">{getPropLabel(prop)}</div>\r\n                ))}\r\n                {rightSocket}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class NodeHandle extends Node {\r\n    render() {\r\n        let {editor, node, bindSocket, bindControl} = this.props;\r\n        let {selected} = this.state;\r\n\r\n        let block = getBlock(node.name);\r\n\r\n        // Properties for the top left/right corners\r\n        let topLeft = block.topLeft && node.inputs.get(block.topLeft);\r\n        let topRight = block.topRight && node.outputs.get(block.topRight);\r\n\r\n        let title = getNodeLabel(node, editor, true);\r\n        if(block.computeTitle) {\r\n            title = <DynamicTitle editor={editor} node={node} block={block} fallback={title}/>;\r\n        }\r\n\r\n        let getBindControl = prop => (ref, ...args) => {\r\n            let result = bindControl(ref, ...args);\r\n            if(ref) {\r\n                // Custom hover text\r\n                ref.title = getPropLabel(prop);\r\n            }\r\n            return result;\r\n        };\r\n\r\n        return (\r\n            <div className={classNames('node', selected, block.className)}>\r\n                <div className=\"header d-flex\">\r\n                    {topLeft && (\r\n                        <div>\r\n                            <SocketHandle\r\n                                type=\"input\"\r\n                                socket={topLeft.socket}\r\n                                io={topLeft}\r\n                                innerRef={bindSocket}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <div\r\n                        className=\"title d-inline-block flex-grow-1 text-nowrap overflow-hidden\"\r\n                        style={{color: block.category.data.color}}>\r\n                        {block.icon && (\r\n                            // TODO: globally improve react-icons render logic\r\n                            <span className=\"d-inline-block pe-1\" style={{transform: 'translateY(-.1em)'}}>\r\n                                {React.createElement(block.icon)}\r\n                            </span>\r\n                        )}\r\n                        {title}\r\n                    </div>\r\n                    {topRight && (\r\n                        <div>\r\n                            <SocketHandle\r\n                                type=\"output\"\r\n                                socket={topRight.socket}\r\n                                io={topRight}\r\n                                innerRef={bindSocket}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {block.shortcuts.length > 0 && (\r\n                    <ButtonGroup className=\"px-4 py-1 w-100\" style={{background: '#0002'}}>\r\n                        {block.shortcuts.map((shortcut, i) => (\r\n                            <ShortcutButton key={i} editor={editor} node={node} shortcut={shortcut}/>\r\n                        ))}\r\n                    </ButtonGroup>\r\n                )}\r\n                {Object.values(block.props)\r\n                    .filter(prop => !prop.hidden && (prop.control || ((!topLeft || prop.key !== block.topLeft) && (!topRight || prop.key !== block.topRight))))\r\n                    .map(prop => (\r\n                        <PropHandle\r\n                            key={prop.key}\r\n                            prop={prop}\r\n                            node={node}\r\n                            hideLeft={prop.key === block.topLeft}\r\n                            hideRight={prop.key === block.topRight}\r\n                            bindSocket={bindSocket}\r\n                            bindControl={getBindControl(prop)}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as Rete from 'rete';\r\nimport TextControlHandle from '../../components/rete/controls/TextControlHandle';\r\nimport EventEmitter from 'events';\r\nimport {bindNodeInput} from '../../utils/bindNodeInput';\r\n\r\nexport default class BaseControl extends Rete.Control {\r\n    constructor(editor, key, name, config = {}) {\r\n        super(key);\r\n\r\n        this.name = name;\r\n        this.config = config;\r\n        this.editor = editor;\r\n        this.render = 'react';\r\n        this.component = config.controlType || TextControlHandle;\r\n        this.props = {\r\n            ...config.controlProps,\r\n            validation: config.validation || {},\r\n            control: this,\r\n            editor,\r\n            bindInput: bindNodeInput,\r\n        };\r\n\r\n        this.events = new EventEmitter();\r\n    }\r\n\r\n    validate(value) {\r\n        if(value === undefined && !this.config.optional) {\r\n            return false;\r\n        }\r\n        if(value !== null && value !== undefined) {\r\n            let validation = this.config.validation;\r\n            if(validation) {\r\n                if('custom' in validation && !validation.custom(value)) {\r\n                    return false;\r\n                }\r\n                if('minLength' in validation && value.length < validation.minLength) {\r\n                    return false;\r\n                }\r\n                if('maxLength' in validation && value.length > validation.maxLength) {\r\n                    return false;\r\n                }\r\n                if('min' in validation && value < validation.min) {\r\n                    return false;\r\n                }\r\n                if('max' in validation && value > validation.max) {\r\n                    return false;\r\n                }\r\n                if('step' in validation && value - (validation.min || 0) % validation.step !== 0) {\r\n                    return false;\r\n                }\r\n                if('pattern' in validation && !validation.pattern.test(value)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getDefaultValue() {\r\n        // return this.config.defaultValue;\r\n    }\r\n\r\n    getValue() {\r\n        let value = this.getData(this.key);\r\n        return value === undefined ? this.getDefaultValue() : value;\r\n    }\r\n\r\n    setValue(value) {\r\n        this.putData(this.key, value);\r\n        this.events.emit('update', value);\r\n    }\r\n}\r\n","import BaseControl from './BaseControl';\r\n\r\nexport default class PropControl extends BaseControl {\r\n    constructor(editor, prop, name) {\r\n        super(editor, prop.key, name, {\r\n            ...prop.type?.data || {},\r\n            ...prop.config || {},\r\n            prop,\r\n            type: prop.type,\r\n            optional: prop.optional,\r\n        });\r\n    }\r\n\r\n    getDefaultValue() {\r\n        // let value = super.getDefaultValue();\r\n        // return value !== undefined ? value : this.config.type?.getDefaultValue();\r\n\r\n        return this.config.type?.getDefaultValue();\r\n    }\r\n\r\n    // Called every EDITOR_CHANGE_EVENT when control is visible\r\n    notifyEditorChange() {\r\n        // this.config.prop.onUpdateControl?.(this, this.getNode(), this.editor);\r\n    }\r\n}","import Rete from 'rete';\r\n\r\nexport default class BaseComponent extends Rete.Component {\r\n\r\n    getEditorNode(node) {\r\n        return this.editor.nodes.find(n => n.id === node.id);\r\n    }\r\n\r\n    getControls(node) {\r\n        return this.getEditorNode(node).controls;\r\n    }\r\n}","import Rete from 'rete';\r\nimport {getType} from '../../block-types/types';\r\n\r\nexport default class TypeSocket extends Rete.Socket {\r\n    constructor(type) {\r\n        type = getType(type);\r\n        super(type.name, {...type.data, type});\r\n    }\r\n\r\n    findType() {\r\n        return this.data.type;\r\n    }\r\n\r\n    // setType(type) {\r\n    //     this.data.type = type;\r\n    // }\r\n\r\n    compatibleWith(other) {\r\n        if(!('findType' in other)) {\r\n            return false;\r\n        }\r\n        let type = this.findType();\r\n        let otherType = other.findType();\r\n\r\n        return type.isSubtype(otherType) || otherType.isSubtype(type);\r\n    }\r\n}","import TypeSocket from './TypeSocket';\r\nimport {typeType} from '../../block-types/types';\r\n\r\nexport default class PropOutputSocket extends TypeSocket {\r\n    constructor(nodeId, nodeName, prop, typeCompiler) {\r\n        super(prop.type);\r\n\r\n        this.nodeId = nodeId;\r\n        this.nodeName = nodeName;\r\n        this.prop = prop;\r\n        this.typeCompiler = typeCompiler;\r\n\r\n        this._isTypeOfType = typeType.isSubtype(this.prop.type);\r\n    }\r\n\r\n    findType() {\r\n        if(this.typeCompiler.editor.silent) {\r\n            return super.findType();\r\n        }\r\n\r\n        try {\r\n            let type = this.typeCompiler.getOutput(this.nodeId, this.prop.key);\r\n            if(type) {\r\n                if(this._isTypeOfType) {\r\n                    if(typeType.isSubtype(type)) {\r\n                        console.warn('Type of Type of Type (Intentional?)');\r\n                    }\r\n                    type = typeType.of(type);\r\n                }\r\n                return type || super.findType();\r\n            }\r\n        }\r\n        catch(err) {\r\n            console.warn(`Error on socket [${this.nodeName}.${this.prop.key}]:`, err);///\r\n        }\r\n        return super.findType();\r\n    }\r\n\r\n    // compatibleWith(other) {\r\n    //     if(!('findType' in other)) {\r\n    //         return;\r\n    //     }\r\n    //     let reversed = !!this.data.reversed;\r\n    //     if(reversed === !other.data.reversed) {\r\n    //         return false;\r\n    //     }\r\n    //     let self = this;\r\n    //     if(!reversed) {\r\n    //         [self, other] = [other, self];\r\n    //     }\r\n    //     let selfType = self.findType();\r\n    //     let otherType = other.findType();\r\n    //\r\n    //     console.log(selfType, otherType);\r\n    //\r\n    //     return selfType && selfType.isSubtype(otherType);\r\n    // }\r\n}","import Rete from 'rete';\r\nimport PropControl from '../controls/PropControl';\r\nimport BaseComponent from './BaseComponent';\r\nimport TypeSocket from '../sockets/TypeSocket';\r\nimport PropOutputSocket from '../sockets/PropOutputSocket';\r\nimport {sentenceCase} from 'change-case';\r\nimport getPropLabel from '../../utils/getPropLabel';\r\n\r\nexport default class BlockComponent extends BaseComponent {\r\n\r\n    constructor(block) {\r\n        super(block.name);\r\n\r\n        this.block = block;\r\n        this.keywords = [\r\n            ...sentenceCase(block.name).toLowerCase().split(' ').filter(s => s),\r\n            ...block.title?.split(' ').filter(s => s) || [],\r\n            ...block.keywords || [],\r\n        ];\r\n    }\r\n\r\n    async builder(node) {\r\n\r\n        const addProp = (prop, isPropOutput) => {\r\n            let socket = isPropOutput ? new PropOutputSocket(node.id, node.name, prop, this.editor.compilers.type) : new TypeSocket(prop.type);\r\n            if(!!prop.type.data.reversed === isPropOutput) {\r\n                return addPropInput(prop, socket, isPropOutput);\r\n            }\r\n            else {\r\n                return addPropOutput(prop, socket, isPropOutput);\r\n            }\r\n        };\r\n\r\n        const addPropInput = (prop, socket, isOutput) => {\r\n            let title = getPropLabel(prop);\r\n            let input = new Rete.Input(prop.key, title, socket, prop.type.data.reversed || !!prop.multi);\r\n            if(shouldPropHaveControl(prop, socket, isOutput)) {\r\n                input.addControl(new PropControl(this.editor, prop, title));\r\n            }\r\n            node.addInput(input);\r\n            return input;\r\n        };\r\n\r\n        const addPropOutput = (prop, socket, isOutput) => {\r\n            let title = getPropLabel(prop);\r\n            let output = new Rete.Output(prop.key, title, socket, !prop.type.data.reversed || !!prop.multi);\r\n            node.addOutput(output);\r\n            if(shouldPropHaveControl(prop, socket, isOutput)) {\r\n                node.addControl(new PropControl(this.editor, prop, title));\r\n            }\r\n            return output;\r\n        };\r\n\r\n        const shouldPropHaveControl = (prop, socket, isOutput) => {\r\n            return prop.control || (!!socket.data.reversed === isOutput && socket.data.controlType && !prop.multi);\r\n        };\r\n\r\n        delete node.meta.title;\r\n        // if(this.block.title) {\r\n        //     node.meta.title = this.block.title;\r\n        // }\r\n        // else {\r\n        //     delete node.meta.title;\r\n        // }\r\n\r\n        for(let prop of this.block.inputs) {\r\n            addProp(prop, false);\r\n        }\r\n        for(let prop of this.block.outputs) {\r\n            addProp(prop, true);\r\n        }\r\n\r\n        for(let prop of this.block.controls) {\r\n            let title = getPropLabel(prop);\r\n            node.addControl(new PropControl(this.editor, prop, title));\r\n        }\r\n\r\n        // this.block.builder?.apply(this, arguments);\r\n    }\r\n\r\n    // async worker(node, inputs, outputs, ...args) {\r\n    //     await this.block.worker?.apply(this, arguments);\r\n    // }\r\n}","import Compiler from './Compiler';\r\n\r\nexport default class NodeCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'toEditorNode');\r\n    }\r\n\r\n    defaultCompile(prop, node, key) {\r\n        return node;\r\n    }\r\n\r\n    postCompile(result, node, key) {\r\n        if(!result) {\r\n            return;\r\n        }\r\n        let id;\r\n        if(typeof result === 'object') {\r\n            id = result.id;\r\n            if(!id) {\r\n                throw new Error(`Invalid node object with keys: {${Object.keys(result).join(', ')}}`);\r\n            }\r\n        }\r\n        else {\r\n            id = result;\r\n        }\r\n        // Convert node id to string in case of number/string mismatch\r\n        id = String(id);\r\n        return this.editor.nodes.find(n => String(n.id) === id);\r\n    }\r\n}","import Compiler from './Compiler';\r\nimport {getType} from '../block-types/types';\r\n\r\nexport default class TypeCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'inferType');\r\n    }\r\n\r\n    defaultCompile(prop, node, key) {\r\n        return getType(prop.type);\r\n    }\r\n\r\n    postCompile(type, node, key) {\r\n        if(type === undefined) {\r\n            return;\r\n        }\r\n        type = getType(type);\r\n        if(type.isAbstract()) {\r\n            console.warn(`[${node.name}.${key}]`, 'Abstract inferred type:', type.toTypeString());\r\n            return;\r\n        }\r\n        return type;\r\n    }\r\n}","import Compiler from './Compiler';\r\n\r\nexport default class ControlCompiler extends Compiler {\r\n    constructor(editor) {\r\n        super(editor, 'toControl');\r\n    }\r\n\r\n    defaultCompile(prop, node, key) {\r\n    }\r\n\r\n    postCompile(result, node, key) {\r\n        return result;\r\n    }\r\n}","import Rete from 'rete';\r\nimport MotokoCompiler from '../compilers/MotokoCompiler';\r\nimport NodeCompiler from '../compilers/NodeCompiler';\r\nimport TypeCompiler from '../compilers/TypeCompiler';\r\nimport ControlCompiler from '../compilers/ControlCompiler';\r\n\r\nexport default class BlocksNodeEditor extends Rete.NodeEditor {\r\n    constructor(...args) {\r\n        super(...args);\r\n\r\n        this.projectName = '';\r\n        this.projectDescription = '';\r\n        this.compilers = {\r\n            control: new ControlCompiler(this),\r\n            node: new NodeCompiler(this),\r\n            type: new TypeCompiler(this),\r\n            motoko: new MotokoCompiler(this),\r\n        };\r\n    }\r\n\r\n    // noinspection JSCheckFunctionSignatures\r\n    toJSON() {\r\n        let json = {\r\n            name: this.projectName,\r\n            description: this.projectDescription,\r\n            version: this.id,\r\n            ...super.toJSON(),\r\n        };\r\n        delete json.id;\r\n        // noinspection JSValidateTypes\r\n        return json;\r\n    }\r\n\r\n    async fromJSON(json) {\r\n        // noinspection JSUnresolvedVariable\r\n        json = {id: json.version, ...json};\r\n\r\n        if(!this.beforeImport(json)) {\r\n            return false;\r\n        }\r\n        // TODO: refactor serialization\r\n        this.projectName = json.name || '';\r\n        this.projectDescription = json.description || '';\r\n\r\n        let hadError = false;\r\n        try {\r\n            const nodes = {};\r\n            await Promise.all(Object.entries(json.nodes).map(async ([id, jsonNode]) => {\r\n                try {\r\n                    const component = this.getComponent(jsonNode.name);\r\n                    const node = await component.build(Rete.Node.fromJSON(jsonNode));\r\n                    nodes[id] = node;\r\n                    this.addNode(node);\r\n                }\r\n                catch(e) {\r\n                    hadError = true;\r\n                    return this.trigger('error', e);\r\n                }\r\n            }));\r\n\r\n            Object.entries(json.nodes).forEach(([id, jsonNode]) => {\r\n                const node = nodes[id];\r\n\r\n                Object.entries(jsonNode.outputs).forEach(([key, jsonOutput]) => {\r\n\r\n                    jsonOutput.connections.forEach(jsonConnection => {\r\n                        const nodeId = jsonConnection.node;\r\n                        const data = jsonConnection.data;\r\n                        const targetOutput = node.outputs.get(key);\r\n                        const otherNode = nodes[nodeId];\r\n                        if(!otherNode) {\r\n                            hadError = true;\r\n                            return this.trigger('error', `Tried to connect to unknown node ${node.id}`);\r\n                        }\r\n                        const targetInput = otherNode.inputs.get(jsonConnection.input);\r\n\r\n                        if(!targetOutput || !targetInput) {\r\n                            hadError = true;\r\n                            return this.trigger('error', `IO not found for node ${node.id}`);\r\n                        }\r\n\r\n                        this.connect(targetOutput, targetInput, data);\r\n                    });\r\n                });\r\n\r\n            });\r\n        }\r\n        catch(e) {\r\n            this.trigger('warn', e);\r\n            hadError = true;\r\n        }\r\n        return this.afterImport() && !hadError;\r\n    }\r\n}","import Rete from 'rete';\r\n\r\nfunction sortConnections(io) {\r\n    let key = io instanceof Rete.Input ? 'output' : 'input';\r\n    io.connections.sort((a, b) => a[key].node.position[1] - b[key].node.position[1]);\r\n}\r\n\r\nfunction install(editor, config = {}) {\r\n    editor.on('connectioncreated', connection => {\r\n        sortConnections(connection.input);\r\n        sortConnections(connection.output);\r\n    });\r\n    editor.on('nodedragged', (node) => {\r\n        for(let [ioMap, key] of [[node.inputs, 'output'], [node.outputs, 'input']]) {\r\n            for(let io of ioMap.values()) {\r\n                for(let connection of io.connections) {\r\n                    sortConnections(connection[key]);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nconst VerticalSortPlugin = {\r\n    name: 'vertical-sort',\r\n    install,\r\n};\r\nexport default VerticalSortPlugin;","function install(editor, config = {}) {\r\n\r\n    // let currentIO = null;\r\n    //\r\n    // editor.on('connectionpick', (io) => {\r\n    //     currentIO = io;\r\n    // });\r\n    // editor.on('connectiondrop', (io) => {\r\n    //     currentIO = null;\r\n    // });\r\n\r\n    const onKeyDown = (event) => {\r\n        if(event.code === 'Escape') {\r\n            // TODO: implement drop connection without context menu\r\n\r\n            // if(currentIO) {\r\n            //     editor.trigger('connectiondrop', currentIO);\r\n            // }\r\n            // setTimeout(() => editor.trigger('hidecontextmenu'));\r\n        }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    editor.on('destroy', () => document.removeEventListener('keydown', onKeyDown));\r\n}\r\n\r\nconst ConnectionDropPlugin = {\r\n    name: 'connection-drop',\r\n    install,\r\n};\r\nexport default ConnectionDropPlugin;","function install(editor, config = {}) {\r\n\r\n    let {minDistance = 500, opacityFalloff = 200} = config;\r\n\r\n    // Fade out distant connections\r\n    editor.on(['renderconnection', 'updateconnection', 'zoom'], () => {\r\n        setTimeout(() => {\r\n            for(let pathElement of editor.view.container.querySelectorAll('.connection .main-path')) {\r\n                let bounds = pathElement.getBoundingClientRect();\r\n                let distance = bounds.width;\r\n                pathElement.style.opacity = 1 / (1 + Math.sqrt(Math.max(distance - minDistance, 0) / opacityFalloff));\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nconst ConnectionOpacityPlugin = {\r\n    name: 'connection-opacity',\r\n    install,\r\n};\r\nexport default ConnectionOpacityPlugin;","\r\nfunction install(editor, config = {}) {\r\n\r\n    // TODO: implement properly\r\n\r\n    // if(config.editorButton !== undefined) {\r\n    //     let drag = editor.view.area._drag;\r\n    //     drag.button = config.editorButton;\r\n    // }\r\n}\r\n\r\nconst DragButtonPlugin = {\r\n    name: 'drag-button',\r\n    install,\r\n};\r\nexport default DragButtonPlugin;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport classNames from 'classnames';\r\nimport {IconContext} from 'react-icons';\r\n\r\nlet MenuContainer = styled.div`\r\n    \r\n`;\r\n\r\nexport default function TopMenu({className, children, ...others}) {\r\n    return (\r\n        <MenuContainer className={classNames('bg-light text-secondary d-flex py-2 justify-content-start align-items-center', className)} {...others}>\r\n            <IconContext.Provider value={{style: {verticalAlign: 'bottom', transform: 'translateY(-1px)'}}}>\r\n                {children}\r\n            </IconContext.Provider>\r\n        </MenuContainer>\r\n    );\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport styled from 'styled-components';\r\nimport useReactTooltip from '../../../hooks/useReactTooltip';\r\n\r\nlet ItemContainer = styled.div`\r\n\r\n`;\r\n\r\nexport default function MenuItem({variant, tooltip, className, ...others}) {\r\n    useReactTooltip();\r\n\r\n    return (\r\n        <ItemContainer\r\n            className={classNames('noselect h3 mx-3 px-3 pt-2 pb-2 mb-0 d-inline-block text-center', variant && `text-${variant}`, className)}\r\n            data-tip={tooltip}\r\n            {...others}>\r\n        </ItemContainer>\r\n    );\r\n}","import React from 'react';\r\nimport MenuItem from './MenuItem';\r\nimport styled from 'styled-components';\r\n\r\nlet MenuItemStyled = styled(MenuItem)`\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n\r\n  :hover  {\r\n    background: #F0F0F0;\r\n    & > svg {\r\n      fill: url(\"#blocks-icon-gradient\")\r\n    }\r\n  }\r\n`;\r\n\r\nconst hiddenSVGStyle = {\r\n    width: 0,\r\n    height: 0,\r\n    position: \"absolute\"\r\n}\r\n\r\nexport default function MenuButton({children, ...others}) {\r\n    return (\r\n        <MenuItemStyled {...others}>\r\n            <svg style={hiddenSVGStyle} aria-hidden=\"true\" focusable=\"false\">\r\n                <linearGradient id=\"blocks-icon-gradient\" x2=\"1\" y2=\"1\">\r\n                    <stop offset=\"0%\" stopColor=\"#00EFFB\" />\r\n                    <stop offset=\"50%\" stopColor=\"#8649E1\" />\r\n                    <stop offset=\"100%\" stopColor=\"#F900E3\" />\r\n                </linearGradient>\r\n            </svg>\r\n            {children}\r\n        </MenuItemStyled>\r\n    );\r\n}","import React, {useCallback} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport classNames from 'classnames';\r\n\r\nexport default function FileDropZone({options, onFile, onFileContent, className, children, ...others}) {\r\n\r\n    const onDrop = useCallback(files => {\r\n        if(files.length) {\r\n            const file = files[0];\r\n            onFile?.(file);\r\n            if(onFileContent) {\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    onFileContent(e.target.result);\r\n                };\r\n                reader.readAsText(file);\r\n            }\r\n        }\r\n    }, [onFile, onFileContent]);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\r\n        maxFiles: 1,\r\n        onDrop,\r\n        ...options,\r\n    });\r\n\r\n    return (\r\n        <div className={classNames(className, isDragActive && 'dragging')} {...{...others, ...getRootProps()}}>\r\n            <input {...getInputProps()}/>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React, {useContext} from 'react';\nimport EventsContext, {PROJECT_LOAD_EVENT} from '../../contexts/EventsContext';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport {getExampleProjects} from '../../examples/examples';\nimport FileDropZone from '../common/FileDropZone';\n\nconst MenuContainer = styled.div`\n  padding: 20px;\n`;\n\nconst LoadProjectItemContainer = styled.div`\n  :hover {\n    background: #0001;\n  }\n`;\n\nconst FileDropZoneStyled = styled(FileDropZone)`\n  padding: 2em;\n  border: 2px #0005 dashed;\n\n  &.dragging, &:hover {\n    background: #0002;\n  }\n`;\n\nexport default function LoadProjectMenu({onLoadFileContent, className, ...others}) {\n\n    const events = useContext(EventsContext);\n\n    const examples = getExampleProjects();\n\n    return (\n        <MenuContainer className={classNames('bg-light', className)} {...others}>\n            <FileDropZone onFileContent={onLoadFileContent}>\n                <FileDropZoneStyled className={classNames('clickable text-center text-muted rounded-3')}>\n                    <h5>Import a .blocks file . . .</h5>\n                </FileDropZoneStyled>\n            </FileDropZone>\n            {examples.map((example, i) => (\n                <LoadProjectItemContainer\n                    key={i}\n                    className=\"clickable mt-2 px-3 py-2\"\n                    onClick={() => events.emit(PROJECT_LOAD_EVENT, example)}>\n                    <h4 className=\"fw-normal\">{example.name}</h4>\n                    <div className=\"text-muted\">{example.description || '(No description provided)'}</div>\n                </LoadProjectItemContainer>\n            ))}\n        </MenuContainer>\n    );\n}","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDownload(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20,15L20,19C20,19.549 19.549,20 19,20C19,20 5,20 5,20C4.451,20 4,19.549 4,19C4,19 4,15 4,15C4,14.448 3.552,14 3,14C2.448,14 2,14.448 2,15L2,19C2,20.646 3.354,22 5,22L19,22C20.646,22 22,20.646 22,19L22,15C22,14.448 21.552,14 21,14C20.448,14 20,14.448 20,15Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11,12.586L7.707,9.293C7.317,8.903 6.683,8.903 6.293,9.293C5.903,9.683 5.903,10.317 6.293,10.707L11.293,15.707C11.413,15.827 11.556,15.91 11.708,15.957L11.711,15.958C11.795,15.983 11.884,15.998 11.976,16L12,16L12.024,16C12.116,15.998 12.205,15.983 12.289,15.958L12.292,15.957C12.444,15.91 12.587,15.827 12.707,15.707L17.707,10.707C18.097,10.317 18.097,9.683 17.707,9.293C17.317,8.903 16.683,8.903 16.293,9.293L13,12.586L13,3C13,2.448 12.552,2 12,2C11.448,2 11,2.448 11,3L11,12.586Z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDownload);\nexport default __webpack_public_path__ + \"static/media/download.9a79f24e.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFilePlus(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21,8L21,7.988C20.998,7.807 20.947,7.637 20.861,7.492C20.819,7.42 20.767,7.353 20.707,7.293L14.707,1.293C14.647,1.233 14.58,1.181 14.508,1.139C14.362,1.053 14.193,1.002 14.012,1L14,1L6,1C4.354,1 3,2.354 3,4L3,20C3,21.646 4.354,23 6,23L18,23C19.646,23 21,21.646 21,20L21,8ZM13,3L6,3C5.451,3 5,3.451 5,4C5,4 5,20 5,20C5,20.549 5.451,21 6,21C6,21 18,21 18,21C18.549,21 19,20.549 19,20L19,9L14,9C13.448,9 13,8.552 13,8L13,3ZM11,14L9,14C8.448,14 8,14.448 8,15C8,15.552 8.448,16 9,16L11,16L11,18C11,18.552 11.448,19 12,19C12.552,19 13,18.552 13,18L13,16L15,16C15.552,16 16,15.552 16,15C16,14.448 15.552,14 15,14L13,14L13,12C13,11.448 12.552,11 12,11C11.448,11 11,11.448 11,12L11,14ZM15,7L17.586,7L15,4.414L15,7Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilePlus);\nexport default __webpack_public_path__ + \"static/media/file-plus.c3f75220.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFolder(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23,19L23,8C23,6.354 21.646,5 20,5L11.535,5C11.535,5 9.832,2.445 9.832,2.445C9.647,2.167 9.334,2 9,2L4,2C2.354,2 1,3.354 1,5L1,19C1,20.646 2.354,22 4,22L20,22C21.646,22 23,20.646 23,19ZM21,19C21,19.549 20.549,20 20,20C20,20 4,20 4,20C3.451,20 3,19.549 3,19L3,5C3,4.451 3.451,4 4,4C4,4 8.465,4 8.465,4C8.465,4 10.168,6.555 10.168,6.555C10.353,6.833 10.666,7 11,7L20,7C20.549,7 21,7.451 21,8C21,8 21,19 21,19Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolder);\nexport default __webpack_public_path__ + \"static/media/folder.fe3b16f3.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFolderWide(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 30 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Artboard1\",\n    transform: \"matrix(1.25,0,0,1,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 24,\n    height: 24,\n    style: {\n      fill: \"none\"\n    }\n  }), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(0.8,0,0,1,2.4,0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23,19L23,8C23,6.354 21.646,5 20,5L11.535,5C11.535,5 9.832,2.445 9.832,2.445C9.647,2.167 9.334,2 9,2L4,2C2.354,2 1,3.354 1,5C1,5 1,19 1,19C1,20.646 2.354,22 4,22L20,22C21.646,22 23,20.646 23,19ZM21,19C21,19.549 20.549,20 20,20C20,20 4,20 4,20C3.451,20 3,19.549 3,19L3,5C3,4.451 3.451,4 4,4C4,4 8.465,4 8.465,4C8.465,4 10.168,6.555 10.168,6.555C10.353,6.833 10.666,7 11,7L20,7C20.549,7 21,7.451 21,8L21,19Z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolderWide);\nexport default __webpack_public_path__ + \"static/media/folder-wide.231dfb87.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFolderOpen(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 30 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Artboard1\",\n    transform: \"matrix(1.25,0,0,1,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 24,\n    height: 24,\n    style: {\n      fill: \"none\"\n    }\n  }), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"matrix(0.8,0,0,1,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.8,21.747C5.825,21.769 5.851,21.789 5.878,21.809C6.059,21.941 6.27,22.003 6.479,22L6.527,21.998C6.572,21.995 6.617,21.99 6.661,21.981C6.772,21.993 6.885,22 7,22L23,22C23.32,22 23.621,21.847 23.809,21.588L29.597,13.621C29.818,13.317 29.85,12.914 29.679,12.579C29.509,12.244 29.164,12.033 28.788,12.033L25.939,12.033L26,8C26,6.354 24.646,5 23,5L14.535,5C14.535,5 12.832,2.445 12.832,2.445C12.647,2.167 12.334,2 12,2L7,2C5.354,2 4,3.354 4,5C4,5 4,19 4,19C4,20.22 4.745,21.28 5.8,21.747ZM8.428,20L12.763,14.033L26.826,14.033C26.826,14.033 22.49,20 22.49,20L8.428,20ZM23.939,12.033C23.961,10.57 24,7.993 24,7.987C23.993,7.444 23.544,7 23,7L14,7C13.666,7 13.353,6.833 13.168,6.555C13.168,6.555 11.465,4 11.465,4C11.465,4 7,4 7,4C6.451,4 6,4.451 6,5L6,19C6,19.238 6.085,19.457 6.225,19.629L11.445,12.445L11.445,12.445C11.627,12.196 11.922,12.033 12.254,12.033L23.939,12.033Z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolderOpen);\nexport default __webpack_public_path__ + \"static/media/folder-open.81301dea.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSave(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19,22C20.646,22 22,20.646 22,19L22,8C22,7.735 21.895,7.48 21.707,7.293L16.707,2.293C16.52,2.105 16.265,2 16,2L5,2C3.354,2 2,3.354 2,5L2,19C2,20.646 3.354,22 5,22L19,22ZM8,4L8,7L15,7C15.552,7 16,7.448 16,8C16,8.552 15.552,9 15,9L7,9C6.448,9 6,8.552 6,8L6,4L5,4C4.451,4 4,4.451 4,5C4,5 4,19 4,19C4,19.549 4.451,20 5,20L6,20L6,13C6,12.448 6.448,12 7,12L17,12C17.552,12 18,12.448 18,13L18,20L19,20C19.549,20 20,19.549 20,19C20,19 20,8.414 20,8.414C20,8.414 15.586,4 15.586,4L8,4ZM8,20L16,20L16,14C16,14 8,14 8,14L8,20Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSave);\nexport default __webpack_public_path__ + \"static/media/save.5b65bc79.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n\r\nimport {ReactComponent as Download} from \"../../icons/download.svg\";\r\nimport {ReactComponent as FilePlus} from \"../../icons/file-plus.svg\";\r\nimport {ReactComponent as Folder} from \"../../icons/folder.svg\";\r\nimport {ReactComponent as FolderWide} from \"../../icons/folder-wide.svg\";\r\nimport {ReactComponent as FolderOpen} from \"../../icons/folder-open.svg\";\r\nimport {ReactComponent as Save} from \"../../icons/save.svg\";\r\n\r\nconst DEFAULT_ICON_HEIGHT = 24;\r\nconst DEFAULT_FILL = \"rgb(108, 117, 125)\"\r\n\r\n// This isn't super useful yet, but I think we could add some nice stuff with an Icon component.\r\n// If you disagree, feel free to get rid of it.\r\n\r\nexport default function Icon(props) {\r\n    const options = {\r\n        ...props,\r\n        fill: props.fill || DEFAULT_FILL,\r\n        height: props.height || DEFAULT_ICON_HEIGHT\r\n    }\r\n\r\n    // If you know some magic to make this less bad, feel free to do it\r\n    switch(props.name) {\r\n        case \"download\":\r\n            return <Download {...options} />\r\n        case \"file-plus\":\r\n            return <FilePlus {...options} />\r\n        case \"folder\":\r\n            return <Folder {...options} />\r\n        case \"folder-wide\":\r\n            return <FolderWide {...options} />\r\n        case \"folder-open\":\r\n            return <FolderOpen {...options} />\r\n        case \"save\":\r\n            return <Save {...options} />\r\n        default:\r\n            return <Save {...options} />\r\n    }\r\n}","import TopMenu from '../common/menus/TopMenu';\r\nimport MenuButton from '../common/menus/MenuButton';\r\nimport React, {useContext, useState} from 'react';\r\nimport MenuItem from '../common/menus/MenuItem';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport classNames from 'classnames';\r\nimport EventsContext, {\r\n    EDITOR_CHANGE_EVENT,\r\n    EDITOR_SAVE_EVENT,\r\n    PROJECT_CLEAR_EVENT,\r\n    PROJECT_EXPORT_EVENT,\r\n    PROJECT_LOAD_EVENT,\r\n} from '../../contexts/EventsContext';\r\nimport useListener from '../../hooks/useListener';\r\nimport LoadProjectMenu from './LoadProjectMenu';\r\nimport {Modal} from 'react-bootstrap';\r\nimport Icon from \"../common/Icon\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst ProjectNameInput = styled.input`\r\n  background: var(--bs-light-rgb) !important;\r\n  border: 2px solid transparent !important;\r\n  border-bottom: solid 2px #0003 !important;\r\n  font-weight: bold;\r\n  vertical-align: top;\r\n  margin-top: .4em;\r\n  padding: .25em .25em .1em;\r\n  position: relative;\r\n  background-clip: padding-box;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: linear-gradient(30deg, #00EFFB, #8649E1, #F900E3);\r\n    margin: -2px;\r\n    z-index: -1;\r\n    opacity: 0;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n\r\n    &::before {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst saveAnimation = keyframes`\r\n  30% {\r\n    transform: scale(.6);\r\n  }\r\n`;\r\n\r\nconst SaveIcon = styled(Icon)`\r\n  &.animated {\r\n    animation: ${saveAnimation} .8s ease-out;\r\n  }\r\n`;\r\n\r\nexport default function EditorMenu({getEditor, onLoadFileContent}) {\r\n    const [name, setName] = useState('');\r\n    const [saveAnimated, setSaveAnimated] = useState(false); // TODO: possibly generalize to MenuButton\r\n    const [loadMenuOpen, setLoadMenuOpen] = useState(false);\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, EDITOR_SAVE_EVENT, () => {\r\n        setSaveAnimated(true);\r\n    });\r\n\r\n    useListener(events, PROJECT_LOAD_EVENT, project => {\r\n        setName(project.name);\r\n        setLoadMenuOpen(false);\r\n    });\r\n\r\n    /// Temp, until projectName refactor\r\n    setTimeout(() => {\r\n        setName(getEditor().projectName);\r\n    });\r\n\r\n    // TODO refactor\r\n    const updateName = (name) => {\r\n        setName(name);\r\n        let editor = getEditor();\r\n        editor.projectName = name;\r\n        events.emit(EDITOR_CHANGE_EVENT, editor);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TopMenu>\r\n                {/*<Link to=\"/\">*/}\r\n                <MenuItem variant=\"dark\">\r\n                    <img src={`${process.env.PUBLIC_URL}/img/logo-gradient.png`} height=\"48px\" alt=\"Blocks Logo\"/>\r\n                </MenuItem>\r\n                {/*</Link>*/}\r\n                <div className=\"d-flex flex-row justify-content-center align-items-center mx-3\">\r\n                    <ProjectNameInput\r\n                        type=\"text\"\r\n                        placeholder=\"Unnamed Project\"\r\n                        className=\"text-secondary\"\r\n                        value={name || ''}\r\n                        onChange={e => updateName(e.target.value)}\r\n                        onKeyDown={e => e.key === 'Enter' && events.emit(EDITOR_SAVE_EVENT, getEditor())}\r\n                    />\r\n                    <MenuButton\r\n                        tooltip=\"Save Changes\"\r\n                        onMouseDown={() => events.emit(EDITOR_SAVE_EVENT, getEditor())}>\r\n                        <SaveIcon\r\n                            className={classNames(saveAnimated && 'animated')}\r\n                            onAnimationEnd={() => setSaveAnimated(false)}\r\n                        />\r\n                    </MenuButton>\r\n                    <MenuButton\r\n                        tooltip=\"Export to File\"\r\n                        onMouseDown={() => events.emit(PROJECT_EXPORT_EVENT, getEditor().toJSON())}>\r\n                        {/*<FiDownload/>*/}\r\n                        <Icon name=\"download\"/>\r\n                    </MenuButton>\r\n                    <MenuButton onMouseDown={() => events.emit(PROJECT_CLEAR_EVENT)} data-tip=\"New Project\">\r\n                        <Icon name=\"file-plus\"/>\r\n                    </MenuButton>\r\n                    <MenuButton\r\n                        tooltip=\"Load Project\"\r\n                        onMouseDown={() => setLoadMenuOpen(!loadMenuOpen)}>\r\n                        {loadMenuOpen ? <Icon name=\"folder-open\"/> : <Icon name=\"folder-wide\"/>}\r\n                    </MenuButton>\r\n                </div>\r\n            </TopMenu>\r\n            <Modal\r\n                // className=''\r\n                show={loadMenuOpen}\r\n                onShow={() => ReactTooltip.hide()}\r\n                onHide={() => setLoadMenuOpen(false)}>\r\n                <Modal.Body>\r\n                    <LoadProjectMenu onLoadFileContent={onLoadFileContent}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React, {useContext} from 'react';\r\nimport './Editor.scss';\r\nimport AreaPlugin from 'rete-area-plugin';\r\nimport ConnectionPlugin from 'rete-connection-plugin';\r\nimport ContextMenuPlugin from '../../plugins/rete-blocks-contextmenu-plugin';\r\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin';\r\nimport ReactRenderPlugin from 'rete-react-render-plugin';\r\nimport EventsContext, {\r\n    EDITOR_CHANGE_EVENT,\r\n    EDITOR_SAVE_EVENT,\r\n    ERROR_EVENT,\r\n    PROJECT_LOAD_EVENT,\r\n} from '../../contexts/EventsContext';\r\nimport NodeHandle from './nodes/NodeHandle';\r\nimport BlockComponent from '../../editor/components/BlockComponent';\r\nimport {BLOCK_MAP} from '../../editor/blocks';\r\nimport useListener from '../../hooks/useListener';\r\nimport BlocksNodeEditor from '../../editor/BlocksNodeEditor';\r\nimport VerticalSortPlugin from '../../plugins/rete-vertical-sort-plugin';\r\nimport ConnectionDropPlugin from '../../plugins/rete-connection-drop-plugin';\r\nimport ConnectionOpacityPlugin from '../../plugins/rete-connection-opacity-plugin';\r\nimport DragButtonPlugin from '../../plugins/rete-drag-button-plugin';\r\nimport classNames from 'classnames';\r\nimport styled from 'styled-components';\r\nimport EditorMenu from './EditorMenu';\r\nimport FileDropZone from '../common/FileDropZone';\r\n\r\nconst EDITOR_NAME = process.env.REACT_APP_EDITOR_NAME;\r\nconst EDITOR_VERSION = process.env.REACT_APP_EDITOR_VERSION;\r\n\r\nfunction findCategory(socket) {\r\n    return socket.type?./*findType?.()*/data.category ?? socket.data.category ?? 'none';\r\n}\r\n\r\n// noinspection JSCheckFunctionSignatures\r\nfunction createEditor(element) {\r\n\r\n    let editor = new BlocksNodeEditor(EDITOR_NAME + '@' + EDITOR_VERSION, element);\r\n    editor.use(ReactRenderPlugin, {\r\n        component: NodeHandle,\r\n    });\r\n    // editor.use(HistoryPlugin); // TODO: set up undo/redo history\r\n    editor.use(ConnectionPlugin);\r\n    // editor.use(CommentPlugin);\r\n    // editor.use(SelectionPlugin, {\r\n    //     enabled: true,\r\n    // });\r\n    // noinspection JSCheckFunctionSignatures\r\n    editor.use(AutoArrangePlugin);\r\n    // noinspection JSCheckFunctionSignatures\r\n    editor.use(AreaPlugin, {\r\n        background: (() => {\r\n            let background = document.createElement('div');\r\n            background.classList.add('grid');\r\n            background.style.pointerEvents = 'none';\r\n            editor.on('destroy', () => background.remove());\r\n            return background;\r\n        })(),\r\n        snap: {size: 16, dynamic: true},\r\n    });\r\n    editor.use(ContextMenuPlugin);\r\n    editor.use(ConnectionDropPlugin);\r\n    editor.use(ConnectionOpacityPlugin);\r\n    editor.use(VerticalSortPlugin);\r\n    editor.use(DragButtonPlugin, {editorButton: 2});\r\n\r\n    let mouseMoved = false;\r\n    editor.view.container.addEventListener('mousedown', (e) => {\r\n        mouseMoved = false;\r\n    });\r\n    editor.on('mousemove', (e) => {\r\n        mouseMoved = true;\r\n    });\r\n    editor.on('click', ({e}) => {\r\n        // Deselect nodes when clicking background\r\n        if(!mouseMoved) {\r\n            editor.selected.clear();\r\n            editor.nodes.forEach(node => node.update());\r\n        }\r\n    });\r\n\r\n    editor.on('zoom', ({source}) => source !== 'dblclick'); // Prevent double-click zoom\r\n    editor.on('nodeselect', node => !editor.selected.contains(node)); // Allow dragging multiple nodes\r\n    editor.on('renderconnection', ({el, connection}) => {\r\n        // TODO: update with socket type\r\n        // let inputCategory = findCategory(connection.input.socket);\r\n        // let outputCategory = findCategory(connection.output.socket);\r\n        // if(connection.input.socket.data.reversed) {\r\n        //     [inputCategory, outputCategory] = [outputCategory, inputCategory];\r\n        // }\r\n        // el.querySelector('.connection').classList.add(\r\n        //     `socket-input-category-${inputCategory}`,\r\n        //     `socket-output-category-${outputCategory}`,\r\n        // );\r\n        let category = findCategory((connection.input.socket.data.reversed ? connection.input : connection.output).socket);\r\n        el.querySelector('.connection').classList.add(\r\n            `socket-output-category-${category}`,\r\n        );\r\n    });\r\n\r\n    return editor;\r\n}\r\n\r\n\r\nconst EditorContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nexport default function Editor({hideMenu, onSetup, onChange, onSave, className, ...others}) {\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    let editor = null;\r\n\r\n    useListener(events, EDITOR_CHANGE_EVENT, (_editor) => {\r\n        if(_editor === editor) {\r\n            onChange?.(editor);\r\n        }\r\n    });\r\n    useListener(events, EDITOR_SAVE_EVENT, (_editor) => {\r\n        if(_editor === editor) {\r\n            onSave?.(editor.toJSON(), editor);\r\n        }\r\n    });\r\n\r\n    const bindEditor = (element) => {\r\n        if(editor) {\r\n            editor.silent = true;\r\n            editor.clear();\r\n            editor.components.clear();\r\n            editor.destroy();\r\n        }\r\n        if(!element) {\r\n            return;\r\n        }\r\n\r\n        editor = createEditor(element);\r\n\r\n        window.EDITOR = editor; // Browser debugging\r\n\r\n        let onKeyDown = (event) => {\r\n            let key = String.fromCharCode(event.which).toLowerCase();\r\n\r\n            // if(key === 'f') {\r\n            //     editor.trigger('arrange');\r\n            // }\r\n            if(event.ctrlKey || event.metaKey) {\r\n                if(key === 's') {\r\n                    event.preventDefault();\r\n                    events.emit(EDITOR_SAVE_EVENT, editor);\r\n                    console.log('Saved successfully');\r\n                }\r\n            }\r\n        };\r\n        document.addEventListener('keydown', onKeyDown);\r\n        editor.on('destroy', () => document.removeEventListener('keydown', onKeyDown));\r\n\r\n        for(let block of BLOCK_MAP.values()) {\r\n            let node = new BlockComponent(block);\r\n            editor.register(node);\r\n        }\r\n\r\n        let timeout;\r\n        editor.on(['nodecreated', 'noderemoved', 'nodedragged', 'connectioncreated', 'connectionremoved'], async () => {\r\n            if(!editor.silent) {\r\n                // Debounce change events\r\n                clearTimeout(timeout);\r\n                timeout = setTimeout(() => {\r\n                    events.emit(EDITOR_CHANGE_EVENT, editor);\r\n                });\r\n            }\r\n        });\r\n        editor.on('error', err => events.emit(ERROR_EVENT, err));\r\n\r\n        async function loadState(state) {\r\n            if(!state) {\r\n                return false;\r\n            }\r\n            let result = await editor.fromJSON(state);\r\n            if(result) {\r\n                editor.view.resize();\r\n                AreaPlugin.zoomAt(editor);\r\n                events.emit(EDITOR_CHANGE_EVENT, editor);\r\n                editor.nodes.forEach(node => node.update()); // Redraw nodes\r\n            }\r\n            return result;\r\n        }\r\n\r\n        (async () => {\r\n            await onSetup?.(loadState, editor);\r\n        })().catch(err => events.emit(ERROR_EVENT, err));\r\n    };\r\n\r\n    const loadFileContent = content => {\r\n        try {\r\n            let project = JSON.parse(content);\r\n            events.emit(PROJECT_LOAD_EVENT, project);\r\n        }\r\n        catch(err) {\r\n            events.emit(ERROR_EVENT, err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FileDropZone options={{noClick: true}} onFileContent={loadFileContent}>\r\n            <EditorContainer\r\n                className={classNames('node-editor d-flex flex-grow-1 flex-column', className)}\r\n                {...others}>\r\n                {!hideMenu && (\r\n                    <EditorMenu getEditor={() => editor} onLoadFileContent={loadFileContent}/>\r\n                )}\r\n                <div ref={bindEditor}/>\r\n            </EditorContainer>\r\n        </FileDropZone>\r\n    );\r\n}","import Editor from '../../rete/Editor';\r\nimport React, {useContext} from 'react';\r\nimport useListener from '../../../hooks/useListener';\r\nimport EventsContext, {\r\n    PROJECT_CLEAR_EVENT,\r\n    PROJECT_EXPORT_EVENT,\r\n    PROJECT_LOAD_EVENT,\r\n} from '../../../contexts/EventsContext';\r\nimport FileSaver from 'file-saver';\r\nimport {pascalCase} from 'change-case';\r\nimport useRedraw from '../../../hooks/useRedraw';\r\nimport isEmbedded from '../../../utils/isEmbedded';\r\nimport {useParams} from 'react-router-dom';\r\n// import {BlocksEditor} from 'react-blocks-editor';\r\n\r\nconst STORAGE_EDITOR_STATE = 'blocks.editorState';\r\n\r\nconst DEFAULT_STATE = require('../../../examples/files/DefaultProject.json');\r\n\r\nconst embedded = isEmbedded();\r\nconst storage = embedded ? {} : localStorage; // Use temporary storage for iframe\r\n\r\nif(embedded) {\r\n    console.log('Using embedded mode.');\r\n}\r\n\r\nlet nextEditorState;\r\n\r\nexport default function EditorPage() {\r\n    const redraw = useRedraw();\r\n\r\n    const {menu: menuParam} = useParams();\r\n\r\n    const events = useContext(EventsContext);\r\n\r\n    useListener(events, PROJECT_CLEAR_EVENT, () => {\r\n        // TODO: confirmation modal\r\n        // delete storage[STORAGE_EDITOR_STATE];\r\n        nextEditorState = DEFAULT_STATE;\r\n        redraw();\r\n    });\r\n\r\n    useListener(events, PROJECT_LOAD_EVENT, state => {\r\n        // storage[STORAGE_EDITOR_STATE] = JSON.stringify(state);\r\n        nextEditorState = state;///\r\n        redraw();\r\n    });\r\n\r\n    useListener(events, PROJECT_EXPORT_EVENT, state => {\r\n        let data = JSON.stringify(state);\r\n        FileSaver.saveAs(new Blob([data]), `${pascalCase(state.name || 'project')}.blocks`);\r\n    });\r\n\r\n    const onEditorSetup = async (loadState, editor) => {\r\n        let stateString = nextEditorState ? JSON.stringify(nextEditorState) : storage[STORAGE_EDITOR_STATE];\r\n        nextEditorState = null;\r\n\r\n        let state;\r\n        if(stateString) {\r\n            state = JSON.parse(stateString);\r\n        }\r\n        else {\r\n            state = DEFAULT_STATE;\r\n        }\r\n\r\n        if(!await loadState(state)) {\r\n            console.warn('Load error');\r\n        }\r\n    };\r\n\r\n    const onEditorChange = (editor) => {\r\n    };\r\n\r\n    const onEditorSave = (state, editor) => {\r\n        let stateString = JSON.stringify(state);\r\n        storage[STORAGE_EDITOR_STATE] = stateString;\r\n        if(embedded) {\r\n            let message = {\r\n                type: 'save',\r\n                state: stateString,\r\n            };\r\n            console.log('Sending message:', message);\r\n            let targetOrigin = '*'; // TODO: restrict\r\n            window.parent.postMessage(message, targetOrigin);\r\n        }\r\n    };\r\n\r\n    // Remote (iframe) message listener\r\n    useListener(window, 'message', ({source, data}) => {\r\n        if(typeof data === 'string') {\r\n            console.log('Received message:', data);\r\n            data = JSON.parse(data);\r\n            if(data?.type === 'load') {\r\n                nextEditorState = data.state ? JSON.parse(JSON.stringify(data.state)) : DEFAULT_STATE;\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Editor\r\n            hideMenu={menuParam === 'hidden'}\r\n            onSetup={onEditorSetup}\r\n            onChange={onEditorChange}\r\n            onSave={onEditorSave}\r\n        />\r\n        // <BlocksEditor style={{width: '100%', height: '100%'}} options={{menu: 'default'}}>\r\n        //     {({loadState}) => {\r\n        //         let state = require('../../../examples/files/Calculator.blocks.json');\r\n        //         state.name = 'TEST';\r\n        //         loadState(state);\r\n        //     }}\r\n        // </BlocksEditor>\r\n    );\r\n}","// Derived from: https://stackoverflow.com/questions/326069/how-to-identify-if-a-webpage-is-being-loaded-inside-an-iframe-or-directly-into-t\r\n\r\nexport default function isEmbedded() {\r\n    try {\r\n        return window.self !== window.top;\r\n    }\r\n    catch(e) {\r\n        return true;\r\n    }\r\n};","import {useState} from 'react';\r\n\r\nexport default function useRedraw() {\r\n\r\n    let redraw = useState({})[1];\r\n\r\n    return () => redraw({});\r\n}\r\n","import styled from 'styled-components';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport React from 'react';\r\n\r\nconst ReactTooltipStyled = styled(ReactTooltip)`\r\n  padding: .5em 1em !important;\r\n`;\r\n\r\nexport default function GlobalTooltip() {\r\n    return (\r\n        <ReactTooltipStyled backgroundColor=\"#111\" place=\"bottom\" delayShow={300}/>\r\n    );\r\n};","export default function reportWebVitals(onPerfEntry) {\n    if(onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n}\n","import React, {useContext} from 'react';\r\nimport EditorPage from './pages/editor/EditorPage';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport EventsContext, {ERROR_EVENT} from '../contexts/EventsContext';\r\nimport useListener from '../hooks/useListener';\r\nimport GlobalTooltip from './GlobalTooltip';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\n\r\nexport default function App() {\r\n\r\n    let events = useContext(EventsContext);\r\n\r\n    useListener(events, ERROR_EVENT, err => {\r\n        toast(err, {\r\n            type: 'error',\r\n            // closeOnClick: true,\r\n        });\r\n    });\r\n\r\n    return (\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <GlobalTooltip/>\r\n                <ToastContainer/>\r\n                <EditorPage/>\r\n                {/*<Switch>*/}\r\n                {/*    <Route path=\"/editor\">*/}\r\n                {/*        <EditorPage/>*/}\r\n                {/*    </Route>*/}\r\n                {/*    <Route path=\"/\">*/}\r\n                {/*        <HomePage/>*/}\r\n                {/*    </Route>*/}\r\n                {/*</Switch>*/}\r\n            </BrowserRouter>\r\n        </React.StrictMode>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\nreportWebVitals((...args) => {\n    // console.log('WebVitals:', ...args);\n});\n"],"sourceRoot":""}